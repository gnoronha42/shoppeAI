
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model activity_log
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type activity_log = $Result.DefaultSelection<Prisma.$activity_logPayload>
/**
 * Model ad_metrics
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type ad_metrics = $Result.DefaultSelection<Prisma.$ad_metricsPayload>
/**
 * Model ai_requests
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type ai_requests = $Result.DefaultSelection<Prisma.$ai_requestsPayload>
/**
 * Model analyses
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type analyses = $Result.DefaultSelection<Prisma.$analysesPayload>
/**
 * Model analysis_results
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type analysis_results = $Result.DefaultSelection<Prisma.$analysis_resultsPayload>
/**
 * Model chat_conversations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type chat_conversations = $Result.DefaultSelection<Prisma.$chat_conversationsPayload>
/**
 * Model chat_messages
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type chat_messages = $Result.DefaultSelection<Prisma.$chat_messagesPayload>
/**
 * Model clients
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type clients = $Result.DefaultSelection<Prisma.$clientsPayload>
/**
 * Model configurations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type configurations = $Result.DefaultSelection<Prisma.$configurationsPayload>
/**
 * Model images
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type images = $Result.DefaultSelection<Prisma.$imagesPayload>
/**
 * Model products
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type products = $Result.DefaultSelection<Prisma.$productsPayload>
/**
 * Model report_metrics
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type report_metrics = $Result.DefaultSelection<Prisma.$report_metricsPayload>
/**
 * Model reports
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type reports = $Result.DefaultSelection<Prisma.$reportsPayload>
/**
 * Model users
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Activity_logs
 * const activity_logs = await prisma.activity_log.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Activity_logs
   * const activity_logs = await prisma.activity_log.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.activity_log`: Exposes CRUD operations for the **activity_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Activity_logs
    * const activity_logs = await prisma.activity_log.findMany()
    * ```
    */
  get activity_log(): Prisma.activity_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ad_metrics`: Exposes CRUD operations for the **ad_metrics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ad_metrics
    * const ad_metrics = await prisma.ad_metrics.findMany()
    * ```
    */
  get ad_metrics(): Prisma.ad_metricsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.ai_requests`: Exposes CRUD operations for the **ai_requests** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Ai_requests
    * const ai_requests = await prisma.ai_requests.findMany()
    * ```
    */
  get ai_requests(): Prisma.ai_requestsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.analyses`: Exposes CRUD operations for the **analyses** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Analyses
    * const analyses = await prisma.analyses.findMany()
    * ```
    */
  get analyses(): Prisma.analysesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.analysis_results`: Exposes CRUD operations for the **analysis_results** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Analysis_results
    * const analysis_results = await prisma.analysis_results.findMany()
    * ```
    */
  get analysis_results(): Prisma.analysis_resultsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_conversations`: Exposes CRUD operations for the **chat_conversations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_conversations
    * const chat_conversations = await prisma.chat_conversations.findMany()
    * ```
    */
  get chat_conversations(): Prisma.chat_conversationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_messages`: Exposes CRUD operations for the **chat_messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_messages
    * const chat_messages = await prisma.chat_messages.findMany()
    * ```
    */
  get chat_messages(): Prisma.chat_messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.clients`: Exposes CRUD operations for the **clients** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Clients
    * const clients = await prisma.clients.findMany()
    * ```
    */
  get clients(): Prisma.clientsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configurations`: Exposes CRUD operations for the **configurations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configurations
    * const configurations = await prisma.configurations.findMany()
    * ```
    */
  get configurations(): Prisma.configurationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.images`: Exposes CRUD operations for the **images** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Images
    * const images = await prisma.images.findMany()
    * ```
    */
  get images(): Prisma.imagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.report_metrics`: Exposes CRUD operations for the **report_metrics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Report_metrics
    * const report_metrics = await prisma.report_metrics.findMany()
    * ```
    */
  get report_metrics(): Prisma.report_metricsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reports`: Exposes CRUD operations for the **reports** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reports
    * const reports = await prisma.reports.findMany()
    * ```
    */
  get reports(): Prisma.reportsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.6.0
   * Query Engine version: f676762280b54cd07c770017ed3711ddde35f37a
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    activity_log: 'activity_log',
    ad_metrics: 'ad_metrics',
    ai_requests: 'ai_requests',
    analyses: 'analyses',
    analysis_results: 'analysis_results',
    chat_conversations: 'chat_conversations',
    chat_messages: 'chat_messages',
    clients: 'clients',
    configurations: 'configurations',
    images: 'images',
    products: 'products',
    report_metrics: 'report_metrics',
    reports: 'reports',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "activity_log" | "ad_metrics" | "ai_requests" | "analyses" | "analysis_results" | "chat_conversations" | "chat_messages" | "clients" | "configurations" | "images" | "products" | "report_metrics" | "reports" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      activity_log: {
        payload: Prisma.$activity_logPayload<ExtArgs>
        fields: Prisma.activity_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.activity_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.activity_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>
          }
          findFirst: {
            args: Prisma.activity_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.activity_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>
          }
          findMany: {
            args: Prisma.activity_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>[]
          }
          create: {
            args: Prisma.activity_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>
          }
          createMany: {
            args: Prisma.activity_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.activity_logCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>[]
          }
          delete: {
            args: Prisma.activity_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>
          }
          update: {
            args: Prisma.activity_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>
          }
          deleteMany: {
            args: Prisma.activity_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.activity_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.activity_logUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>[]
          }
          upsert: {
            args: Prisma.activity_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$activity_logPayload>
          }
          aggregate: {
            args: Prisma.Activity_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateActivity_log>
          }
          groupBy: {
            args: Prisma.activity_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Activity_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.activity_logCountArgs<ExtArgs>
            result: $Utils.Optional<Activity_logCountAggregateOutputType> | number
          }
        }
      }
      ad_metrics: {
        payload: Prisma.$ad_metricsPayload<ExtArgs>
        fields: Prisma.ad_metricsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ad_metricsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ad_metricsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>
          }
          findFirst: {
            args: Prisma.ad_metricsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ad_metricsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>
          }
          findMany: {
            args: Prisma.ad_metricsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>[]
          }
          create: {
            args: Prisma.ad_metricsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>
          }
          createMany: {
            args: Prisma.ad_metricsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ad_metricsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>[]
          }
          delete: {
            args: Prisma.ad_metricsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>
          }
          update: {
            args: Prisma.ad_metricsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>
          }
          deleteMany: {
            args: Prisma.ad_metricsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ad_metricsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ad_metricsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>[]
          }
          upsert: {
            args: Prisma.ad_metricsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ad_metricsPayload>
          }
          aggregate: {
            args: Prisma.Ad_metricsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAd_metrics>
          }
          groupBy: {
            args: Prisma.ad_metricsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ad_metricsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ad_metricsCountArgs<ExtArgs>
            result: $Utils.Optional<Ad_metricsCountAggregateOutputType> | number
          }
        }
      }
      ai_requests: {
        payload: Prisma.$ai_requestsPayload<ExtArgs>
        fields: Prisma.ai_requestsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ai_requestsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ai_requestsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>
          }
          findFirst: {
            args: Prisma.ai_requestsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ai_requestsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>
          }
          findMany: {
            args: Prisma.ai_requestsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>[]
          }
          create: {
            args: Prisma.ai_requestsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>
          }
          createMany: {
            args: Prisma.ai_requestsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ai_requestsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>[]
          }
          delete: {
            args: Prisma.ai_requestsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>
          }
          update: {
            args: Prisma.ai_requestsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>
          }
          deleteMany: {
            args: Prisma.ai_requestsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ai_requestsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ai_requestsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>[]
          }
          upsert: {
            args: Prisma.ai_requestsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ai_requestsPayload>
          }
          aggregate: {
            args: Prisma.Ai_requestsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAi_requests>
          }
          groupBy: {
            args: Prisma.ai_requestsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Ai_requestsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ai_requestsCountArgs<ExtArgs>
            result: $Utils.Optional<Ai_requestsCountAggregateOutputType> | number
          }
        }
      }
      analyses: {
        payload: Prisma.$analysesPayload<ExtArgs>
        fields: Prisma.analysesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.analysesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.analysesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>
          }
          findFirst: {
            args: Prisma.analysesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.analysesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>
          }
          findMany: {
            args: Prisma.analysesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>[]
          }
          create: {
            args: Prisma.analysesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>
          }
          createMany: {
            args: Prisma.analysesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.analysesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>[]
          }
          delete: {
            args: Prisma.analysesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>
          }
          update: {
            args: Prisma.analysesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>
          }
          deleteMany: {
            args: Prisma.analysesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.analysesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.analysesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>[]
          }
          upsert: {
            args: Prisma.analysesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysesPayload>
          }
          aggregate: {
            args: Prisma.AnalysesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnalyses>
          }
          groupBy: {
            args: Prisma.analysesGroupByArgs<ExtArgs>
            result: $Utils.Optional<AnalysesGroupByOutputType>[]
          }
          count: {
            args: Prisma.analysesCountArgs<ExtArgs>
            result: $Utils.Optional<AnalysesCountAggregateOutputType> | number
          }
        }
      }
      analysis_results: {
        payload: Prisma.$analysis_resultsPayload<ExtArgs>
        fields: Prisma.analysis_resultsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.analysis_resultsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.analysis_resultsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>
          }
          findFirst: {
            args: Prisma.analysis_resultsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.analysis_resultsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>
          }
          findMany: {
            args: Prisma.analysis_resultsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>[]
          }
          create: {
            args: Prisma.analysis_resultsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>
          }
          createMany: {
            args: Prisma.analysis_resultsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.analysis_resultsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>[]
          }
          delete: {
            args: Prisma.analysis_resultsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>
          }
          update: {
            args: Prisma.analysis_resultsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>
          }
          deleteMany: {
            args: Prisma.analysis_resultsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.analysis_resultsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.analysis_resultsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>[]
          }
          upsert: {
            args: Prisma.analysis_resultsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$analysis_resultsPayload>
          }
          aggregate: {
            args: Prisma.Analysis_resultsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAnalysis_results>
          }
          groupBy: {
            args: Prisma.analysis_resultsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Analysis_resultsGroupByOutputType>[]
          }
          count: {
            args: Prisma.analysis_resultsCountArgs<ExtArgs>
            result: $Utils.Optional<Analysis_resultsCountAggregateOutputType> | number
          }
        }
      }
      chat_conversations: {
        payload: Prisma.$chat_conversationsPayload<ExtArgs>
        fields: Prisma.chat_conversationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_conversationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_conversationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>
          }
          findFirst: {
            args: Prisma.chat_conversationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_conversationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>
          }
          findMany: {
            args: Prisma.chat_conversationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>[]
          }
          create: {
            args: Prisma.chat_conversationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>
          }
          createMany: {
            args: Prisma.chat_conversationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chat_conversationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>[]
          }
          delete: {
            args: Prisma.chat_conversationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>
          }
          update: {
            args: Prisma.chat_conversationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>
          }
          deleteMany: {
            args: Prisma.chat_conversationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_conversationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chat_conversationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>[]
          }
          upsert: {
            args: Prisma.chat_conversationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_conversationsPayload>
          }
          aggregate: {
            args: Prisma.Chat_conversationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_conversations>
          }
          groupBy: {
            args: Prisma.chat_conversationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_conversationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_conversationsCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_conversationsCountAggregateOutputType> | number
          }
        }
      }
      chat_messages: {
        payload: Prisma.$chat_messagesPayload<ExtArgs>
        fields: Prisma.chat_messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>
          }
          findFirst: {
            args: Prisma.chat_messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>
          }
          findMany: {
            args: Prisma.chat_messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>[]
          }
          create: {
            args: Prisma.chat_messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>
          }
          createMany: {
            args: Prisma.chat_messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chat_messagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>[]
          }
          delete: {
            args: Prisma.chat_messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>
          }
          update: {
            args: Prisma.chat_messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>
          }
          deleteMany: {
            args: Prisma.chat_messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chat_messagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>[]
          }
          upsert: {
            args: Prisma.chat_messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_messagesPayload>
          }
          aggregate: {
            args: Prisma.Chat_messagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_messages>
          }
          groupBy: {
            args: Prisma.chat_messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_messagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_messagesCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_messagesCountAggregateOutputType> | number
          }
        }
      }
      clients: {
        payload: Prisma.$clientsPayload<ExtArgs>
        fields: Prisma.clientsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.clientsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.clientsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          findFirst: {
            args: Prisma.clientsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.clientsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          findMany: {
            args: Prisma.clientsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          create: {
            args: Prisma.clientsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          createMany: {
            args: Prisma.clientsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.clientsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          delete: {
            args: Prisma.clientsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          update: {
            args: Prisma.clientsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          deleteMany: {
            args: Prisma.clientsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.clientsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.clientsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>[]
          }
          upsert: {
            args: Prisma.clientsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$clientsPayload>
          }
          aggregate: {
            args: Prisma.ClientsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClients>
          }
          groupBy: {
            args: Prisma.clientsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClientsGroupByOutputType>[]
          }
          count: {
            args: Prisma.clientsCountArgs<ExtArgs>
            result: $Utils.Optional<ClientsCountAggregateOutputType> | number
          }
        }
      }
      configurations: {
        payload: Prisma.$configurationsPayload<ExtArgs>
        fields: Prisma.configurationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configurationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configurationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          findFirst: {
            args: Prisma.configurationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configurationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          findMany: {
            args: Prisma.configurationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>[]
          }
          create: {
            args: Prisma.configurationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          createMany: {
            args: Prisma.configurationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.configurationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>[]
          }
          delete: {
            args: Prisma.configurationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          update: {
            args: Prisma.configurationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          deleteMany: {
            args: Prisma.configurationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.configurationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.configurationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>[]
          }
          upsert: {
            args: Prisma.configurationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          aggregate: {
            args: Prisma.ConfigurationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfigurations>
          }
          groupBy: {
            args: Prisma.configurationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfigurationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.configurationsCountArgs<ExtArgs>
            result: $Utils.Optional<ConfigurationsCountAggregateOutputType> | number
          }
        }
      }
      images: {
        payload: Prisma.$imagesPayload<ExtArgs>
        fields: Prisma.imagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          findFirst: {
            args: Prisma.imagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          findMany: {
            args: Prisma.imagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>[]
          }
          create: {
            args: Prisma.imagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          createMany: {
            args: Prisma.imagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.imagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>[]
          }
          delete: {
            args: Prisma.imagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          update: {
            args: Prisma.imagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          deleteMany: {
            args: Prisma.imagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.imagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.imagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>[]
          }
          upsert: {
            args: Prisma.imagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$imagesPayload>
          }
          aggregate: {
            args: Prisma.ImagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateImages>
          }
          groupBy: {
            args: Prisma.imagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ImagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.imagesCountArgs<ExtArgs>
            result: $Utils.Optional<ImagesCountAggregateOutputType> | number
          }
        }
      }
      products: {
        payload: Prisma.$productsPayload<ExtArgs>
        fields: Prisma.productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findFirst: {
            args: Prisma.productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findMany: {
            args: Prisma.productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          create: {
            args: Prisma.productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          createMany: {
            args: Prisma.productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          delete: {
            args: Prisma.productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          update: {
            args: Prisma.productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          deleteMany: {
            args: Prisma.productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          upsert: {
            args: Prisma.productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          aggregate: {
            args: Prisma.ProductsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts>
          }
          groupBy: {
            args: Prisma.productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductsGroupByOutputType>[]
          }
          count: {
            args: Prisma.productsCountArgs<ExtArgs>
            result: $Utils.Optional<ProductsCountAggregateOutputType> | number
          }
        }
      }
      report_metrics: {
        payload: Prisma.$report_metricsPayload<ExtArgs>
        fields: Prisma.report_metricsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.report_metricsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.report_metricsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>
          }
          findFirst: {
            args: Prisma.report_metricsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.report_metricsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>
          }
          findMany: {
            args: Prisma.report_metricsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>[]
          }
          create: {
            args: Prisma.report_metricsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>
          }
          createMany: {
            args: Prisma.report_metricsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.report_metricsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>[]
          }
          delete: {
            args: Prisma.report_metricsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>
          }
          update: {
            args: Prisma.report_metricsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>
          }
          deleteMany: {
            args: Prisma.report_metricsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.report_metricsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.report_metricsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>[]
          }
          upsert: {
            args: Prisma.report_metricsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$report_metricsPayload>
          }
          aggregate: {
            args: Prisma.Report_metricsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReport_metrics>
          }
          groupBy: {
            args: Prisma.report_metricsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Report_metricsGroupByOutputType>[]
          }
          count: {
            args: Prisma.report_metricsCountArgs<ExtArgs>
            result: $Utils.Optional<Report_metricsCountAggregateOutputType> | number
          }
        }
      }
      reports: {
        payload: Prisma.$reportsPayload<ExtArgs>
        fields: Prisma.reportsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.reportsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.reportsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          findFirst: {
            args: Prisma.reportsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.reportsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          findMany: {
            args: Prisma.reportsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>[]
          }
          create: {
            args: Prisma.reportsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          createMany: {
            args: Prisma.reportsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.reportsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>[]
          }
          delete: {
            args: Prisma.reportsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          update: {
            args: Prisma.reportsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          deleteMany: {
            args: Prisma.reportsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.reportsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.reportsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>[]
          }
          upsert: {
            args: Prisma.reportsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$reportsPayload>
          }
          aggregate: {
            args: Prisma.ReportsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReports>
          }
          groupBy: {
            args: Prisma.reportsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReportsGroupByOutputType>[]
          }
          count: {
            args: Prisma.reportsCountArgs<ExtArgs>
            result: $Utils.Optional<ReportsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    activity_log?: activity_logOmit
    ad_metrics?: ad_metricsOmit
    ai_requests?: ai_requestsOmit
    analyses?: analysesOmit
    analysis_results?: analysis_resultsOmit
    chat_conversations?: chat_conversationsOmit
    chat_messages?: chat_messagesOmit
    clients?: clientsOmit
    configurations?: configurationsOmit
    images?: imagesOmit
    products?: productsOmit
    report_metrics?: report_metricsOmit
    reports?: reportsOmit
    users?: usersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type AnalysesCountOutputType
   */

  export type AnalysesCountOutputType = {
    analysis_results: number
    images: number
    reports: number
  }

  export type AnalysesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analysis_results?: boolean | AnalysesCountOutputTypeCountAnalysis_resultsArgs
    images?: boolean | AnalysesCountOutputTypeCountImagesArgs
    reports?: boolean | AnalysesCountOutputTypeCountReportsArgs
  }

  // Custom InputTypes
  /**
   * AnalysesCountOutputType without action
   */
  export type AnalysesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AnalysesCountOutputType
     */
    select?: AnalysesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AnalysesCountOutputType without action
   */
  export type AnalysesCountOutputTypeCountAnalysis_resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: analysis_resultsWhereInput
  }

  /**
   * AnalysesCountOutputType without action
   */
  export type AnalysesCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagesWhereInput
  }

  /**
   * AnalysesCountOutputType without action
   */
  export type AnalysesCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportsWhereInput
  }


  /**
   * Count Type Chat_conversationsCountOutputType
   */

  export type Chat_conversationsCountOutputType = {
    chat_messages: number
  }

  export type Chat_conversationsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_messages?: boolean | Chat_conversationsCountOutputTypeCountChat_messagesArgs
  }

  // Custom InputTypes
  /**
   * Chat_conversationsCountOutputType without action
   */
  export type Chat_conversationsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat_conversationsCountOutputType
     */
    select?: Chat_conversationsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Chat_conversationsCountOutputType without action
   */
  export type Chat_conversationsCountOutputTypeCountChat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messagesWhereInput
  }


  /**
   * Count Type ClientsCountOutputType
   */

  export type ClientsCountOutputType = {
    activity_log: number
    ad_metrics: number
    ai_requests: number
    analyses: number
    chat_conversations: number
    chat_messages: number
    products: number
    reports: number
  }

  export type ClientsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activity_log?: boolean | ClientsCountOutputTypeCountActivity_logArgs
    ad_metrics?: boolean | ClientsCountOutputTypeCountAd_metricsArgs
    ai_requests?: boolean | ClientsCountOutputTypeCountAi_requestsArgs
    analyses?: boolean | ClientsCountOutputTypeCountAnalysesArgs
    chat_conversations?: boolean | ClientsCountOutputTypeCountChat_conversationsArgs
    chat_messages?: boolean | ClientsCountOutputTypeCountChat_messagesArgs
    products?: boolean | ClientsCountOutputTypeCountProductsArgs
    reports?: boolean | ClientsCountOutputTypeCountReportsArgs
  }

  // Custom InputTypes
  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClientsCountOutputType
     */
    select?: ClientsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountActivity_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: activity_logWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountAd_metricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ad_metricsWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountAi_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ai_requestsWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountAnalysesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: analysesWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountChat_conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_conversationsWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountChat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messagesWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }

  /**
   * ClientsCountOutputType without action
   */
  export type ClientsCountOutputTypeCountReportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportsWhereInput
  }


  /**
   * Count Type ProductsCountOutputType
   */

  export type ProductsCountOutputType = {
    ad_metrics: number
  }

  export type ProductsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ad_metrics?: boolean | ProductsCountOutputTypeCountAd_metricsArgs
  }

  // Custom InputTypes
  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     */
    select?: ProductsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountAd_metricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ad_metricsWhereInput
  }


  /**
   * Count Type ReportsCountOutputType
   */

  export type ReportsCountOutputType = {
    images: number
    report_metrics: number
  }

  export type ReportsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | ReportsCountOutputTypeCountImagesArgs
    report_metrics?: boolean | ReportsCountOutputTypeCountReport_metricsArgs
  }

  // Custom InputTypes
  /**
   * ReportsCountOutputType without action
   */
  export type ReportsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ReportsCountOutputType
     */
    select?: ReportsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ReportsCountOutputType without action
   */
  export type ReportsCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagesWhereInput
  }

  /**
   * ReportsCountOutputType without action
   */
  export type ReportsCountOutputTypeCountReport_metricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: report_metricsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    activity_log: number
    ai_requests: number
    chat_conversations: number
    chat_messages: number
    configurations: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activity_log?: boolean | UsersCountOutputTypeCountActivity_logArgs
    ai_requests?: boolean | UsersCountOutputTypeCountAi_requestsArgs
    chat_conversations?: boolean | UsersCountOutputTypeCountChat_conversationsArgs
    chat_messages?: boolean | UsersCountOutputTypeCountChat_messagesArgs
    configurations?: boolean | UsersCountOutputTypeCountConfigurationsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountActivity_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: activity_logWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountAi_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ai_requestsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountChat_conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_conversationsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountChat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messagesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountConfigurationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configurationsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model activity_log
   */

  export type AggregateActivity_log = {
    _count: Activity_logCountAggregateOutputType | null
    _min: Activity_logMinAggregateOutputType | null
    _max: Activity_logMaxAggregateOutputType | null
  }

  export type Activity_logMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    action: string | null
    entity_type: string | null
    entity_id: string | null
    created_at: Date | null
  }

  export type Activity_logMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    action: string | null
    entity_type: string | null
    entity_id: string | null
    created_at: Date | null
  }

  export type Activity_logCountAggregateOutputType = {
    id: number
    user_id: number
    client_id: number
    action: number
    entity_type: number
    entity_id: number
    details: number
    created_at: number
    _all: number
  }


  export type Activity_logMinAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    action?: true
    entity_type?: true
    entity_id?: true
    created_at?: true
  }

  export type Activity_logMaxAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    action?: true
    entity_type?: true
    entity_id?: true
    created_at?: true
  }

  export type Activity_logCountAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    action?: true
    entity_type?: true
    entity_id?: true
    details?: true
    created_at?: true
    _all?: true
  }

  export type Activity_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which activity_log to aggregate.
     */
    where?: activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_logs to fetch.
     */
    orderBy?: activity_logOrderByWithRelationInput | activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned activity_logs
    **/
    _count?: true | Activity_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Activity_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Activity_logMaxAggregateInputType
  }

  export type GetActivity_logAggregateType<T extends Activity_logAggregateArgs> = {
        [P in keyof T & keyof AggregateActivity_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateActivity_log[P]>
      : GetScalarType<T[P], AggregateActivity_log[P]>
  }




  export type activity_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: activity_logWhereInput
    orderBy?: activity_logOrderByWithAggregationInput | activity_logOrderByWithAggregationInput[]
    by: Activity_logScalarFieldEnum[] | Activity_logScalarFieldEnum
    having?: activity_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Activity_logCountAggregateInputType | true
    _min?: Activity_logMinAggregateInputType
    _max?: Activity_logMaxAggregateInputType
  }

  export type Activity_logGroupByOutputType = {
    id: string
    user_id: string | null
    client_id: string | null
    action: string
    entity_type: string
    entity_id: string | null
    details: JsonValue | null
    created_at: Date | null
    _count: Activity_logCountAggregateOutputType | null
    _min: Activity_logMinAggregateOutputType | null
    _max: Activity_logMaxAggregateOutputType | null
  }

  type GetActivity_logGroupByPayload<T extends activity_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Activity_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Activity_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Activity_logGroupByOutputType[P]>
            : GetScalarType<T[P], Activity_logGroupByOutputType[P]>
        }
      >
    >


  export type activity_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    action?: boolean
    entity_type?: boolean
    entity_id?: boolean
    details?: boolean
    created_at?: boolean
    clients?: boolean | activity_log$clientsArgs<ExtArgs>
    users?: boolean | activity_log$usersArgs<ExtArgs>
  }, ExtArgs["result"]["activity_log"]>

  export type activity_logSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    action?: boolean
    entity_type?: boolean
    entity_id?: boolean
    details?: boolean
    created_at?: boolean
    clients?: boolean | activity_log$clientsArgs<ExtArgs>
    users?: boolean | activity_log$usersArgs<ExtArgs>
  }, ExtArgs["result"]["activity_log"]>

  export type activity_logSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    action?: boolean
    entity_type?: boolean
    entity_id?: boolean
    details?: boolean
    created_at?: boolean
    clients?: boolean | activity_log$clientsArgs<ExtArgs>
    users?: boolean | activity_log$usersArgs<ExtArgs>
  }, ExtArgs["result"]["activity_log"]>

  export type activity_logSelectScalar = {
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    action?: boolean
    entity_type?: boolean
    entity_id?: boolean
    details?: boolean
    created_at?: boolean
  }

  export type activity_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "client_id" | "action" | "entity_type" | "entity_id" | "details" | "created_at", ExtArgs["result"]["activity_log"]>
  export type activity_logInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | activity_log$clientsArgs<ExtArgs>
    users?: boolean | activity_log$usersArgs<ExtArgs>
  }
  export type activity_logIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | activity_log$clientsArgs<ExtArgs>
    users?: boolean | activity_log$usersArgs<ExtArgs>
  }
  export type activity_logIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | activity_log$clientsArgs<ExtArgs>
    users?: boolean | activity_log$usersArgs<ExtArgs>
  }

  export type $activity_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "activity_log"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      client_id: string | null
      action: string
      entity_type: string
      entity_id: string | null
      details: Prisma.JsonValue | null
      created_at: Date | null
    }, ExtArgs["result"]["activity_log"]>
    composites: {}
  }

  type activity_logGetPayload<S extends boolean | null | undefined | activity_logDefaultArgs> = $Result.GetResult<Prisma.$activity_logPayload, S>

  type activity_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<activity_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Activity_logCountAggregateInputType | true
    }

  export interface activity_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['activity_log'], meta: { name: 'activity_log' } }
    /**
     * Find zero or one Activity_log that matches the filter.
     * @param {activity_logFindUniqueArgs} args - Arguments to find a Activity_log
     * @example
     * // Get one Activity_log
     * const activity_log = await prisma.activity_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends activity_logFindUniqueArgs>(args: SelectSubset<T, activity_logFindUniqueArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Activity_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {activity_logFindUniqueOrThrowArgs} args - Arguments to find a Activity_log
     * @example
     * // Get one Activity_log
     * const activity_log = await prisma.activity_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends activity_logFindUniqueOrThrowArgs>(args: SelectSubset<T, activity_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Activity_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_logFindFirstArgs} args - Arguments to find a Activity_log
     * @example
     * // Get one Activity_log
     * const activity_log = await prisma.activity_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends activity_logFindFirstArgs>(args?: SelectSubset<T, activity_logFindFirstArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Activity_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_logFindFirstOrThrowArgs} args - Arguments to find a Activity_log
     * @example
     * // Get one Activity_log
     * const activity_log = await prisma.activity_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends activity_logFindFirstOrThrowArgs>(args?: SelectSubset<T, activity_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Activity_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Activity_logs
     * const activity_logs = await prisma.activity_log.findMany()
     * 
     * // Get first 10 Activity_logs
     * const activity_logs = await prisma.activity_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const activity_logWithIdOnly = await prisma.activity_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends activity_logFindManyArgs>(args?: SelectSubset<T, activity_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Activity_log.
     * @param {activity_logCreateArgs} args - Arguments to create a Activity_log.
     * @example
     * // Create one Activity_log
     * const Activity_log = await prisma.activity_log.create({
     *   data: {
     *     // ... data to create a Activity_log
     *   }
     * })
     * 
     */
    create<T extends activity_logCreateArgs>(args: SelectSubset<T, activity_logCreateArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Activity_logs.
     * @param {activity_logCreateManyArgs} args - Arguments to create many Activity_logs.
     * @example
     * // Create many Activity_logs
     * const activity_log = await prisma.activity_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends activity_logCreateManyArgs>(args?: SelectSubset<T, activity_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Activity_logs and returns the data saved in the database.
     * @param {activity_logCreateManyAndReturnArgs} args - Arguments to create many Activity_logs.
     * @example
     * // Create many Activity_logs
     * const activity_log = await prisma.activity_log.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Activity_logs and only return the `id`
     * const activity_logWithIdOnly = await prisma.activity_log.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends activity_logCreateManyAndReturnArgs>(args?: SelectSubset<T, activity_logCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Activity_log.
     * @param {activity_logDeleteArgs} args - Arguments to delete one Activity_log.
     * @example
     * // Delete one Activity_log
     * const Activity_log = await prisma.activity_log.delete({
     *   where: {
     *     // ... filter to delete one Activity_log
     *   }
     * })
     * 
     */
    delete<T extends activity_logDeleteArgs>(args: SelectSubset<T, activity_logDeleteArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Activity_log.
     * @param {activity_logUpdateArgs} args - Arguments to update one Activity_log.
     * @example
     * // Update one Activity_log
     * const activity_log = await prisma.activity_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends activity_logUpdateArgs>(args: SelectSubset<T, activity_logUpdateArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Activity_logs.
     * @param {activity_logDeleteManyArgs} args - Arguments to filter Activity_logs to delete.
     * @example
     * // Delete a few Activity_logs
     * const { count } = await prisma.activity_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends activity_logDeleteManyArgs>(args?: SelectSubset<T, activity_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Activity_logs
     * const activity_log = await prisma.activity_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends activity_logUpdateManyArgs>(args: SelectSubset<T, activity_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Activity_logs and returns the data updated in the database.
     * @param {activity_logUpdateManyAndReturnArgs} args - Arguments to update many Activity_logs.
     * @example
     * // Update many Activity_logs
     * const activity_log = await prisma.activity_log.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Activity_logs and only return the `id`
     * const activity_logWithIdOnly = await prisma.activity_log.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends activity_logUpdateManyAndReturnArgs>(args: SelectSubset<T, activity_logUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Activity_log.
     * @param {activity_logUpsertArgs} args - Arguments to update or create a Activity_log.
     * @example
     * // Update or create a Activity_log
     * const activity_log = await prisma.activity_log.upsert({
     *   create: {
     *     // ... data to create a Activity_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Activity_log we want to update
     *   }
     * })
     */
    upsert<T extends activity_logUpsertArgs>(args: SelectSubset<T, activity_logUpsertArgs<ExtArgs>>): Prisma__activity_logClient<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Activity_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_logCountArgs} args - Arguments to filter Activity_logs to count.
     * @example
     * // Count the number of Activity_logs
     * const count = await prisma.activity_log.count({
     *   where: {
     *     // ... the filter for the Activity_logs we want to count
     *   }
     * })
    **/
    count<T extends activity_logCountArgs>(
      args?: Subset<T, activity_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Activity_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Activity_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Activity_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Activity_logAggregateArgs>(args: Subset<T, Activity_logAggregateArgs>): Prisma.PrismaPromise<GetActivity_logAggregateType<T>>

    /**
     * Group by Activity_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {activity_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends activity_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: activity_logGroupByArgs['orderBy'] }
        : { orderBy?: activity_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, activity_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetActivity_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the activity_log model
   */
  readonly fields: activity_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for activity_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__activity_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends activity_log$clientsArgs<ExtArgs> = {}>(args?: Subset<T, activity_log$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends activity_log$usersArgs<ExtArgs> = {}>(args?: Subset<T, activity_log$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the activity_log model
   */
  interface activity_logFieldRefs {
    readonly id: FieldRef<"activity_log", 'String'>
    readonly user_id: FieldRef<"activity_log", 'String'>
    readonly client_id: FieldRef<"activity_log", 'String'>
    readonly action: FieldRef<"activity_log", 'String'>
    readonly entity_type: FieldRef<"activity_log", 'String'>
    readonly entity_id: FieldRef<"activity_log", 'String'>
    readonly details: FieldRef<"activity_log", 'Json'>
    readonly created_at: FieldRef<"activity_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * activity_log findUnique
   */
  export type activity_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * Filter, which activity_log to fetch.
     */
    where: activity_logWhereUniqueInput
  }

  /**
   * activity_log findUniqueOrThrow
   */
  export type activity_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * Filter, which activity_log to fetch.
     */
    where: activity_logWhereUniqueInput
  }

  /**
   * activity_log findFirst
   */
  export type activity_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * Filter, which activity_log to fetch.
     */
    where?: activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_logs to fetch.
     */
    orderBy?: activity_logOrderByWithRelationInput | activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_logs.
     */
    cursor?: activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_logs.
     */
    distinct?: Activity_logScalarFieldEnum | Activity_logScalarFieldEnum[]
  }

  /**
   * activity_log findFirstOrThrow
   */
  export type activity_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * Filter, which activity_log to fetch.
     */
    where?: activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_logs to fetch.
     */
    orderBy?: activity_logOrderByWithRelationInput | activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for activity_logs.
     */
    cursor?: activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of activity_logs.
     */
    distinct?: Activity_logScalarFieldEnum | Activity_logScalarFieldEnum[]
  }

  /**
   * activity_log findMany
   */
  export type activity_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * Filter, which activity_logs to fetch.
     */
    where?: activity_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of activity_logs to fetch.
     */
    orderBy?: activity_logOrderByWithRelationInput | activity_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing activity_logs.
     */
    cursor?: activity_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` activity_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` activity_logs.
     */
    skip?: number
    distinct?: Activity_logScalarFieldEnum | Activity_logScalarFieldEnum[]
  }

  /**
   * activity_log create
   */
  export type activity_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * The data needed to create a activity_log.
     */
    data: XOR<activity_logCreateInput, activity_logUncheckedCreateInput>
  }

  /**
   * activity_log createMany
   */
  export type activity_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many activity_logs.
     */
    data: activity_logCreateManyInput | activity_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * activity_log createManyAndReturn
   */
  export type activity_logCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * The data used to create many activity_logs.
     */
    data: activity_logCreateManyInput | activity_logCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * activity_log update
   */
  export type activity_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * The data needed to update a activity_log.
     */
    data: XOR<activity_logUpdateInput, activity_logUncheckedUpdateInput>
    /**
     * Choose, which activity_log to update.
     */
    where: activity_logWhereUniqueInput
  }

  /**
   * activity_log updateMany
   */
  export type activity_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update activity_logs.
     */
    data: XOR<activity_logUpdateManyMutationInput, activity_logUncheckedUpdateManyInput>
    /**
     * Filter which activity_logs to update
     */
    where?: activity_logWhereInput
    /**
     * Limit how many activity_logs to update.
     */
    limit?: number
  }

  /**
   * activity_log updateManyAndReturn
   */
  export type activity_logUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * The data used to update activity_logs.
     */
    data: XOR<activity_logUpdateManyMutationInput, activity_logUncheckedUpdateManyInput>
    /**
     * Filter which activity_logs to update
     */
    where?: activity_logWhereInput
    /**
     * Limit how many activity_logs to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * activity_log upsert
   */
  export type activity_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * The filter to search for the activity_log to update in case it exists.
     */
    where: activity_logWhereUniqueInput
    /**
     * In case the activity_log found by the `where` argument doesn't exist, create a new activity_log with this data.
     */
    create: XOR<activity_logCreateInput, activity_logUncheckedCreateInput>
    /**
     * In case the activity_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<activity_logUpdateInput, activity_logUncheckedUpdateInput>
  }

  /**
   * activity_log delete
   */
  export type activity_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    /**
     * Filter which activity_log to delete.
     */
    where: activity_logWhereUniqueInput
  }

  /**
   * activity_log deleteMany
   */
  export type activity_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which activity_logs to delete
     */
    where?: activity_logWhereInput
    /**
     * Limit how many activity_logs to delete.
     */
    limit?: number
  }

  /**
   * activity_log.clients
   */
  export type activity_log$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * activity_log.users
   */
  export type activity_log$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * activity_log without action
   */
  export type activity_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
  }


  /**
   * Model ad_metrics
   */

  export type AggregateAd_metrics = {
    _count: Ad_metricsCountAggregateOutputType | null
    _avg: Ad_metricsAvgAggregateOutputType | null
    _sum: Ad_metricsSumAggregateOutputType | null
    _min: Ad_metricsMinAggregateOutputType | null
    _max: Ad_metricsMaxAggregateOutputType | null
  }

  export type Ad_metricsAvgAggregateOutputType = {
    impressions: number | null
    clicks: number | null
    ctr: Decimal | null
    spend: Decimal | null
    conversions: number | null
    roas: Decimal | null
  }

  export type Ad_metricsSumAggregateOutputType = {
    impressions: number | null
    clicks: number | null
    ctr: Decimal | null
    spend: Decimal | null
    conversions: number | null
    roas: Decimal | null
  }

  export type Ad_metricsMinAggregateOutputType = {
    id: string | null
    client_id: string | null
    product_id: string | null
    ad_type: string | null
    impressions: number | null
    clicks: number | null
    ctr: Decimal | null
    spend: Decimal | null
    conversions: number | null
    roas: Decimal | null
    date: Date | null
    created_at: Date | null
  }

  export type Ad_metricsMaxAggregateOutputType = {
    id: string | null
    client_id: string | null
    product_id: string | null
    ad_type: string | null
    impressions: number | null
    clicks: number | null
    ctr: Decimal | null
    spend: Decimal | null
    conversions: number | null
    roas: Decimal | null
    date: Date | null
    created_at: Date | null
  }

  export type Ad_metricsCountAggregateOutputType = {
    id: number
    client_id: number
    product_id: number
    ad_type: number
    impressions: number
    clicks: number
    ctr: number
    spend: number
    conversions: number
    roas: number
    date: number
    created_at: number
    _all: number
  }


  export type Ad_metricsAvgAggregateInputType = {
    impressions?: true
    clicks?: true
    ctr?: true
    spend?: true
    conversions?: true
    roas?: true
  }

  export type Ad_metricsSumAggregateInputType = {
    impressions?: true
    clicks?: true
    ctr?: true
    spend?: true
    conversions?: true
    roas?: true
  }

  export type Ad_metricsMinAggregateInputType = {
    id?: true
    client_id?: true
    product_id?: true
    ad_type?: true
    impressions?: true
    clicks?: true
    ctr?: true
    spend?: true
    conversions?: true
    roas?: true
    date?: true
    created_at?: true
  }

  export type Ad_metricsMaxAggregateInputType = {
    id?: true
    client_id?: true
    product_id?: true
    ad_type?: true
    impressions?: true
    clicks?: true
    ctr?: true
    spend?: true
    conversions?: true
    roas?: true
    date?: true
    created_at?: true
  }

  export type Ad_metricsCountAggregateInputType = {
    id?: true
    client_id?: true
    product_id?: true
    ad_type?: true
    impressions?: true
    clicks?: true
    ctr?: true
    spend?: true
    conversions?: true
    roas?: true
    date?: true
    created_at?: true
    _all?: true
  }

  export type Ad_metricsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ad_metrics to aggregate.
     */
    where?: ad_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ad_metrics to fetch.
     */
    orderBy?: ad_metricsOrderByWithRelationInput | ad_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ad_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ad_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ad_metrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ad_metrics
    **/
    _count?: true | Ad_metricsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ad_metricsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ad_metricsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ad_metricsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ad_metricsMaxAggregateInputType
  }

  export type GetAd_metricsAggregateType<T extends Ad_metricsAggregateArgs> = {
        [P in keyof T & keyof AggregateAd_metrics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAd_metrics[P]>
      : GetScalarType<T[P], AggregateAd_metrics[P]>
  }




  export type ad_metricsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ad_metricsWhereInput
    orderBy?: ad_metricsOrderByWithAggregationInput | ad_metricsOrderByWithAggregationInput[]
    by: Ad_metricsScalarFieldEnum[] | Ad_metricsScalarFieldEnum
    having?: ad_metricsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ad_metricsCountAggregateInputType | true
    _avg?: Ad_metricsAvgAggregateInputType
    _sum?: Ad_metricsSumAggregateInputType
    _min?: Ad_metricsMinAggregateInputType
    _max?: Ad_metricsMaxAggregateInputType
  }

  export type Ad_metricsGroupByOutputType = {
    id: string
    client_id: string
    product_id: string | null
    ad_type: string
    impressions: number | null
    clicks: number | null
    ctr: Decimal | null
    spend: Decimal | null
    conversions: number | null
    roas: Decimal | null
    date: Date
    created_at: Date | null
    _count: Ad_metricsCountAggregateOutputType | null
    _avg: Ad_metricsAvgAggregateOutputType | null
    _sum: Ad_metricsSumAggregateOutputType | null
    _min: Ad_metricsMinAggregateOutputType | null
    _max: Ad_metricsMaxAggregateOutputType | null
  }

  type GetAd_metricsGroupByPayload<T extends ad_metricsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ad_metricsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ad_metricsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ad_metricsGroupByOutputType[P]>
            : GetScalarType<T[P], Ad_metricsGroupByOutputType[P]>
        }
      >
    >


  export type ad_metricsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    ad_type?: boolean
    impressions?: boolean
    clicks?: boolean
    ctr?: boolean
    spend?: boolean
    conversions?: boolean
    roas?: boolean
    date?: boolean
    created_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    products?: boolean | ad_metrics$productsArgs<ExtArgs>
  }, ExtArgs["result"]["ad_metrics"]>

  export type ad_metricsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    ad_type?: boolean
    impressions?: boolean
    clicks?: boolean
    ctr?: boolean
    spend?: boolean
    conversions?: boolean
    roas?: boolean
    date?: boolean
    created_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    products?: boolean | ad_metrics$productsArgs<ExtArgs>
  }, ExtArgs["result"]["ad_metrics"]>

  export type ad_metricsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    ad_type?: boolean
    impressions?: boolean
    clicks?: boolean
    ctr?: boolean
    spend?: boolean
    conversions?: boolean
    roas?: boolean
    date?: boolean
    created_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    products?: boolean | ad_metrics$productsArgs<ExtArgs>
  }, ExtArgs["result"]["ad_metrics"]>

  export type ad_metricsSelectScalar = {
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    ad_type?: boolean
    impressions?: boolean
    clicks?: boolean
    ctr?: boolean
    spend?: boolean
    conversions?: boolean
    roas?: boolean
    date?: boolean
    created_at?: boolean
  }

  export type ad_metricsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "client_id" | "product_id" | "ad_type" | "impressions" | "clicks" | "ctr" | "spend" | "conversions" | "roas" | "date" | "created_at", ExtArgs["result"]["ad_metrics"]>
  export type ad_metricsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    products?: boolean | ad_metrics$productsArgs<ExtArgs>
  }
  export type ad_metricsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    products?: boolean | ad_metrics$productsArgs<ExtArgs>
  }
  export type ad_metricsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    products?: boolean | ad_metrics$productsArgs<ExtArgs>
  }

  export type $ad_metricsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ad_metrics"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs>
      products: Prisma.$productsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      client_id: string
      product_id: string | null
      ad_type: string
      impressions: number | null
      clicks: number | null
      ctr: Prisma.Decimal | null
      spend: Prisma.Decimal | null
      conversions: number | null
      roas: Prisma.Decimal | null
      date: Date
      created_at: Date | null
    }, ExtArgs["result"]["ad_metrics"]>
    composites: {}
  }

  type ad_metricsGetPayload<S extends boolean | null | undefined | ad_metricsDefaultArgs> = $Result.GetResult<Prisma.$ad_metricsPayload, S>

  type ad_metricsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ad_metricsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ad_metricsCountAggregateInputType | true
    }

  export interface ad_metricsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ad_metrics'], meta: { name: 'ad_metrics' } }
    /**
     * Find zero or one Ad_metrics that matches the filter.
     * @param {ad_metricsFindUniqueArgs} args - Arguments to find a Ad_metrics
     * @example
     * // Get one Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ad_metricsFindUniqueArgs>(args: SelectSubset<T, ad_metricsFindUniqueArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ad_metrics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ad_metricsFindUniqueOrThrowArgs} args - Arguments to find a Ad_metrics
     * @example
     * // Get one Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ad_metricsFindUniqueOrThrowArgs>(args: SelectSubset<T, ad_metricsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ad_metrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ad_metricsFindFirstArgs} args - Arguments to find a Ad_metrics
     * @example
     * // Get one Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ad_metricsFindFirstArgs>(args?: SelectSubset<T, ad_metricsFindFirstArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ad_metrics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ad_metricsFindFirstOrThrowArgs} args - Arguments to find a Ad_metrics
     * @example
     * // Get one Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ad_metricsFindFirstOrThrowArgs>(args?: SelectSubset<T, ad_metricsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ad_metrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ad_metricsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.findMany()
     * 
     * // Get first 10 Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ad_metricsWithIdOnly = await prisma.ad_metrics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ad_metricsFindManyArgs>(args?: SelectSubset<T, ad_metricsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ad_metrics.
     * @param {ad_metricsCreateArgs} args - Arguments to create a Ad_metrics.
     * @example
     * // Create one Ad_metrics
     * const Ad_metrics = await prisma.ad_metrics.create({
     *   data: {
     *     // ... data to create a Ad_metrics
     *   }
     * })
     * 
     */
    create<T extends ad_metricsCreateArgs>(args: SelectSubset<T, ad_metricsCreateArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ad_metrics.
     * @param {ad_metricsCreateManyArgs} args - Arguments to create many Ad_metrics.
     * @example
     * // Create many Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ad_metricsCreateManyArgs>(args?: SelectSubset<T, ad_metricsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ad_metrics and returns the data saved in the database.
     * @param {ad_metricsCreateManyAndReturnArgs} args - Arguments to create many Ad_metrics.
     * @example
     * // Create many Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ad_metrics and only return the `id`
     * const ad_metricsWithIdOnly = await prisma.ad_metrics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ad_metricsCreateManyAndReturnArgs>(args?: SelectSubset<T, ad_metricsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ad_metrics.
     * @param {ad_metricsDeleteArgs} args - Arguments to delete one Ad_metrics.
     * @example
     * // Delete one Ad_metrics
     * const Ad_metrics = await prisma.ad_metrics.delete({
     *   where: {
     *     // ... filter to delete one Ad_metrics
     *   }
     * })
     * 
     */
    delete<T extends ad_metricsDeleteArgs>(args: SelectSubset<T, ad_metricsDeleteArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ad_metrics.
     * @param {ad_metricsUpdateArgs} args - Arguments to update one Ad_metrics.
     * @example
     * // Update one Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ad_metricsUpdateArgs>(args: SelectSubset<T, ad_metricsUpdateArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ad_metrics.
     * @param {ad_metricsDeleteManyArgs} args - Arguments to filter Ad_metrics to delete.
     * @example
     * // Delete a few Ad_metrics
     * const { count } = await prisma.ad_metrics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ad_metricsDeleteManyArgs>(args?: SelectSubset<T, ad_metricsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ad_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ad_metricsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ad_metricsUpdateManyArgs>(args: SelectSubset<T, ad_metricsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ad_metrics and returns the data updated in the database.
     * @param {ad_metricsUpdateManyAndReturnArgs} args - Arguments to update many Ad_metrics.
     * @example
     * // Update many Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ad_metrics and only return the `id`
     * const ad_metricsWithIdOnly = await prisma.ad_metrics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ad_metricsUpdateManyAndReturnArgs>(args: SelectSubset<T, ad_metricsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ad_metrics.
     * @param {ad_metricsUpsertArgs} args - Arguments to update or create a Ad_metrics.
     * @example
     * // Update or create a Ad_metrics
     * const ad_metrics = await prisma.ad_metrics.upsert({
     *   create: {
     *     // ... data to create a Ad_metrics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ad_metrics we want to update
     *   }
     * })
     */
    upsert<T extends ad_metricsUpsertArgs>(args: SelectSubset<T, ad_metricsUpsertArgs<ExtArgs>>): Prisma__ad_metricsClient<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ad_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ad_metricsCountArgs} args - Arguments to filter Ad_metrics to count.
     * @example
     * // Count the number of Ad_metrics
     * const count = await prisma.ad_metrics.count({
     *   where: {
     *     // ... the filter for the Ad_metrics we want to count
     *   }
     * })
    **/
    count<T extends ad_metricsCountArgs>(
      args?: Subset<T, ad_metricsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ad_metricsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ad_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ad_metricsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ad_metricsAggregateArgs>(args: Subset<T, Ad_metricsAggregateArgs>): Prisma.PrismaPromise<GetAd_metricsAggregateType<T>>

    /**
     * Group by Ad_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ad_metricsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ad_metricsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ad_metricsGroupByArgs['orderBy'] }
        : { orderBy?: ad_metricsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ad_metricsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAd_metricsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ad_metrics model
   */
  readonly fields: ad_metricsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ad_metrics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ad_metricsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends clientsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clientsDefaultArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends ad_metrics$productsArgs<ExtArgs> = {}>(args?: Subset<T, ad_metrics$productsArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ad_metrics model
   */
  interface ad_metricsFieldRefs {
    readonly id: FieldRef<"ad_metrics", 'String'>
    readonly client_id: FieldRef<"ad_metrics", 'String'>
    readonly product_id: FieldRef<"ad_metrics", 'String'>
    readonly ad_type: FieldRef<"ad_metrics", 'String'>
    readonly impressions: FieldRef<"ad_metrics", 'Int'>
    readonly clicks: FieldRef<"ad_metrics", 'Int'>
    readonly ctr: FieldRef<"ad_metrics", 'Decimal'>
    readonly spend: FieldRef<"ad_metrics", 'Decimal'>
    readonly conversions: FieldRef<"ad_metrics", 'Int'>
    readonly roas: FieldRef<"ad_metrics", 'Decimal'>
    readonly date: FieldRef<"ad_metrics", 'DateTime'>
    readonly created_at: FieldRef<"ad_metrics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ad_metrics findUnique
   */
  export type ad_metricsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * Filter, which ad_metrics to fetch.
     */
    where: ad_metricsWhereUniqueInput
  }

  /**
   * ad_metrics findUniqueOrThrow
   */
  export type ad_metricsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * Filter, which ad_metrics to fetch.
     */
    where: ad_metricsWhereUniqueInput
  }

  /**
   * ad_metrics findFirst
   */
  export type ad_metricsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * Filter, which ad_metrics to fetch.
     */
    where?: ad_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ad_metrics to fetch.
     */
    orderBy?: ad_metricsOrderByWithRelationInput | ad_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ad_metrics.
     */
    cursor?: ad_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ad_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ad_metrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ad_metrics.
     */
    distinct?: Ad_metricsScalarFieldEnum | Ad_metricsScalarFieldEnum[]
  }

  /**
   * ad_metrics findFirstOrThrow
   */
  export type ad_metricsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * Filter, which ad_metrics to fetch.
     */
    where?: ad_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ad_metrics to fetch.
     */
    orderBy?: ad_metricsOrderByWithRelationInput | ad_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ad_metrics.
     */
    cursor?: ad_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ad_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ad_metrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ad_metrics.
     */
    distinct?: Ad_metricsScalarFieldEnum | Ad_metricsScalarFieldEnum[]
  }

  /**
   * ad_metrics findMany
   */
  export type ad_metricsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * Filter, which ad_metrics to fetch.
     */
    where?: ad_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ad_metrics to fetch.
     */
    orderBy?: ad_metricsOrderByWithRelationInput | ad_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ad_metrics.
     */
    cursor?: ad_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ad_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ad_metrics.
     */
    skip?: number
    distinct?: Ad_metricsScalarFieldEnum | Ad_metricsScalarFieldEnum[]
  }

  /**
   * ad_metrics create
   */
  export type ad_metricsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * The data needed to create a ad_metrics.
     */
    data: XOR<ad_metricsCreateInput, ad_metricsUncheckedCreateInput>
  }

  /**
   * ad_metrics createMany
   */
  export type ad_metricsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ad_metrics.
     */
    data: ad_metricsCreateManyInput | ad_metricsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ad_metrics createManyAndReturn
   */
  export type ad_metricsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * The data used to create many ad_metrics.
     */
    data: ad_metricsCreateManyInput | ad_metricsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ad_metrics update
   */
  export type ad_metricsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * The data needed to update a ad_metrics.
     */
    data: XOR<ad_metricsUpdateInput, ad_metricsUncheckedUpdateInput>
    /**
     * Choose, which ad_metrics to update.
     */
    where: ad_metricsWhereUniqueInput
  }

  /**
   * ad_metrics updateMany
   */
  export type ad_metricsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ad_metrics.
     */
    data: XOR<ad_metricsUpdateManyMutationInput, ad_metricsUncheckedUpdateManyInput>
    /**
     * Filter which ad_metrics to update
     */
    where?: ad_metricsWhereInput
    /**
     * Limit how many ad_metrics to update.
     */
    limit?: number
  }

  /**
   * ad_metrics updateManyAndReturn
   */
  export type ad_metricsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * The data used to update ad_metrics.
     */
    data: XOR<ad_metricsUpdateManyMutationInput, ad_metricsUncheckedUpdateManyInput>
    /**
     * Filter which ad_metrics to update
     */
    where?: ad_metricsWhereInput
    /**
     * Limit how many ad_metrics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ad_metrics upsert
   */
  export type ad_metricsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * The filter to search for the ad_metrics to update in case it exists.
     */
    where: ad_metricsWhereUniqueInput
    /**
     * In case the ad_metrics found by the `where` argument doesn't exist, create a new ad_metrics with this data.
     */
    create: XOR<ad_metricsCreateInput, ad_metricsUncheckedCreateInput>
    /**
     * In case the ad_metrics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ad_metricsUpdateInput, ad_metricsUncheckedUpdateInput>
  }

  /**
   * ad_metrics delete
   */
  export type ad_metricsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    /**
     * Filter which ad_metrics to delete.
     */
    where: ad_metricsWhereUniqueInput
  }

  /**
   * ad_metrics deleteMany
   */
  export type ad_metricsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ad_metrics to delete
     */
    where?: ad_metricsWhereInput
    /**
     * Limit how many ad_metrics to delete.
     */
    limit?: number
  }

  /**
   * ad_metrics.products
   */
  export type ad_metrics$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
  }

  /**
   * ad_metrics without action
   */
  export type ad_metricsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
  }


  /**
   * Model ai_requests
   */

  export type AggregateAi_requests = {
    _count: Ai_requestsCountAggregateOutputType | null
    _avg: Ai_requestsAvgAggregateOutputType | null
    _sum: Ai_requestsSumAggregateOutputType | null
    _min: Ai_requestsMinAggregateOutputType | null
    _max: Ai_requestsMaxAggregateOutputType | null
  }

  export type Ai_requestsAvgAggregateOutputType = {
    tokens_used: number | null
    processing_time: number | null
  }

  export type Ai_requestsSumAggregateOutputType = {
    tokens_used: number | null
    processing_time: number | null
  }

  export type Ai_requestsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    prompt: string | null
    response: string | null
    model: string | null
    tokens_used: number | null
    processing_time: number | null
    created_at: Date | null
  }

  export type Ai_requestsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    prompt: string | null
    response: string | null
    model: string | null
    tokens_used: number | null
    processing_time: number | null
    created_at: Date | null
  }

  export type Ai_requestsCountAggregateOutputType = {
    id: number
    user_id: number
    client_id: number
    prompt: number
    response: number
    model: number
    tokens_used: number
    processing_time: number
    created_at: number
    _all: number
  }


  export type Ai_requestsAvgAggregateInputType = {
    tokens_used?: true
    processing_time?: true
  }

  export type Ai_requestsSumAggregateInputType = {
    tokens_used?: true
    processing_time?: true
  }

  export type Ai_requestsMinAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    prompt?: true
    response?: true
    model?: true
    tokens_used?: true
    processing_time?: true
    created_at?: true
  }

  export type Ai_requestsMaxAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    prompt?: true
    response?: true
    model?: true
    tokens_used?: true
    processing_time?: true
    created_at?: true
  }

  export type Ai_requestsCountAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    prompt?: true
    response?: true
    model?: true
    tokens_used?: true
    processing_time?: true
    created_at?: true
    _all?: true
  }

  export type Ai_requestsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ai_requests to aggregate.
     */
    where?: ai_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_requests to fetch.
     */
    orderBy?: ai_requestsOrderByWithRelationInput | ai_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ai_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ai_requests
    **/
    _count?: true | Ai_requestsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Ai_requestsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Ai_requestsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Ai_requestsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Ai_requestsMaxAggregateInputType
  }

  export type GetAi_requestsAggregateType<T extends Ai_requestsAggregateArgs> = {
        [P in keyof T & keyof AggregateAi_requests]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAi_requests[P]>
      : GetScalarType<T[P], AggregateAi_requests[P]>
  }




  export type ai_requestsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ai_requestsWhereInput
    orderBy?: ai_requestsOrderByWithAggregationInput | ai_requestsOrderByWithAggregationInput[]
    by: Ai_requestsScalarFieldEnum[] | Ai_requestsScalarFieldEnum
    having?: ai_requestsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Ai_requestsCountAggregateInputType | true
    _avg?: Ai_requestsAvgAggregateInputType
    _sum?: Ai_requestsSumAggregateInputType
    _min?: Ai_requestsMinAggregateInputType
    _max?: Ai_requestsMaxAggregateInputType
  }

  export type Ai_requestsGroupByOutputType = {
    id: string
    user_id: string | null
    client_id: string | null
    prompt: string
    response: string | null
    model: string | null
    tokens_used: number | null
    processing_time: number | null
    created_at: Date | null
    _count: Ai_requestsCountAggregateOutputType | null
    _avg: Ai_requestsAvgAggregateOutputType | null
    _sum: Ai_requestsSumAggregateOutputType | null
    _min: Ai_requestsMinAggregateOutputType | null
    _max: Ai_requestsMaxAggregateOutputType | null
  }

  type GetAi_requestsGroupByPayload<T extends ai_requestsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Ai_requestsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Ai_requestsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Ai_requestsGroupByOutputType[P]>
            : GetScalarType<T[P], Ai_requestsGroupByOutputType[P]>
        }
      >
    >


  export type ai_requestsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    prompt?: boolean
    response?: boolean
    model?: boolean
    tokens_used?: boolean
    processing_time?: boolean
    created_at?: boolean
    clients?: boolean | ai_requests$clientsArgs<ExtArgs>
    users?: boolean | ai_requests$usersArgs<ExtArgs>
  }, ExtArgs["result"]["ai_requests"]>

  export type ai_requestsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    prompt?: boolean
    response?: boolean
    model?: boolean
    tokens_used?: boolean
    processing_time?: boolean
    created_at?: boolean
    clients?: boolean | ai_requests$clientsArgs<ExtArgs>
    users?: boolean | ai_requests$usersArgs<ExtArgs>
  }, ExtArgs["result"]["ai_requests"]>

  export type ai_requestsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    prompt?: boolean
    response?: boolean
    model?: boolean
    tokens_used?: boolean
    processing_time?: boolean
    created_at?: boolean
    clients?: boolean | ai_requests$clientsArgs<ExtArgs>
    users?: boolean | ai_requests$usersArgs<ExtArgs>
  }, ExtArgs["result"]["ai_requests"]>

  export type ai_requestsSelectScalar = {
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    prompt?: boolean
    response?: boolean
    model?: boolean
    tokens_used?: boolean
    processing_time?: boolean
    created_at?: boolean
  }

  export type ai_requestsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "client_id" | "prompt" | "response" | "model" | "tokens_used" | "processing_time" | "created_at", ExtArgs["result"]["ai_requests"]>
  export type ai_requestsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | ai_requests$clientsArgs<ExtArgs>
    users?: boolean | ai_requests$usersArgs<ExtArgs>
  }
  export type ai_requestsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | ai_requests$clientsArgs<ExtArgs>
    users?: boolean | ai_requests$usersArgs<ExtArgs>
  }
  export type ai_requestsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | ai_requests$clientsArgs<ExtArgs>
    users?: boolean | ai_requests$usersArgs<ExtArgs>
  }

  export type $ai_requestsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ai_requests"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      client_id: string | null
      prompt: string
      response: string | null
      model: string | null
      tokens_used: number | null
      processing_time: number | null
      created_at: Date | null
    }, ExtArgs["result"]["ai_requests"]>
    composites: {}
  }

  type ai_requestsGetPayload<S extends boolean | null | undefined | ai_requestsDefaultArgs> = $Result.GetResult<Prisma.$ai_requestsPayload, S>

  type ai_requestsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ai_requestsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Ai_requestsCountAggregateInputType | true
    }

  export interface ai_requestsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ai_requests'], meta: { name: 'ai_requests' } }
    /**
     * Find zero or one Ai_requests that matches the filter.
     * @param {ai_requestsFindUniqueArgs} args - Arguments to find a Ai_requests
     * @example
     * // Get one Ai_requests
     * const ai_requests = await prisma.ai_requests.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ai_requestsFindUniqueArgs>(args: SelectSubset<T, ai_requestsFindUniqueArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Ai_requests that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ai_requestsFindUniqueOrThrowArgs} args - Arguments to find a Ai_requests
     * @example
     * // Get one Ai_requests
     * const ai_requests = await prisma.ai_requests.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ai_requestsFindUniqueOrThrowArgs>(args: SelectSubset<T, ai_requestsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ai_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_requestsFindFirstArgs} args - Arguments to find a Ai_requests
     * @example
     * // Get one Ai_requests
     * const ai_requests = await prisma.ai_requests.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ai_requestsFindFirstArgs>(args?: SelectSubset<T, ai_requestsFindFirstArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Ai_requests that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_requestsFindFirstOrThrowArgs} args - Arguments to find a Ai_requests
     * @example
     * // Get one Ai_requests
     * const ai_requests = await prisma.ai_requests.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ai_requestsFindFirstOrThrowArgs>(args?: SelectSubset<T, ai_requestsFindFirstOrThrowArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Ai_requests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_requestsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Ai_requests
     * const ai_requests = await prisma.ai_requests.findMany()
     * 
     * // Get first 10 Ai_requests
     * const ai_requests = await prisma.ai_requests.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ai_requestsWithIdOnly = await prisma.ai_requests.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ai_requestsFindManyArgs>(args?: SelectSubset<T, ai_requestsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Ai_requests.
     * @param {ai_requestsCreateArgs} args - Arguments to create a Ai_requests.
     * @example
     * // Create one Ai_requests
     * const Ai_requests = await prisma.ai_requests.create({
     *   data: {
     *     // ... data to create a Ai_requests
     *   }
     * })
     * 
     */
    create<T extends ai_requestsCreateArgs>(args: SelectSubset<T, ai_requestsCreateArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Ai_requests.
     * @param {ai_requestsCreateManyArgs} args - Arguments to create many Ai_requests.
     * @example
     * // Create many Ai_requests
     * const ai_requests = await prisma.ai_requests.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ai_requestsCreateManyArgs>(args?: SelectSubset<T, ai_requestsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Ai_requests and returns the data saved in the database.
     * @param {ai_requestsCreateManyAndReturnArgs} args - Arguments to create many Ai_requests.
     * @example
     * // Create many Ai_requests
     * const ai_requests = await prisma.ai_requests.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Ai_requests and only return the `id`
     * const ai_requestsWithIdOnly = await prisma.ai_requests.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ai_requestsCreateManyAndReturnArgs>(args?: SelectSubset<T, ai_requestsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Ai_requests.
     * @param {ai_requestsDeleteArgs} args - Arguments to delete one Ai_requests.
     * @example
     * // Delete one Ai_requests
     * const Ai_requests = await prisma.ai_requests.delete({
     *   where: {
     *     // ... filter to delete one Ai_requests
     *   }
     * })
     * 
     */
    delete<T extends ai_requestsDeleteArgs>(args: SelectSubset<T, ai_requestsDeleteArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Ai_requests.
     * @param {ai_requestsUpdateArgs} args - Arguments to update one Ai_requests.
     * @example
     * // Update one Ai_requests
     * const ai_requests = await prisma.ai_requests.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ai_requestsUpdateArgs>(args: SelectSubset<T, ai_requestsUpdateArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Ai_requests.
     * @param {ai_requestsDeleteManyArgs} args - Arguments to filter Ai_requests to delete.
     * @example
     * // Delete a few Ai_requests
     * const { count } = await prisma.ai_requests.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ai_requestsDeleteManyArgs>(args?: SelectSubset<T, ai_requestsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ai_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_requestsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Ai_requests
     * const ai_requests = await prisma.ai_requests.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ai_requestsUpdateManyArgs>(args: SelectSubset<T, ai_requestsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Ai_requests and returns the data updated in the database.
     * @param {ai_requestsUpdateManyAndReturnArgs} args - Arguments to update many Ai_requests.
     * @example
     * // Update many Ai_requests
     * const ai_requests = await prisma.ai_requests.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Ai_requests and only return the `id`
     * const ai_requestsWithIdOnly = await prisma.ai_requests.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ai_requestsUpdateManyAndReturnArgs>(args: SelectSubset<T, ai_requestsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Ai_requests.
     * @param {ai_requestsUpsertArgs} args - Arguments to update or create a Ai_requests.
     * @example
     * // Update or create a Ai_requests
     * const ai_requests = await prisma.ai_requests.upsert({
     *   create: {
     *     // ... data to create a Ai_requests
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Ai_requests we want to update
     *   }
     * })
     */
    upsert<T extends ai_requestsUpsertArgs>(args: SelectSubset<T, ai_requestsUpsertArgs<ExtArgs>>): Prisma__ai_requestsClient<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Ai_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_requestsCountArgs} args - Arguments to filter Ai_requests to count.
     * @example
     * // Count the number of Ai_requests
     * const count = await prisma.ai_requests.count({
     *   where: {
     *     // ... the filter for the Ai_requests we want to count
     *   }
     * })
    **/
    count<T extends ai_requestsCountArgs>(
      args?: Subset<T, ai_requestsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Ai_requestsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Ai_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Ai_requestsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Ai_requestsAggregateArgs>(args: Subset<T, Ai_requestsAggregateArgs>): Prisma.PrismaPromise<GetAi_requestsAggregateType<T>>

    /**
     * Group by Ai_requests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ai_requestsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ai_requestsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ai_requestsGroupByArgs['orderBy'] }
        : { orderBy?: ai_requestsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ai_requestsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAi_requestsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ai_requests model
   */
  readonly fields: ai_requestsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ai_requests.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ai_requestsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends ai_requests$clientsArgs<ExtArgs> = {}>(args?: Subset<T, ai_requests$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends ai_requests$usersArgs<ExtArgs> = {}>(args?: Subset<T, ai_requests$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ai_requests model
   */
  interface ai_requestsFieldRefs {
    readonly id: FieldRef<"ai_requests", 'String'>
    readonly user_id: FieldRef<"ai_requests", 'String'>
    readonly client_id: FieldRef<"ai_requests", 'String'>
    readonly prompt: FieldRef<"ai_requests", 'String'>
    readonly response: FieldRef<"ai_requests", 'String'>
    readonly model: FieldRef<"ai_requests", 'String'>
    readonly tokens_used: FieldRef<"ai_requests", 'Int'>
    readonly processing_time: FieldRef<"ai_requests", 'Int'>
    readonly created_at: FieldRef<"ai_requests", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ai_requests findUnique
   */
  export type ai_requestsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * Filter, which ai_requests to fetch.
     */
    where: ai_requestsWhereUniqueInput
  }

  /**
   * ai_requests findUniqueOrThrow
   */
  export type ai_requestsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * Filter, which ai_requests to fetch.
     */
    where: ai_requestsWhereUniqueInput
  }

  /**
   * ai_requests findFirst
   */
  export type ai_requestsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * Filter, which ai_requests to fetch.
     */
    where?: ai_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_requests to fetch.
     */
    orderBy?: ai_requestsOrderByWithRelationInput | ai_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ai_requests.
     */
    cursor?: ai_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ai_requests.
     */
    distinct?: Ai_requestsScalarFieldEnum | Ai_requestsScalarFieldEnum[]
  }

  /**
   * ai_requests findFirstOrThrow
   */
  export type ai_requestsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * Filter, which ai_requests to fetch.
     */
    where?: ai_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_requests to fetch.
     */
    orderBy?: ai_requestsOrderByWithRelationInput | ai_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ai_requests.
     */
    cursor?: ai_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_requests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ai_requests.
     */
    distinct?: Ai_requestsScalarFieldEnum | Ai_requestsScalarFieldEnum[]
  }

  /**
   * ai_requests findMany
   */
  export type ai_requestsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * Filter, which ai_requests to fetch.
     */
    where?: ai_requestsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ai_requests to fetch.
     */
    orderBy?: ai_requestsOrderByWithRelationInput | ai_requestsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ai_requests.
     */
    cursor?: ai_requestsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ai_requests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ai_requests.
     */
    skip?: number
    distinct?: Ai_requestsScalarFieldEnum | Ai_requestsScalarFieldEnum[]
  }

  /**
   * ai_requests create
   */
  export type ai_requestsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * The data needed to create a ai_requests.
     */
    data: XOR<ai_requestsCreateInput, ai_requestsUncheckedCreateInput>
  }

  /**
   * ai_requests createMany
   */
  export type ai_requestsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ai_requests.
     */
    data: ai_requestsCreateManyInput | ai_requestsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ai_requests createManyAndReturn
   */
  export type ai_requestsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * The data used to create many ai_requests.
     */
    data: ai_requestsCreateManyInput | ai_requestsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ai_requests update
   */
  export type ai_requestsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * The data needed to update a ai_requests.
     */
    data: XOR<ai_requestsUpdateInput, ai_requestsUncheckedUpdateInput>
    /**
     * Choose, which ai_requests to update.
     */
    where: ai_requestsWhereUniqueInput
  }

  /**
   * ai_requests updateMany
   */
  export type ai_requestsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ai_requests.
     */
    data: XOR<ai_requestsUpdateManyMutationInput, ai_requestsUncheckedUpdateManyInput>
    /**
     * Filter which ai_requests to update
     */
    where?: ai_requestsWhereInput
    /**
     * Limit how many ai_requests to update.
     */
    limit?: number
  }

  /**
   * ai_requests updateManyAndReturn
   */
  export type ai_requestsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * The data used to update ai_requests.
     */
    data: XOR<ai_requestsUpdateManyMutationInput, ai_requestsUncheckedUpdateManyInput>
    /**
     * Filter which ai_requests to update
     */
    where?: ai_requestsWhereInput
    /**
     * Limit how many ai_requests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ai_requests upsert
   */
  export type ai_requestsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * The filter to search for the ai_requests to update in case it exists.
     */
    where: ai_requestsWhereUniqueInput
    /**
     * In case the ai_requests found by the `where` argument doesn't exist, create a new ai_requests with this data.
     */
    create: XOR<ai_requestsCreateInput, ai_requestsUncheckedCreateInput>
    /**
     * In case the ai_requests was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ai_requestsUpdateInput, ai_requestsUncheckedUpdateInput>
  }

  /**
   * ai_requests delete
   */
  export type ai_requestsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    /**
     * Filter which ai_requests to delete.
     */
    where: ai_requestsWhereUniqueInput
  }

  /**
   * ai_requests deleteMany
   */
  export type ai_requestsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ai_requests to delete
     */
    where?: ai_requestsWhereInput
    /**
     * Limit how many ai_requests to delete.
     */
    limit?: number
  }

  /**
   * ai_requests.clients
   */
  export type ai_requests$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * ai_requests.users
   */
  export type ai_requests$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * ai_requests without action
   */
  export type ai_requestsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
  }


  /**
   * Model analyses
   */

  export type AggregateAnalyses = {
    _count: AnalysesCountAggregateOutputType | null
    _min: AnalysesMinAggregateOutputType | null
    _max: AnalysesMaxAggregateOutputType | null
  }

  export type AnalysesMinAggregateOutputType = {
    id: string | null
    client_id: string | null
    type: string | null
    title: string | null
    created_at: Date | null
  }

  export type AnalysesMaxAggregateOutputType = {
    id: string | null
    client_id: string | null
    type: string | null
    title: string | null
    created_at: Date | null
  }

  export type AnalysesCountAggregateOutputType = {
    id: number
    client_id: number
    type: number
    title: number
    created_at: number
    _all: number
  }


  export type AnalysesMinAggregateInputType = {
    id?: true
    client_id?: true
    type?: true
    title?: true
    created_at?: true
  }

  export type AnalysesMaxAggregateInputType = {
    id?: true
    client_id?: true
    type?: true
    title?: true
    created_at?: true
  }

  export type AnalysesCountAggregateInputType = {
    id?: true
    client_id?: true
    type?: true
    title?: true
    created_at?: true
    _all?: true
  }

  export type AnalysesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which analyses to aggregate.
     */
    where?: analysesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analyses to fetch.
     */
    orderBy?: analysesOrderByWithRelationInput | analysesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: analysesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned analyses
    **/
    _count?: true | AnalysesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AnalysesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AnalysesMaxAggregateInputType
  }

  export type GetAnalysesAggregateType<T extends AnalysesAggregateArgs> = {
        [P in keyof T & keyof AggregateAnalyses]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnalyses[P]>
      : GetScalarType<T[P], AggregateAnalyses[P]>
  }




  export type analysesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: analysesWhereInput
    orderBy?: analysesOrderByWithAggregationInput | analysesOrderByWithAggregationInput[]
    by: AnalysesScalarFieldEnum[] | AnalysesScalarFieldEnum
    having?: analysesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AnalysesCountAggregateInputType | true
    _min?: AnalysesMinAggregateInputType
    _max?: AnalysesMaxAggregateInputType
  }

  export type AnalysesGroupByOutputType = {
    id: string
    client_id: string
    type: string
    title: string | null
    created_at: Date | null
    _count: AnalysesCountAggregateOutputType | null
    _min: AnalysesMinAggregateOutputType | null
    _max: AnalysesMaxAggregateOutputType | null
  }

  type GetAnalysesGroupByPayload<T extends analysesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AnalysesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AnalysesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AnalysesGroupByOutputType[P]>
            : GetScalarType<T[P], AnalysesGroupByOutputType[P]>
        }
      >
    >


  export type analysesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    type?: boolean
    title?: boolean
    created_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    analysis_results?: boolean | analyses$analysis_resultsArgs<ExtArgs>
    images?: boolean | analyses$imagesArgs<ExtArgs>
    reports?: boolean | analyses$reportsArgs<ExtArgs>
    _count?: boolean | AnalysesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["analyses"]>

  export type analysesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    type?: boolean
    title?: boolean
    created_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["analyses"]>

  export type analysesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    type?: boolean
    title?: boolean
    created_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["analyses"]>

  export type analysesSelectScalar = {
    id?: boolean
    client_id?: boolean
    type?: boolean
    title?: boolean
    created_at?: boolean
  }

  export type analysesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "client_id" | "type" | "title" | "created_at", ExtArgs["result"]["analyses"]>
  export type analysesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    analysis_results?: boolean | analyses$analysis_resultsArgs<ExtArgs>
    images?: boolean | analyses$imagesArgs<ExtArgs>
    reports?: boolean | analyses$reportsArgs<ExtArgs>
    _count?: boolean | AnalysesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type analysesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }
  export type analysesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }

  export type $analysesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "analyses"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs>
      analysis_results: Prisma.$analysis_resultsPayload<ExtArgs>[]
      images: Prisma.$imagesPayload<ExtArgs>[]
      reports: Prisma.$reportsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      client_id: string
      type: string
      title: string | null
      created_at: Date | null
    }, ExtArgs["result"]["analyses"]>
    composites: {}
  }

  type analysesGetPayload<S extends boolean | null | undefined | analysesDefaultArgs> = $Result.GetResult<Prisma.$analysesPayload, S>

  type analysesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<analysesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AnalysesCountAggregateInputType | true
    }

  export interface analysesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['analyses'], meta: { name: 'analyses' } }
    /**
     * Find zero or one Analyses that matches the filter.
     * @param {analysesFindUniqueArgs} args - Arguments to find a Analyses
     * @example
     * // Get one Analyses
     * const analyses = await prisma.analyses.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends analysesFindUniqueArgs>(args: SelectSubset<T, analysesFindUniqueArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Analyses that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {analysesFindUniqueOrThrowArgs} args - Arguments to find a Analyses
     * @example
     * // Get one Analyses
     * const analyses = await prisma.analyses.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends analysesFindUniqueOrThrowArgs>(args: SelectSubset<T, analysesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Analyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysesFindFirstArgs} args - Arguments to find a Analyses
     * @example
     * // Get one Analyses
     * const analyses = await prisma.analyses.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends analysesFindFirstArgs>(args?: SelectSubset<T, analysesFindFirstArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Analyses that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysesFindFirstOrThrowArgs} args - Arguments to find a Analyses
     * @example
     * // Get one Analyses
     * const analyses = await prisma.analyses.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends analysesFindFirstOrThrowArgs>(args?: SelectSubset<T, analysesFindFirstOrThrowArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Analyses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Analyses
     * const analyses = await prisma.analyses.findMany()
     * 
     * // Get first 10 Analyses
     * const analyses = await prisma.analyses.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const analysesWithIdOnly = await prisma.analyses.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends analysesFindManyArgs>(args?: SelectSubset<T, analysesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Analyses.
     * @param {analysesCreateArgs} args - Arguments to create a Analyses.
     * @example
     * // Create one Analyses
     * const Analyses = await prisma.analyses.create({
     *   data: {
     *     // ... data to create a Analyses
     *   }
     * })
     * 
     */
    create<T extends analysesCreateArgs>(args: SelectSubset<T, analysesCreateArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Analyses.
     * @param {analysesCreateManyArgs} args - Arguments to create many Analyses.
     * @example
     * // Create many Analyses
     * const analyses = await prisma.analyses.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends analysesCreateManyArgs>(args?: SelectSubset<T, analysesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Analyses and returns the data saved in the database.
     * @param {analysesCreateManyAndReturnArgs} args - Arguments to create many Analyses.
     * @example
     * // Create many Analyses
     * const analyses = await prisma.analyses.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Analyses and only return the `id`
     * const analysesWithIdOnly = await prisma.analyses.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends analysesCreateManyAndReturnArgs>(args?: SelectSubset<T, analysesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Analyses.
     * @param {analysesDeleteArgs} args - Arguments to delete one Analyses.
     * @example
     * // Delete one Analyses
     * const Analyses = await prisma.analyses.delete({
     *   where: {
     *     // ... filter to delete one Analyses
     *   }
     * })
     * 
     */
    delete<T extends analysesDeleteArgs>(args: SelectSubset<T, analysesDeleteArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Analyses.
     * @param {analysesUpdateArgs} args - Arguments to update one Analyses.
     * @example
     * // Update one Analyses
     * const analyses = await prisma.analyses.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends analysesUpdateArgs>(args: SelectSubset<T, analysesUpdateArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Analyses.
     * @param {analysesDeleteManyArgs} args - Arguments to filter Analyses to delete.
     * @example
     * // Delete a few Analyses
     * const { count } = await prisma.analyses.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends analysesDeleteManyArgs>(args?: SelectSubset<T, analysesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Analyses
     * const analyses = await prisma.analyses.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends analysesUpdateManyArgs>(args: SelectSubset<T, analysesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Analyses and returns the data updated in the database.
     * @param {analysesUpdateManyAndReturnArgs} args - Arguments to update many Analyses.
     * @example
     * // Update many Analyses
     * const analyses = await prisma.analyses.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Analyses and only return the `id`
     * const analysesWithIdOnly = await prisma.analyses.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends analysesUpdateManyAndReturnArgs>(args: SelectSubset<T, analysesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Analyses.
     * @param {analysesUpsertArgs} args - Arguments to update or create a Analyses.
     * @example
     * // Update or create a Analyses
     * const analyses = await prisma.analyses.upsert({
     *   create: {
     *     // ... data to create a Analyses
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Analyses we want to update
     *   }
     * })
     */
    upsert<T extends analysesUpsertArgs>(args: SelectSubset<T, analysesUpsertArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysesCountArgs} args - Arguments to filter Analyses to count.
     * @example
     * // Count the number of Analyses
     * const count = await prisma.analyses.count({
     *   where: {
     *     // ... the filter for the Analyses we want to count
     *   }
     * })
    **/
    count<T extends analysesCountArgs>(
      args?: Subset<T, analysesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AnalysesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AnalysesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AnalysesAggregateArgs>(args: Subset<T, AnalysesAggregateArgs>): Prisma.PrismaPromise<GetAnalysesAggregateType<T>>

    /**
     * Group by Analyses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends analysesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: analysesGroupByArgs['orderBy'] }
        : { orderBy?: analysesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, analysesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnalysesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the analyses model
   */
  readonly fields: analysesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for analyses.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__analysesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends clientsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clientsDefaultArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    analysis_results<T extends analyses$analysis_resultsArgs<ExtArgs> = {}>(args?: Subset<T, analyses$analysis_resultsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    images<T extends analyses$imagesArgs<ExtArgs> = {}>(args?: Subset<T, analyses$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reports<T extends analyses$reportsArgs<ExtArgs> = {}>(args?: Subset<T, analyses$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the analyses model
   */
  interface analysesFieldRefs {
    readonly id: FieldRef<"analyses", 'String'>
    readonly client_id: FieldRef<"analyses", 'String'>
    readonly type: FieldRef<"analyses", 'String'>
    readonly title: FieldRef<"analyses", 'String'>
    readonly created_at: FieldRef<"analyses", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * analyses findUnique
   */
  export type analysesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * Filter, which analyses to fetch.
     */
    where: analysesWhereUniqueInput
  }

  /**
   * analyses findUniqueOrThrow
   */
  export type analysesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * Filter, which analyses to fetch.
     */
    where: analysesWhereUniqueInput
  }

  /**
   * analyses findFirst
   */
  export type analysesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * Filter, which analyses to fetch.
     */
    where?: analysesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analyses to fetch.
     */
    orderBy?: analysesOrderByWithRelationInput | analysesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for analyses.
     */
    cursor?: analysesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of analyses.
     */
    distinct?: AnalysesScalarFieldEnum | AnalysesScalarFieldEnum[]
  }

  /**
   * analyses findFirstOrThrow
   */
  export type analysesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * Filter, which analyses to fetch.
     */
    where?: analysesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analyses to fetch.
     */
    orderBy?: analysesOrderByWithRelationInput | analysesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for analyses.
     */
    cursor?: analysesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analyses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of analyses.
     */
    distinct?: AnalysesScalarFieldEnum | AnalysesScalarFieldEnum[]
  }

  /**
   * analyses findMany
   */
  export type analysesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * Filter, which analyses to fetch.
     */
    where?: analysesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analyses to fetch.
     */
    orderBy?: analysesOrderByWithRelationInput | analysesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing analyses.
     */
    cursor?: analysesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analyses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analyses.
     */
    skip?: number
    distinct?: AnalysesScalarFieldEnum | AnalysesScalarFieldEnum[]
  }

  /**
   * analyses create
   */
  export type analysesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * The data needed to create a analyses.
     */
    data: XOR<analysesCreateInput, analysesUncheckedCreateInput>
  }

  /**
   * analyses createMany
   */
  export type analysesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many analyses.
     */
    data: analysesCreateManyInput | analysesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * analyses createManyAndReturn
   */
  export type analysesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * The data used to create many analyses.
     */
    data: analysesCreateManyInput | analysesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * analyses update
   */
  export type analysesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * The data needed to update a analyses.
     */
    data: XOR<analysesUpdateInput, analysesUncheckedUpdateInput>
    /**
     * Choose, which analyses to update.
     */
    where: analysesWhereUniqueInput
  }

  /**
   * analyses updateMany
   */
  export type analysesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update analyses.
     */
    data: XOR<analysesUpdateManyMutationInput, analysesUncheckedUpdateManyInput>
    /**
     * Filter which analyses to update
     */
    where?: analysesWhereInput
    /**
     * Limit how many analyses to update.
     */
    limit?: number
  }

  /**
   * analyses updateManyAndReturn
   */
  export type analysesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * The data used to update analyses.
     */
    data: XOR<analysesUpdateManyMutationInput, analysesUncheckedUpdateManyInput>
    /**
     * Filter which analyses to update
     */
    where?: analysesWhereInput
    /**
     * Limit how many analyses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * analyses upsert
   */
  export type analysesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * The filter to search for the analyses to update in case it exists.
     */
    where: analysesWhereUniqueInput
    /**
     * In case the analyses found by the `where` argument doesn't exist, create a new analyses with this data.
     */
    create: XOR<analysesCreateInput, analysesUncheckedCreateInput>
    /**
     * In case the analyses was found with the provided `where` argument, update it with this data.
     */
    update: XOR<analysesUpdateInput, analysesUncheckedUpdateInput>
  }

  /**
   * analyses delete
   */
  export type analysesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    /**
     * Filter which analyses to delete.
     */
    where: analysesWhereUniqueInput
  }

  /**
   * analyses deleteMany
   */
  export type analysesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which analyses to delete
     */
    where?: analysesWhereInput
    /**
     * Limit how many analyses to delete.
     */
    limit?: number
  }

  /**
   * analyses.analysis_results
   */
  export type analyses$analysis_resultsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    where?: analysis_resultsWhereInput
    orderBy?: analysis_resultsOrderByWithRelationInput | analysis_resultsOrderByWithRelationInput[]
    cursor?: analysis_resultsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Analysis_resultsScalarFieldEnum | Analysis_resultsScalarFieldEnum[]
  }

  /**
   * analyses.images
   */
  export type analyses$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    where?: imagesWhereInput
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    cursor?: imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }

  /**
   * analyses.reports
   */
  export type analyses$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    where?: reportsWhereInput
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    cursor?: reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * analyses without action
   */
  export type analysesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
  }


  /**
   * Model analysis_results
   */

  export type AggregateAnalysis_results = {
    _count: Analysis_resultsCountAggregateOutputType | null
    _min: Analysis_resultsMinAggregateOutputType | null
    _max: Analysis_resultsMaxAggregateOutputType | null
  }

  export type Analysis_resultsMinAggregateOutputType = {
    id: string | null
    analysis_id: string | null
    content: string | null
    source_image_url: string | null
    processed_by: string | null
    created_at: Date | null
  }

  export type Analysis_resultsMaxAggregateOutputType = {
    id: string | null
    analysis_id: string | null
    content: string | null
    source_image_url: string | null
    processed_by: string | null
    created_at: Date | null
  }

  export type Analysis_resultsCountAggregateOutputType = {
    id: number
    analysis_id: number
    content: number
    source_image_url: number
    processed_by: number
    created_at: number
    _all: number
  }


  export type Analysis_resultsMinAggregateInputType = {
    id?: true
    analysis_id?: true
    content?: true
    source_image_url?: true
    processed_by?: true
    created_at?: true
  }

  export type Analysis_resultsMaxAggregateInputType = {
    id?: true
    analysis_id?: true
    content?: true
    source_image_url?: true
    processed_by?: true
    created_at?: true
  }

  export type Analysis_resultsCountAggregateInputType = {
    id?: true
    analysis_id?: true
    content?: true
    source_image_url?: true
    processed_by?: true
    created_at?: true
    _all?: true
  }

  export type Analysis_resultsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which analysis_results to aggregate.
     */
    where?: analysis_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analysis_results to fetch.
     */
    orderBy?: analysis_resultsOrderByWithRelationInput | analysis_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: analysis_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analysis_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analysis_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned analysis_results
    **/
    _count?: true | Analysis_resultsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Analysis_resultsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Analysis_resultsMaxAggregateInputType
  }

  export type GetAnalysis_resultsAggregateType<T extends Analysis_resultsAggregateArgs> = {
        [P in keyof T & keyof AggregateAnalysis_results]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAnalysis_results[P]>
      : GetScalarType<T[P], AggregateAnalysis_results[P]>
  }




  export type analysis_resultsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: analysis_resultsWhereInput
    orderBy?: analysis_resultsOrderByWithAggregationInput | analysis_resultsOrderByWithAggregationInput[]
    by: Analysis_resultsScalarFieldEnum[] | Analysis_resultsScalarFieldEnum
    having?: analysis_resultsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Analysis_resultsCountAggregateInputType | true
    _min?: Analysis_resultsMinAggregateInputType
    _max?: Analysis_resultsMaxAggregateInputType
  }

  export type Analysis_resultsGroupByOutputType = {
    id: string
    analysis_id: string
    content: string
    source_image_url: string | null
    processed_by: string | null
    created_at: Date | null
    _count: Analysis_resultsCountAggregateOutputType | null
    _min: Analysis_resultsMinAggregateOutputType | null
    _max: Analysis_resultsMaxAggregateOutputType | null
  }

  type GetAnalysis_resultsGroupByPayload<T extends analysis_resultsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Analysis_resultsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Analysis_resultsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Analysis_resultsGroupByOutputType[P]>
            : GetScalarType<T[P], Analysis_resultsGroupByOutputType[P]>
        }
      >
    >


  export type analysis_resultsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    analysis_id?: boolean
    content?: boolean
    source_image_url?: boolean
    processed_by?: boolean
    created_at?: boolean
    analyses?: boolean | analysesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["analysis_results"]>

  export type analysis_resultsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    analysis_id?: boolean
    content?: boolean
    source_image_url?: boolean
    processed_by?: boolean
    created_at?: boolean
    analyses?: boolean | analysesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["analysis_results"]>

  export type analysis_resultsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    analysis_id?: boolean
    content?: boolean
    source_image_url?: boolean
    processed_by?: boolean
    created_at?: boolean
    analyses?: boolean | analysesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["analysis_results"]>

  export type analysis_resultsSelectScalar = {
    id?: boolean
    analysis_id?: boolean
    content?: boolean
    source_image_url?: boolean
    processed_by?: boolean
    created_at?: boolean
  }

  export type analysis_resultsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "analysis_id" | "content" | "source_image_url" | "processed_by" | "created_at", ExtArgs["result"]["analysis_results"]>
  export type analysis_resultsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | analysesDefaultArgs<ExtArgs>
  }
  export type analysis_resultsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | analysesDefaultArgs<ExtArgs>
  }
  export type analysis_resultsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | analysesDefaultArgs<ExtArgs>
  }

  export type $analysis_resultsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "analysis_results"
    objects: {
      analyses: Prisma.$analysesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      analysis_id: string
      content: string
      source_image_url: string | null
      processed_by: string | null
      created_at: Date | null
    }, ExtArgs["result"]["analysis_results"]>
    composites: {}
  }

  type analysis_resultsGetPayload<S extends boolean | null | undefined | analysis_resultsDefaultArgs> = $Result.GetResult<Prisma.$analysis_resultsPayload, S>

  type analysis_resultsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<analysis_resultsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Analysis_resultsCountAggregateInputType | true
    }

  export interface analysis_resultsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['analysis_results'], meta: { name: 'analysis_results' } }
    /**
     * Find zero or one Analysis_results that matches the filter.
     * @param {analysis_resultsFindUniqueArgs} args - Arguments to find a Analysis_results
     * @example
     * // Get one Analysis_results
     * const analysis_results = await prisma.analysis_results.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends analysis_resultsFindUniqueArgs>(args: SelectSubset<T, analysis_resultsFindUniqueArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Analysis_results that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {analysis_resultsFindUniqueOrThrowArgs} args - Arguments to find a Analysis_results
     * @example
     * // Get one Analysis_results
     * const analysis_results = await prisma.analysis_results.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends analysis_resultsFindUniqueOrThrowArgs>(args: SelectSubset<T, analysis_resultsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Analysis_results that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysis_resultsFindFirstArgs} args - Arguments to find a Analysis_results
     * @example
     * // Get one Analysis_results
     * const analysis_results = await prisma.analysis_results.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends analysis_resultsFindFirstArgs>(args?: SelectSubset<T, analysis_resultsFindFirstArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Analysis_results that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysis_resultsFindFirstOrThrowArgs} args - Arguments to find a Analysis_results
     * @example
     * // Get one Analysis_results
     * const analysis_results = await prisma.analysis_results.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends analysis_resultsFindFirstOrThrowArgs>(args?: SelectSubset<T, analysis_resultsFindFirstOrThrowArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Analysis_results that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysis_resultsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Analysis_results
     * const analysis_results = await prisma.analysis_results.findMany()
     * 
     * // Get first 10 Analysis_results
     * const analysis_results = await prisma.analysis_results.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const analysis_resultsWithIdOnly = await prisma.analysis_results.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends analysis_resultsFindManyArgs>(args?: SelectSubset<T, analysis_resultsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Analysis_results.
     * @param {analysis_resultsCreateArgs} args - Arguments to create a Analysis_results.
     * @example
     * // Create one Analysis_results
     * const Analysis_results = await prisma.analysis_results.create({
     *   data: {
     *     // ... data to create a Analysis_results
     *   }
     * })
     * 
     */
    create<T extends analysis_resultsCreateArgs>(args: SelectSubset<T, analysis_resultsCreateArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Analysis_results.
     * @param {analysis_resultsCreateManyArgs} args - Arguments to create many Analysis_results.
     * @example
     * // Create many Analysis_results
     * const analysis_results = await prisma.analysis_results.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends analysis_resultsCreateManyArgs>(args?: SelectSubset<T, analysis_resultsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Analysis_results and returns the data saved in the database.
     * @param {analysis_resultsCreateManyAndReturnArgs} args - Arguments to create many Analysis_results.
     * @example
     * // Create many Analysis_results
     * const analysis_results = await prisma.analysis_results.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Analysis_results and only return the `id`
     * const analysis_resultsWithIdOnly = await prisma.analysis_results.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends analysis_resultsCreateManyAndReturnArgs>(args?: SelectSubset<T, analysis_resultsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Analysis_results.
     * @param {analysis_resultsDeleteArgs} args - Arguments to delete one Analysis_results.
     * @example
     * // Delete one Analysis_results
     * const Analysis_results = await prisma.analysis_results.delete({
     *   where: {
     *     // ... filter to delete one Analysis_results
     *   }
     * })
     * 
     */
    delete<T extends analysis_resultsDeleteArgs>(args: SelectSubset<T, analysis_resultsDeleteArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Analysis_results.
     * @param {analysis_resultsUpdateArgs} args - Arguments to update one Analysis_results.
     * @example
     * // Update one Analysis_results
     * const analysis_results = await prisma.analysis_results.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends analysis_resultsUpdateArgs>(args: SelectSubset<T, analysis_resultsUpdateArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Analysis_results.
     * @param {analysis_resultsDeleteManyArgs} args - Arguments to filter Analysis_results to delete.
     * @example
     * // Delete a few Analysis_results
     * const { count } = await prisma.analysis_results.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends analysis_resultsDeleteManyArgs>(args?: SelectSubset<T, analysis_resultsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Analysis_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysis_resultsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Analysis_results
     * const analysis_results = await prisma.analysis_results.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends analysis_resultsUpdateManyArgs>(args: SelectSubset<T, analysis_resultsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Analysis_results and returns the data updated in the database.
     * @param {analysis_resultsUpdateManyAndReturnArgs} args - Arguments to update many Analysis_results.
     * @example
     * // Update many Analysis_results
     * const analysis_results = await prisma.analysis_results.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Analysis_results and only return the `id`
     * const analysis_resultsWithIdOnly = await prisma.analysis_results.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends analysis_resultsUpdateManyAndReturnArgs>(args: SelectSubset<T, analysis_resultsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Analysis_results.
     * @param {analysis_resultsUpsertArgs} args - Arguments to update or create a Analysis_results.
     * @example
     * // Update or create a Analysis_results
     * const analysis_results = await prisma.analysis_results.upsert({
     *   create: {
     *     // ... data to create a Analysis_results
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Analysis_results we want to update
     *   }
     * })
     */
    upsert<T extends analysis_resultsUpsertArgs>(args: SelectSubset<T, analysis_resultsUpsertArgs<ExtArgs>>): Prisma__analysis_resultsClient<$Result.GetResult<Prisma.$analysis_resultsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Analysis_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysis_resultsCountArgs} args - Arguments to filter Analysis_results to count.
     * @example
     * // Count the number of Analysis_results
     * const count = await prisma.analysis_results.count({
     *   where: {
     *     // ... the filter for the Analysis_results we want to count
     *   }
     * })
    **/
    count<T extends analysis_resultsCountArgs>(
      args?: Subset<T, analysis_resultsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Analysis_resultsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Analysis_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Analysis_resultsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Analysis_resultsAggregateArgs>(args: Subset<T, Analysis_resultsAggregateArgs>): Prisma.PrismaPromise<GetAnalysis_resultsAggregateType<T>>

    /**
     * Group by Analysis_results.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {analysis_resultsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends analysis_resultsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: analysis_resultsGroupByArgs['orderBy'] }
        : { orderBy?: analysis_resultsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, analysis_resultsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAnalysis_resultsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the analysis_results model
   */
  readonly fields: analysis_resultsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for analysis_results.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__analysis_resultsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    analyses<T extends analysesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, analysesDefaultArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the analysis_results model
   */
  interface analysis_resultsFieldRefs {
    readonly id: FieldRef<"analysis_results", 'String'>
    readonly analysis_id: FieldRef<"analysis_results", 'String'>
    readonly content: FieldRef<"analysis_results", 'String'>
    readonly source_image_url: FieldRef<"analysis_results", 'String'>
    readonly processed_by: FieldRef<"analysis_results", 'String'>
    readonly created_at: FieldRef<"analysis_results", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * analysis_results findUnique
   */
  export type analysis_resultsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * Filter, which analysis_results to fetch.
     */
    where: analysis_resultsWhereUniqueInput
  }

  /**
   * analysis_results findUniqueOrThrow
   */
  export type analysis_resultsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * Filter, which analysis_results to fetch.
     */
    where: analysis_resultsWhereUniqueInput
  }

  /**
   * analysis_results findFirst
   */
  export type analysis_resultsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * Filter, which analysis_results to fetch.
     */
    where?: analysis_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analysis_results to fetch.
     */
    orderBy?: analysis_resultsOrderByWithRelationInput | analysis_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for analysis_results.
     */
    cursor?: analysis_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analysis_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analysis_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of analysis_results.
     */
    distinct?: Analysis_resultsScalarFieldEnum | Analysis_resultsScalarFieldEnum[]
  }

  /**
   * analysis_results findFirstOrThrow
   */
  export type analysis_resultsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * Filter, which analysis_results to fetch.
     */
    where?: analysis_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analysis_results to fetch.
     */
    orderBy?: analysis_resultsOrderByWithRelationInput | analysis_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for analysis_results.
     */
    cursor?: analysis_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analysis_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analysis_results.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of analysis_results.
     */
    distinct?: Analysis_resultsScalarFieldEnum | Analysis_resultsScalarFieldEnum[]
  }

  /**
   * analysis_results findMany
   */
  export type analysis_resultsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * Filter, which analysis_results to fetch.
     */
    where?: analysis_resultsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of analysis_results to fetch.
     */
    orderBy?: analysis_resultsOrderByWithRelationInput | analysis_resultsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing analysis_results.
     */
    cursor?: analysis_resultsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` analysis_results from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` analysis_results.
     */
    skip?: number
    distinct?: Analysis_resultsScalarFieldEnum | Analysis_resultsScalarFieldEnum[]
  }

  /**
   * analysis_results create
   */
  export type analysis_resultsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * The data needed to create a analysis_results.
     */
    data: XOR<analysis_resultsCreateInput, analysis_resultsUncheckedCreateInput>
  }

  /**
   * analysis_results createMany
   */
  export type analysis_resultsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many analysis_results.
     */
    data: analysis_resultsCreateManyInput | analysis_resultsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * analysis_results createManyAndReturn
   */
  export type analysis_resultsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * The data used to create many analysis_results.
     */
    data: analysis_resultsCreateManyInput | analysis_resultsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * analysis_results update
   */
  export type analysis_resultsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * The data needed to update a analysis_results.
     */
    data: XOR<analysis_resultsUpdateInput, analysis_resultsUncheckedUpdateInput>
    /**
     * Choose, which analysis_results to update.
     */
    where: analysis_resultsWhereUniqueInput
  }

  /**
   * analysis_results updateMany
   */
  export type analysis_resultsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update analysis_results.
     */
    data: XOR<analysis_resultsUpdateManyMutationInput, analysis_resultsUncheckedUpdateManyInput>
    /**
     * Filter which analysis_results to update
     */
    where?: analysis_resultsWhereInput
    /**
     * Limit how many analysis_results to update.
     */
    limit?: number
  }

  /**
   * analysis_results updateManyAndReturn
   */
  export type analysis_resultsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * The data used to update analysis_results.
     */
    data: XOR<analysis_resultsUpdateManyMutationInput, analysis_resultsUncheckedUpdateManyInput>
    /**
     * Filter which analysis_results to update
     */
    where?: analysis_resultsWhereInput
    /**
     * Limit how many analysis_results to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * analysis_results upsert
   */
  export type analysis_resultsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * The filter to search for the analysis_results to update in case it exists.
     */
    where: analysis_resultsWhereUniqueInput
    /**
     * In case the analysis_results found by the `where` argument doesn't exist, create a new analysis_results with this data.
     */
    create: XOR<analysis_resultsCreateInput, analysis_resultsUncheckedCreateInput>
    /**
     * In case the analysis_results was found with the provided `where` argument, update it with this data.
     */
    update: XOR<analysis_resultsUpdateInput, analysis_resultsUncheckedUpdateInput>
  }

  /**
   * analysis_results delete
   */
  export type analysis_resultsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
    /**
     * Filter which analysis_results to delete.
     */
    where: analysis_resultsWhereUniqueInput
  }

  /**
   * analysis_results deleteMany
   */
  export type analysis_resultsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which analysis_results to delete
     */
    where?: analysis_resultsWhereInput
    /**
     * Limit how many analysis_results to delete.
     */
    limit?: number
  }

  /**
   * analysis_results without action
   */
  export type analysis_resultsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analysis_results
     */
    select?: analysis_resultsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analysis_results
     */
    omit?: analysis_resultsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysis_resultsInclude<ExtArgs> | null
  }


  /**
   * Model chat_conversations
   */

  export type AggregateChat_conversations = {
    _count: Chat_conversationsCountAggregateOutputType | null
    _min: Chat_conversationsMinAggregateOutputType | null
    _max: Chat_conversationsMaxAggregateOutputType | null
  }

  export type Chat_conversationsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    title: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Chat_conversationsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    title: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Chat_conversationsCountAggregateOutputType = {
    id: number
    user_id: number
    client_id: number
    title: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Chat_conversationsMinAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    title?: true
    created_at?: true
    updated_at?: true
  }

  export type Chat_conversationsMaxAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    title?: true
    created_at?: true
    updated_at?: true
  }

  export type Chat_conversationsCountAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    title?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Chat_conversationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_conversations to aggregate.
     */
    where?: chat_conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_conversations to fetch.
     */
    orderBy?: chat_conversationsOrderByWithRelationInput | chat_conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_conversations
    **/
    _count?: true | Chat_conversationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_conversationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_conversationsMaxAggregateInputType
  }

  export type GetChat_conversationsAggregateType<T extends Chat_conversationsAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_conversations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_conversations[P]>
      : GetScalarType<T[P], AggregateChat_conversations[P]>
  }




  export type chat_conversationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_conversationsWhereInput
    orderBy?: chat_conversationsOrderByWithAggregationInput | chat_conversationsOrderByWithAggregationInput[]
    by: Chat_conversationsScalarFieldEnum[] | Chat_conversationsScalarFieldEnum
    having?: chat_conversationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_conversationsCountAggregateInputType | true
    _min?: Chat_conversationsMinAggregateInputType
    _max?: Chat_conversationsMaxAggregateInputType
  }

  export type Chat_conversationsGroupByOutputType = {
    id: string
    user_id: string | null
    client_id: string | null
    title: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Chat_conversationsCountAggregateOutputType | null
    _min: Chat_conversationsMinAggregateOutputType | null
    _max: Chat_conversationsMaxAggregateOutputType | null
  }

  type GetChat_conversationsGroupByPayload<T extends chat_conversationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_conversationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_conversationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_conversationsGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_conversationsGroupByOutputType[P]>
        }
      >
    >


  export type chat_conversationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | chat_conversations$clientsArgs<ExtArgs>
    users?: boolean | chat_conversations$usersArgs<ExtArgs>
    chat_messages?: boolean | chat_conversations$chat_messagesArgs<ExtArgs>
    _count?: boolean | Chat_conversationsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_conversations"]>

  export type chat_conversationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | chat_conversations$clientsArgs<ExtArgs>
    users?: boolean | chat_conversations$usersArgs<ExtArgs>
  }, ExtArgs["result"]["chat_conversations"]>

  export type chat_conversationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | chat_conversations$clientsArgs<ExtArgs>
    users?: boolean | chat_conversations$usersArgs<ExtArgs>
  }, ExtArgs["result"]["chat_conversations"]>

  export type chat_conversationsSelectScalar = {
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    title?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type chat_conversationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "client_id" | "title" | "created_at" | "updated_at", ExtArgs["result"]["chat_conversations"]>
  export type chat_conversationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | chat_conversations$clientsArgs<ExtArgs>
    users?: boolean | chat_conversations$usersArgs<ExtArgs>
    chat_messages?: boolean | chat_conversations$chat_messagesArgs<ExtArgs>
    _count?: boolean | Chat_conversationsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type chat_conversationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | chat_conversations$clientsArgs<ExtArgs>
    users?: boolean | chat_conversations$usersArgs<ExtArgs>
  }
  export type chat_conversationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | chat_conversations$clientsArgs<ExtArgs>
    users?: boolean | chat_conversations$usersArgs<ExtArgs>
  }

  export type $chat_conversationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_conversations"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
      chat_messages: Prisma.$chat_messagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      client_id: string | null
      title: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["chat_conversations"]>
    composites: {}
  }

  type chat_conversationsGetPayload<S extends boolean | null | undefined | chat_conversationsDefaultArgs> = $Result.GetResult<Prisma.$chat_conversationsPayload, S>

  type chat_conversationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_conversationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_conversationsCountAggregateInputType | true
    }

  export interface chat_conversationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_conversations'], meta: { name: 'chat_conversations' } }
    /**
     * Find zero or one Chat_conversations that matches the filter.
     * @param {chat_conversationsFindUniqueArgs} args - Arguments to find a Chat_conversations
     * @example
     * // Get one Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_conversationsFindUniqueArgs>(args: SelectSubset<T, chat_conversationsFindUniqueArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_conversations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_conversationsFindUniqueOrThrowArgs} args - Arguments to find a Chat_conversations
     * @example
     * // Get one Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_conversationsFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_conversationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_conversationsFindFirstArgs} args - Arguments to find a Chat_conversations
     * @example
     * // Get one Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_conversationsFindFirstArgs>(args?: SelectSubset<T, chat_conversationsFindFirstArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_conversations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_conversationsFindFirstOrThrowArgs} args - Arguments to find a Chat_conversations
     * @example
     * // Get one Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_conversationsFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_conversationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_conversations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_conversationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.findMany()
     * 
     * // Get first 10 Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_conversationsWithIdOnly = await prisma.chat_conversations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_conversationsFindManyArgs>(args?: SelectSubset<T, chat_conversationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_conversations.
     * @param {chat_conversationsCreateArgs} args - Arguments to create a Chat_conversations.
     * @example
     * // Create one Chat_conversations
     * const Chat_conversations = await prisma.chat_conversations.create({
     *   data: {
     *     // ... data to create a Chat_conversations
     *   }
     * })
     * 
     */
    create<T extends chat_conversationsCreateArgs>(args: SelectSubset<T, chat_conversationsCreateArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_conversations.
     * @param {chat_conversationsCreateManyArgs} args - Arguments to create many Chat_conversations.
     * @example
     * // Create many Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_conversationsCreateManyArgs>(args?: SelectSubset<T, chat_conversationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chat_conversations and returns the data saved in the database.
     * @param {chat_conversationsCreateManyAndReturnArgs} args - Arguments to create many Chat_conversations.
     * @example
     * // Create many Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chat_conversations and only return the `id`
     * const chat_conversationsWithIdOnly = await prisma.chat_conversations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chat_conversationsCreateManyAndReturnArgs>(args?: SelectSubset<T, chat_conversationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chat_conversations.
     * @param {chat_conversationsDeleteArgs} args - Arguments to delete one Chat_conversations.
     * @example
     * // Delete one Chat_conversations
     * const Chat_conversations = await prisma.chat_conversations.delete({
     *   where: {
     *     // ... filter to delete one Chat_conversations
     *   }
     * })
     * 
     */
    delete<T extends chat_conversationsDeleteArgs>(args: SelectSubset<T, chat_conversationsDeleteArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_conversations.
     * @param {chat_conversationsUpdateArgs} args - Arguments to update one Chat_conversations.
     * @example
     * // Update one Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_conversationsUpdateArgs>(args: SelectSubset<T, chat_conversationsUpdateArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_conversations.
     * @param {chat_conversationsDeleteManyArgs} args - Arguments to filter Chat_conversations to delete.
     * @example
     * // Delete a few Chat_conversations
     * const { count } = await prisma.chat_conversations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_conversationsDeleteManyArgs>(args?: SelectSubset<T, chat_conversationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_conversationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_conversationsUpdateManyArgs>(args: SelectSubset<T, chat_conversationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_conversations and returns the data updated in the database.
     * @param {chat_conversationsUpdateManyAndReturnArgs} args - Arguments to update many Chat_conversations.
     * @example
     * // Update many Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chat_conversations and only return the `id`
     * const chat_conversationsWithIdOnly = await prisma.chat_conversations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chat_conversationsUpdateManyAndReturnArgs>(args: SelectSubset<T, chat_conversationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chat_conversations.
     * @param {chat_conversationsUpsertArgs} args - Arguments to update or create a Chat_conversations.
     * @example
     * // Update or create a Chat_conversations
     * const chat_conversations = await prisma.chat_conversations.upsert({
     *   create: {
     *     // ... data to create a Chat_conversations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_conversations we want to update
     *   }
     * })
     */
    upsert<T extends chat_conversationsUpsertArgs>(args: SelectSubset<T, chat_conversationsUpsertArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_conversationsCountArgs} args - Arguments to filter Chat_conversations to count.
     * @example
     * // Count the number of Chat_conversations
     * const count = await prisma.chat_conversations.count({
     *   where: {
     *     // ... the filter for the Chat_conversations we want to count
     *   }
     * })
    **/
    count<T extends chat_conversationsCountArgs>(
      args?: Subset<T, chat_conversationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_conversationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_conversationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_conversationsAggregateArgs>(args: Subset<T, Chat_conversationsAggregateArgs>): Prisma.PrismaPromise<GetChat_conversationsAggregateType<T>>

    /**
     * Group by Chat_conversations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_conversationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_conversationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_conversationsGroupByArgs['orderBy'] }
        : { orderBy?: chat_conversationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_conversationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_conversationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_conversations model
   */
  readonly fields: chat_conversationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_conversations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_conversationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends chat_conversations$clientsArgs<ExtArgs> = {}>(args?: Subset<T, chat_conversations$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends chat_conversations$usersArgs<ExtArgs> = {}>(args?: Subset<T, chat_conversations$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    chat_messages<T extends chat_conversations$chat_messagesArgs<ExtArgs> = {}>(args?: Subset<T, chat_conversations$chat_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_conversations model
   */
  interface chat_conversationsFieldRefs {
    readonly id: FieldRef<"chat_conversations", 'String'>
    readonly user_id: FieldRef<"chat_conversations", 'String'>
    readonly client_id: FieldRef<"chat_conversations", 'String'>
    readonly title: FieldRef<"chat_conversations", 'String'>
    readonly created_at: FieldRef<"chat_conversations", 'DateTime'>
    readonly updated_at: FieldRef<"chat_conversations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_conversations findUnique
   */
  export type chat_conversationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * Filter, which chat_conversations to fetch.
     */
    where: chat_conversationsWhereUniqueInput
  }

  /**
   * chat_conversations findUniqueOrThrow
   */
  export type chat_conversationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * Filter, which chat_conversations to fetch.
     */
    where: chat_conversationsWhereUniqueInput
  }

  /**
   * chat_conversations findFirst
   */
  export type chat_conversationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * Filter, which chat_conversations to fetch.
     */
    where?: chat_conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_conversations to fetch.
     */
    orderBy?: chat_conversationsOrderByWithRelationInput | chat_conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_conversations.
     */
    cursor?: chat_conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_conversations.
     */
    distinct?: Chat_conversationsScalarFieldEnum | Chat_conversationsScalarFieldEnum[]
  }

  /**
   * chat_conversations findFirstOrThrow
   */
  export type chat_conversationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * Filter, which chat_conversations to fetch.
     */
    where?: chat_conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_conversations to fetch.
     */
    orderBy?: chat_conversationsOrderByWithRelationInput | chat_conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_conversations.
     */
    cursor?: chat_conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_conversations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_conversations.
     */
    distinct?: Chat_conversationsScalarFieldEnum | Chat_conversationsScalarFieldEnum[]
  }

  /**
   * chat_conversations findMany
   */
  export type chat_conversationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * Filter, which chat_conversations to fetch.
     */
    where?: chat_conversationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_conversations to fetch.
     */
    orderBy?: chat_conversationsOrderByWithRelationInput | chat_conversationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_conversations.
     */
    cursor?: chat_conversationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_conversations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_conversations.
     */
    skip?: number
    distinct?: Chat_conversationsScalarFieldEnum | Chat_conversationsScalarFieldEnum[]
  }

  /**
   * chat_conversations create
   */
  export type chat_conversationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_conversations.
     */
    data?: XOR<chat_conversationsCreateInput, chat_conversationsUncheckedCreateInput>
  }

  /**
   * chat_conversations createMany
   */
  export type chat_conversationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_conversations.
     */
    data: chat_conversationsCreateManyInput | chat_conversationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_conversations createManyAndReturn
   */
  export type chat_conversationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * The data used to create many chat_conversations.
     */
    data: chat_conversationsCreateManyInput | chat_conversationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat_conversations update
   */
  export type chat_conversationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_conversations.
     */
    data: XOR<chat_conversationsUpdateInput, chat_conversationsUncheckedUpdateInput>
    /**
     * Choose, which chat_conversations to update.
     */
    where: chat_conversationsWhereUniqueInput
  }

  /**
   * chat_conversations updateMany
   */
  export type chat_conversationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_conversations.
     */
    data: XOR<chat_conversationsUpdateManyMutationInput, chat_conversationsUncheckedUpdateManyInput>
    /**
     * Filter which chat_conversations to update
     */
    where?: chat_conversationsWhereInput
    /**
     * Limit how many chat_conversations to update.
     */
    limit?: number
  }

  /**
   * chat_conversations updateManyAndReturn
   */
  export type chat_conversationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * The data used to update chat_conversations.
     */
    data: XOR<chat_conversationsUpdateManyMutationInput, chat_conversationsUncheckedUpdateManyInput>
    /**
     * Filter which chat_conversations to update
     */
    where?: chat_conversationsWhereInput
    /**
     * Limit how many chat_conversations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat_conversations upsert
   */
  export type chat_conversationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_conversations to update in case it exists.
     */
    where: chat_conversationsWhereUniqueInput
    /**
     * In case the chat_conversations found by the `where` argument doesn't exist, create a new chat_conversations with this data.
     */
    create: XOR<chat_conversationsCreateInput, chat_conversationsUncheckedCreateInput>
    /**
     * In case the chat_conversations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_conversationsUpdateInput, chat_conversationsUncheckedUpdateInput>
  }

  /**
   * chat_conversations delete
   */
  export type chat_conversationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    /**
     * Filter which chat_conversations to delete.
     */
    where: chat_conversationsWhereUniqueInput
  }

  /**
   * chat_conversations deleteMany
   */
  export type chat_conversationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_conversations to delete
     */
    where?: chat_conversationsWhereInput
    /**
     * Limit how many chat_conversations to delete.
     */
    limit?: number
  }

  /**
   * chat_conversations.clients
   */
  export type chat_conversations$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * chat_conversations.users
   */
  export type chat_conversations$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * chat_conversations.chat_messages
   */
  export type chat_conversations$chat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    where?: chat_messagesWhereInput
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    cursor?: chat_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_messagesScalarFieldEnum | Chat_messagesScalarFieldEnum[]
  }

  /**
   * chat_conversations without action
   */
  export type chat_conversationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
  }


  /**
   * Model chat_messages
   */

  export type AggregateChat_messages = {
    _count: Chat_messagesCountAggregateOutputType | null
    _min: Chat_messagesMinAggregateOutputType | null
    _max: Chat_messagesMaxAggregateOutputType | null
  }

  export type Chat_messagesMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    conversation_id: string | null
    content: string | null
    is_ai_response: boolean | null
    created_at: Date | null
  }

  export type Chat_messagesMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    client_id: string | null
    conversation_id: string | null
    content: string | null
    is_ai_response: boolean | null
    created_at: Date | null
  }

  export type Chat_messagesCountAggregateOutputType = {
    id: number
    user_id: number
    client_id: number
    conversation_id: number
    content: number
    is_ai_response: number
    created_at: number
    _all: number
  }


  export type Chat_messagesMinAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    conversation_id?: true
    content?: true
    is_ai_response?: true
    created_at?: true
  }

  export type Chat_messagesMaxAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    conversation_id?: true
    content?: true
    is_ai_response?: true
    created_at?: true
  }

  export type Chat_messagesCountAggregateInputType = {
    id?: true
    user_id?: true
    client_id?: true
    conversation_id?: true
    content?: true
    is_ai_response?: true
    created_at?: true
    _all?: true
  }

  export type Chat_messagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_messages to aggregate.
     */
    where?: chat_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_messages
    **/
    _count?: true | Chat_messagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_messagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_messagesMaxAggregateInputType
  }

  export type GetChat_messagesAggregateType<T extends Chat_messagesAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_messages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_messages[P]>
      : GetScalarType<T[P], AggregateChat_messages[P]>
  }




  export type chat_messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_messagesWhereInput
    orderBy?: chat_messagesOrderByWithAggregationInput | chat_messagesOrderByWithAggregationInput[]
    by: Chat_messagesScalarFieldEnum[] | Chat_messagesScalarFieldEnum
    having?: chat_messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_messagesCountAggregateInputType | true
    _min?: Chat_messagesMinAggregateInputType
    _max?: Chat_messagesMaxAggregateInputType
  }

  export type Chat_messagesGroupByOutputType = {
    id: string
    user_id: string | null
    client_id: string | null
    conversation_id: string | null
    content: string
    is_ai_response: boolean | null
    created_at: Date | null
    _count: Chat_messagesCountAggregateOutputType | null
    _min: Chat_messagesMinAggregateOutputType | null
    _max: Chat_messagesMaxAggregateOutputType | null
  }

  type GetChat_messagesGroupByPayload<T extends chat_messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_messagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_messagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_messagesGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_messagesGroupByOutputType[P]>
        }
      >
    >


  export type chat_messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    conversation_id?: boolean
    content?: boolean
    is_ai_response?: boolean
    created_at?: boolean
    clients?: boolean | chat_messages$clientsArgs<ExtArgs>
    chat_conversations?: boolean | chat_messages$chat_conversationsArgs<ExtArgs>
    users?: boolean | chat_messages$usersArgs<ExtArgs>
  }, ExtArgs["result"]["chat_messages"]>

  export type chat_messagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    conversation_id?: boolean
    content?: boolean
    is_ai_response?: boolean
    created_at?: boolean
    clients?: boolean | chat_messages$clientsArgs<ExtArgs>
    chat_conversations?: boolean | chat_messages$chat_conversationsArgs<ExtArgs>
    users?: boolean | chat_messages$usersArgs<ExtArgs>
  }, ExtArgs["result"]["chat_messages"]>

  export type chat_messagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    conversation_id?: boolean
    content?: boolean
    is_ai_response?: boolean
    created_at?: boolean
    clients?: boolean | chat_messages$clientsArgs<ExtArgs>
    chat_conversations?: boolean | chat_messages$chat_conversationsArgs<ExtArgs>
    users?: boolean | chat_messages$usersArgs<ExtArgs>
  }, ExtArgs["result"]["chat_messages"]>

  export type chat_messagesSelectScalar = {
    id?: boolean
    user_id?: boolean
    client_id?: boolean
    conversation_id?: boolean
    content?: boolean
    is_ai_response?: boolean
    created_at?: boolean
  }

  export type chat_messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "client_id" | "conversation_id" | "content" | "is_ai_response" | "created_at", ExtArgs["result"]["chat_messages"]>
  export type chat_messagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | chat_messages$clientsArgs<ExtArgs>
    chat_conversations?: boolean | chat_messages$chat_conversationsArgs<ExtArgs>
    users?: boolean | chat_messages$usersArgs<ExtArgs>
  }
  export type chat_messagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | chat_messages$clientsArgs<ExtArgs>
    chat_conversations?: boolean | chat_messages$chat_conversationsArgs<ExtArgs>
    users?: boolean | chat_messages$usersArgs<ExtArgs>
  }
  export type chat_messagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | chat_messages$clientsArgs<ExtArgs>
    chat_conversations?: boolean | chat_messages$chat_conversationsArgs<ExtArgs>
    users?: boolean | chat_messages$usersArgs<ExtArgs>
  }

  export type $chat_messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_messages"
    objects: {
      clients: Prisma.$clientsPayload<ExtArgs> | null
      chat_conversations: Prisma.$chat_conversationsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      client_id: string | null
      conversation_id: string | null
      content: string
      is_ai_response: boolean | null
      created_at: Date | null
    }, ExtArgs["result"]["chat_messages"]>
    composites: {}
  }

  type chat_messagesGetPayload<S extends boolean | null | undefined | chat_messagesDefaultArgs> = $Result.GetResult<Prisma.$chat_messagesPayload, S>

  type chat_messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_messagesCountAggregateInputType | true
    }

  export interface chat_messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_messages'], meta: { name: 'chat_messages' } }
    /**
     * Find zero or one Chat_messages that matches the filter.
     * @param {chat_messagesFindUniqueArgs} args - Arguments to find a Chat_messages
     * @example
     * // Get one Chat_messages
     * const chat_messages = await prisma.chat_messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_messagesFindUniqueArgs>(args: SelectSubset<T, chat_messagesFindUniqueArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_messagesFindUniqueOrThrowArgs} args - Arguments to find a Chat_messages
     * @example
     * // Get one Chat_messages
     * const chat_messages = await prisma.chat_messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messagesFindFirstArgs} args - Arguments to find a Chat_messages
     * @example
     * // Get one Chat_messages
     * const chat_messages = await prisma.chat_messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_messagesFindFirstArgs>(args?: SelectSubset<T, chat_messagesFindFirstArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messagesFindFirstOrThrowArgs} args - Arguments to find a Chat_messages
     * @example
     * // Get one Chat_messages
     * const chat_messages = await prisma.chat_messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_messages
     * const chat_messages = await prisma.chat_messages.findMany()
     * 
     * // Get first 10 Chat_messages
     * const chat_messages = await prisma.chat_messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_messagesWithIdOnly = await prisma.chat_messages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_messagesFindManyArgs>(args?: SelectSubset<T, chat_messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_messages.
     * @param {chat_messagesCreateArgs} args - Arguments to create a Chat_messages.
     * @example
     * // Create one Chat_messages
     * const Chat_messages = await prisma.chat_messages.create({
     *   data: {
     *     // ... data to create a Chat_messages
     *   }
     * })
     * 
     */
    create<T extends chat_messagesCreateArgs>(args: SelectSubset<T, chat_messagesCreateArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_messages.
     * @param {chat_messagesCreateManyArgs} args - Arguments to create many Chat_messages.
     * @example
     * // Create many Chat_messages
     * const chat_messages = await prisma.chat_messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_messagesCreateManyArgs>(args?: SelectSubset<T, chat_messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chat_messages and returns the data saved in the database.
     * @param {chat_messagesCreateManyAndReturnArgs} args - Arguments to create many Chat_messages.
     * @example
     * // Create many Chat_messages
     * const chat_messages = await prisma.chat_messages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chat_messages and only return the `id`
     * const chat_messagesWithIdOnly = await prisma.chat_messages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chat_messagesCreateManyAndReturnArgs>(args?: SelectSubset<T, chat_messagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chat_messages.
     * @param {chat_messagesDeleteArgs} args - Arguments to delete one Chat_messages.
     * @example
     * // Delete one Chat_messages
     * const Chat_messages = await prisma.chat_messages.delete({
     *   where: {
     *     // ... filter to delete one Chat_messages
     *   }
     * })
     * 
     */
    delete<T extends chat_messagesDeleteArgs>(args: SelectSubset<T, chat_messagesDeleteArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_messages.
     * @param {chat_messagesUpdateArgs} args - Arguments to update one Chat_messages.
     * @example
     * // Update one Chat_messages
     * const chat_messages = await prisma.chat_messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_messagesUpdateArgs>(args: SelectSubset<T, chat_messagesUpdateArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_messages.
     * @param {chat_messagesDeleteManyArgs} args - Arguments to filter Chat_messages to delete.
     * @example
     * // Delete a few Chat_messages
     * const { count } = await prisma.chat_messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_messagesDeleteManyArgs>(args?: SelectSubset<T, chat_messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_messages
     * const chat_messages = await prisma.chat_messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_messagesUpdateManyArgs>(args: SelectSubset<T, chat_messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_messages and returns the data updated in the database.
     * @param {chat_messagesUpdateManyAndReturnArgs} args - Arguments to update many Chat_messages.
     * @example
     * // Update many Chat_messages
     * const chat_messages = await prisma.chat_messages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chat_messages and only return the `id`
     * const chat_messagesWithIdOnly = await prisma.chat_messages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chat_messagesUpdateManyAndReturnArgs>(args: SelectSubset<T, chat_messagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chat_messages.
     * @param {chat_messagesUpsertArgs} args - Arguments to update or create a Chat_messages.
     * @example
     * // Update or create a Chat_messages
     * const chat_messages = await prisma.chat_messages.upsert({
     *   create: {
     *     // ... data to create a Chat_messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_messages we want to update
     *   }
     * })
     */
    upsert<T extends chat_messagesUpsertArgs>(args: SelectSubset<T, chat_messagesUpsertArgs<ExtArgs>>): Prisma__chat_messagesClient<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messagesCountArgs} args - Arguments to filter Chat_messages to count.
     * @example
     * // Count the number of Chat_messages
     * const count = await prisma.chat_messages.count({
     *   where: {
     *     // ... the filter for the Chat_messages we want to count
     *   }
     * })
    **/
    count<T extends chat_messagesCountArgs>(
      args?: Subset<T, chat_messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_messagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_messagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_messagesAggregateArgs>(args: Subset<T, Chat_messagesAggregateArgs>): Prisma.PrismaPromise<GetChat_messagesAggregateType<T>>

    /**
     * Group by Chat_messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_messagesGroupByArgs['orderBy'] }
        : { orderBy?: chat_messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_messagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_messages model
   */
  readonly fields: chat_messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    clients<T extends chat_messages$clientsArgs<ExtArgs> = {}>(args?: Subset<T, chat_messages$clientsArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    chat_conversations<T extends chat_messages$chat_conversationsArgs<ExtArgs> = {}>(args?: Subset<T, chat_messages$chat_conversationsArgs<ExtArgs>>): Prisma__chat_conversationsClient<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends chat_messages$usersArgs<ExtArgs> = {}>(args?: Subset<T, chat_messages$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_messages model
   */
  interface chat_messagesFieldRefs {
    readonly id: FieldRef<"chat_messages", 'String'>
    readonly user_id: FieldRef<"chat_messages", 'String'>
    readonly client_id: FieldRef<"chat_messages", 'String'>
    readonly conversation_id: FieldRef<"chat_messages", 'String'>
    readonly content: FieldRef<"chat_messages", 'String'>
    readonly is_ai_response: FieldRef<"chat_messages", 'Boolean'>
    readonly created_at: FieldRef<"chat_messages", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_messages findUnique
   */
  export type chat_messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * Filter, which chat_messages to fetch.
     */
    where: chat_messagesWhereUniqueInput
  }

  /**
   * chat_messages findUniqueOrThrow
   */
  export type chat_messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * Filter, which chat_messages to fetch.
     */
    where: chat_messagesWhereUniqueInput
  }

  /**
   * chat_messages findFirst
   */
  export type chat_messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * Filter, which chat_messages to fetch.
     */
    where?: chat_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_messages.
     */
    cursor?: chat_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_messages.
     */
    distinct?: Chat_messagesScalarFieldEnum | Chat_messagesScalarFieldEnum[]
  }

  /**
   * chat_messages findFirstOrThrow
   */
  export type chat_messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * Filter, which chat_messages to fetch.
     */
    where?: chat_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_messages.
     */
    cursor?: chat_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_messages.
     */
    distinct?: Chat_messagesScalarFieldEnum | Chat_messagesScalarFieldEnum[]
  }

  /**
   * chat_messages findMany
   */
  export type chat_messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * Filter, which chat_messages to fetch.
     */
    where?: chat_messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_messages to fetch.
     */
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_messages.
     */
    cursor?: chat_messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_messages.
     */
    skip?: number
    distinct?: Chat_messagesScalarFieldEnum | Chat_messagesScalarFieldEnum[]
  }

  /**
   * chat_messages create
   */
  export type chat_messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_messages.
     */
    data: XOR<chat_messagesCreateInput, chat_messagesUncheckedCreateInput>
  }

  /**
   * chat_messages createMany
   */
  export type chat_messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_messages.
     */
    data: chat_messagesCreateManyInput | chat_messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_messages createManyAndReturn
   */
  export type chat_messagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * The data used to create many chat_messages.
     */
    data: chat_messagesCreateManyInput | chat_messagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat_messages update
   */
  export type chat_messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_messages.
     */
    data: XOR<chat_messagesUpdateInput, chat_messagesUncheckedUpdateInput>
    /**
     * Choose, which chat_messages to update.
     */
    where: chat_messagesWhereUniqueInput
  }

  /**
   * chat_messages updateMany
   */
  export type chat_messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_messages.
     */
    data: XOR<chat_messagesUpdateManyMutationInput, chat_messagesUncheckedUpdateManyInput>
    /**
     * Filter which chat_messages to update
     */
    where?: chat_messagesWhereInput
    /**
     * Limit how many chat_messages to update.
     */
    limit?: number
  }

  /**
   * chat_messages updateManyAndReturn
   */
  export type chat_messagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * The data used to update chat_messages.
     */
    data: XOR<chat_messagesUpdateManyMutationInput, chat_messagesUncheckedUpdateManyInput>
    /**
     * Filter which chat_messages to update
     */
    where?: chat_messagesWhereInput
    /**
     * Limit how many chat_messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat_messages upsert
   */
  export type chat_messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_messages to update in case it exists.
     */
    where: chat_messagesWhereUniqueInput
    /**
     * In case the chat_messages found by the `where` argument doesn't exist, create a new chat_messages with this data.
     */
    create: XOR<chat_messagesCreateInput, chat_messagesUncheckedCreateInput>
    /**
     * In case the chat_messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_messagesUpdateInput, chat_messagesUncheckedUpdateInput>
  }

  /**
   * chat_messages delete
   */
  export type chat_messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    /**
     * Filter which chat_messages to delete.
     */
    where: chat_messagesWhereUniqueInput
  }

  /**
   * chat_messages deleteMany
   */
  export type chat_messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_messages to delete
     */
    where?: chat_messagesWhereInput
    /**
     * Limit how many chat_messages to delete.
     */
    limit?: number
  }

  /**
   * chat_messages.clients
   */
  export type chat_messages$clientsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    where?: clientsWhereInput
  }

  /**
   * chat_messages.chat_conversations
   */
  export type chat_messages$chat_conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    where?: chat_conversationsWhereInput
  }

  /**
   * chat_messages.users
   */
  export type chat_messages$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * chat_messages without action
   */
  export type chat_messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
  }


  /**
   * Model clients
   */

  export type AggregateClients = {
    _count: ClientsCountAggregateOutputType | null
    _avg: ClientsAvgAggregateOutputType | null
    _sum: ClientsSumAggregateOutputType | null
    _min: ClientsMinAggregateOutputType | null
    _max: ClientsMaxAggregateOutputType | null
  }

  export type ClientsAvgAggregateOutputType = {
    followers: number | null
    rating: Decimal | null
    product_count: number | null
    response_rate: Decimal | null
  }

  export type ClientsSumAggregateOutputType = {
    followers: number | null
    rating: Decimal | null
    product_count: number | null
    response_rate: Decimal | null
  }

  export type ClientsMinAggregateOutputType = {
    id: string | null
    name: string | null
    owner_name: string | null
    shop_url: string | null
    followers: number | null
    rating: Decimal | null
    registration_date: Date | null
    product_count: number | null
    response_rate: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ClientsMaxAggregateOutputType = {
    id: string | null
    name: string | null
    owner_name: string | null
    shop_url: string | null
    followers: number | null
    rating: Decimal | null
    registration_date: Date | null
    product_count: number | null
    response_rate: Decimal | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ClientsCountAggregateOutputType = {
    id: number
    name: number
    owner_name: number
    shop_url: number
    followers: number
    rating: number
    registration_date: number
    product_count: number
    response_rate: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ClientsAvgAggregateInputType = {
    followers?: true
    rating?: true
    product_count?: true
    response_rate?: true
  }

  export type ClientsSumAggregateInputType = {
    followers?: true
    rating?: true
    product_count?: true
    response_rate?: true
  }

  export type ClientsMinAggregateInputType = {
    id?: true
    name?: true
    owner_name?: true
    shop_url?: true
    followers?: true
    rating?: true
    registration_date?: true
    product_count?: true
    response_rate?: true
    created_at?: true
    updated_at?: true
  }

  export type ClientsMaxAggregateInputType = {
    id?: true
    name?: true
    owner_name?: true
    shop_url?: true
    followers?: true
    rating?: true
    registration_date?: true
    product_count?: true
    response_rate?: true
    created_at?: true
    updated_at?: true
  }

  export type ClientsCountAggregateInputType = {
    id?: true
    name?: true
    owner_name?: true
    shop_url?: true
    followers?: true
    rating?: true
    registration_date?: true
    product_count?: true
    response_rate?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ClientsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clients to aggregate.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned clients
    **/
    _count?: true | ClientsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ClientsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ClientsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClientsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClientsMaxAggregateInputType
  }

  export type GetClientsAggregateType<T extends ClientsAggregateArgs> = {
        [P in keyof T & keyof AggregateClients]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClients[P]>
      : GetScalarType<T[P], AggregateClients[P]>
  }




  export type clientsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: clientsWhereInput
    orderBy?: clientsOrderByWithAggregationInput | clientsOrderByWithAggregationInput[]
    by: ClientsScalarFieldEnum[] | ClientsScalarFieldEnum
    having?: clientsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClientsCountAggregateInputType | true
    _avg?: ClientsAvgAggregateInputType
    _sum?: ClientsSumAggregateInputType
    _min?: ClientsMinAggregateInputType
    _max?: ClientsMaxAggregateInputType
  }

  export type ClientsGroupByOutputType = {
    id: string
    name: string
    owner_name: string
    shop_url: string | null
    followers: number | null
    rating: Decimal | null
    registration_date: Date | null
    product_count: number | null
    response_rate: Decimal | null
    created_at: Date | null
    updated_at: Date | null
    _count: ClientsCountAggregateOutputType | null
    _avg: ClientsAvgAggregateOutputType | null
    _sum: ClientsSumAggregateOutputType | null
    _min: ClientsMinAggregateOutputType | null
    _max: ClientsMaxAggregateOutputType | null
  }

  type GetClientsGroupByPayload<T extends clientsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClientsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClientsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClientsGroupByOutputType[P]>
            : GetScalarType<T[P], ClientsGroupByOutputType[P]>
        }
      >
    >


  export type clientsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    owner_name?: boolean
    shop_url?: boolean
    followers?: boolean
    rating?: boolean
    registration_date?: boolean
    product_count?: boolean
    response_rate?: boolean
    created_at?: boolean
    updated_at?: boolean
    activity_log?: boolean | clients$activity_logArgs<ExtArgs>
    ad_metrics?: boolean | clients$ad_metricsArgs<ExtArgs>
    ai_requests?: boolean | clients$ai_requestsArgs<ExtArgs>
    analyses?: boolean | clients$analysesArgs<ExtArgs>
    chat_conversations?: boolean | clients$chat_conversationsArgs<ExtArgs>
    chat_messages?: boolean | clients$chat_messagesArgs<ExtArgs>
    products?: boolean | clients$productsArgs<ExtArgs>
    reports?: boolean | clients$reportsArgs<ExtArgs>
    _count?: boolean | ClientsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    owner_name?: boolean
    shop_url?: boolean
    followers?: boolean
    rating?: boolean
    registration_date?: boolean
    product_count?: boolean
    response_rate?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    owner_name?: boolean
    shop_url?: boolean
    followers?: boolean
    rating?: boolean
    registration_date?: boolean
    product_count?: boolean
    response_rate?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["clients"]>

  export type clientsSelectScalar = {
    id?: boolean
    name?: boolean
    owner_name?: boolean
    shop_url?: boolean
    followers?: boolean
    rating?: boolean
    registration_date?: boolean
    product_count?: boolean
    response_rate?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type clientsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "owner_name" | "shop_url" | "followers" | "rating" | "registration_date" | "product_count" | "response_rate" | "created_at" | "updated_at", ExtArgs["result"]["clients"]>
  export type clientsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activity_log?: boolean | clients$activity_logArgs<ExtArgs>
    ad_metrics?: boolean | clients$ad_metricsArgs<ExtArgs>
    ai_requests?: boolean | clients$ai_requestsArgs<ExtArgs>
    analyses?: boolean | clients$analysesArgs<ExtArgs>
    chat_conversations?: boolean | clients$chat_conversationsArgs<ExtArgs>
    chat_messages?: boolean | clients$chat_messagesArgs<ExtArgs>
    products?: boolean | clients$productsArgs<ExtArgs>
    reports?: boolean | clients$reportsArgs<ExtArgs>
    _count?: boolean | ClientsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type clientsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type clientsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $clientsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "clients"
    objects: {
      activity_log: Prisma.$activity_logPayload<ExtArgs>[]
      ad_metrics: Prisma.$ad_metricsPayload<ExtArgs>[]
      ai_requests: Prisma.$ai_requestsPayload<ExtArgs>[]
      analyses: Prisma.$analysesPayload<ExtArgs>[]
      chat_conversations: Prisma.$chat_conversationsPayload<ExtArgs>[]
      chat_messages: Prisma.$chat_messagesPayload<ExtArgs>[]
      products: Prisma.$productsPayload<ExtArgs>[]
      reports: Prisma.$reportsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      owner_name: string
      shop_url: string | null
      followers: number | null
      rating: Prisma.Decimal | null
      registration_date: Date | null
      product_count: number | null
      response_rate: Prisma.Decimal | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["clients"]>
    composites: {}
  }

  type clientsGetPayload<S extends boolean | null | undefined | clientsDefaultArgs> = $Result.GetResult<Prisma.$clientsPayload, S>

  type clientsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<clientsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClientsCountAggregateInputType | true
    }

  export interface clientsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['clients'], meta: { name: 'clients' } }
    /**
     * Find zero or one Clients that matches the filter.
     * @param {clientsFindUniqueArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends clientsFindUniqueArgs>(args: SelectSubset<T, clientsFindUniqueArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Clients that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {clientsFindUniqueOrThrowArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends clientsFindUniqueOrThrowArgs>(args: SelectSubset<T, clientsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindFirstArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends clientsFindFirstArgs>(args?: SelectSubset<T, clientsFindFirstArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Clients that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindFirstOrThrowArgs} args - Arguments to find a Clients
     * @example
     * // Get one Clients
     * const clients = await prisma.clients.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends clientsFindFirstOrThrowArgs>(args?: SelectSubset<T, clientsFindFirstOrThrowArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Clients that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Clients
     * const clients = await prisma.clients.findMany()
     * 
     * // Get first 10 Clients
     * const clients = await prisma.clients.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const clientsWithIdOnly = await prisma.clients.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends clientsFindManyArgs>(args?: SelectSubset<T, clientsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Clients.
     * @param {clientsCreateArgs} args - Arguments to create a Clients.
     * @example
     * // Create one Clients
     * const Clients = await prisma.clients.create({
     *   data: {
     *     // ... data to create a Clients
     *   }
     * })
     * 
     */
    create<T extends clientsCreateArgs>(args: SelectSubset<T, clientsCreateArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Clients.
     * @param {clientsCreateManyArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const clients = await prisma.clients.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends clientsCreateManyArgs>(args?: SelectSubset<T, clientsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Clients and returns the data saved in the database.
     * @param {clientsCreateManyAndReturnArgs} args - Arguments to create many Clients.
     * @example
     * // Create many Clients
     * const clients = await prisma.clients.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Clients and only return the `id`
     * const clientsWithIdOnly = await prisma.clients.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends clientsCreateManyAndReturnArgs>(args?: SelectSubset<T, clientsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Clients.
     * @param {clientsDeleteArgs} args - Arguments to delete one Clients.
     * @example
     * // Delete one Clients
     * const Clients = await prisma.clients.delete({
     *   where: {
     *     // ... filter to delete one Clients
     *   }
     * })
     * 
     */
    delete<T extends clientsDeleteArgs>(args: SelectSubset<T, clientsDeleteArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Clients.
     * @param {clientsUpdateArgs} args - Arguments to update one Clients.
     * @example
     * // Update one Clients
     * const clients = await prisma.clients.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends clientsUpdateArgs>(args: SelectSubset<T, clientsUpdateArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Clients.
     * @param {clientsDeleteManyArgs} args - Arguments to filter Clients to delete.
     * @example
     * // Delete a few Clients
     * const { count } = await prisma.clients.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends clientsDeleteManyArgs>(args?: SelectSubset<T, clientsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Clients
     * const clients = await prisma.clients.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends clientsUpdateManyArgs>(args: SelectSubset<T, clientsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Clients and returns the data updated in the database.
     * @param {clientsUpdateManyAndReturnArgs} args - Arguments to update many Clients.
     * @example
     * // Update many Clients
     * const clients = await prisma.clients.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Clients and only return the `id`
     * const clientsWithIdOnly = await prisma.clients.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends clientsUpdateManyAndReturnArgs>(args: SelectSubset<T, clientsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Clients.
     * @param {clientsUpsertArgs} args - Arguments to update or create a Clients.
     * @example
     * // Update or create a Clients
     * const clients = await prisma.clients.upsert({
     *   create: {
     *     // ... data to create a Clients
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Clients we want to update
     *   }
     * })
     */
    upsert<T extends clientsUpsertArgs>(args: SelectSubset<T, clientsUpsertArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsCountArgs} args - Arguments to filter Clients to count.
     * @example
     * // Count the number of Clients
     * const count = await prisma.clients.count({
     *   where: {
     *     // ... the filter for the Clients we want to count
     *   }
     * })
    **/
    count<T extends clientsCountArgs>(
      args?: Subset<T, clientsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClientsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClientsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClientsAggregateArgs>(args: Subset<T, ClientsAggregateArgs>): Prisma.PrismaPromise<GetClientsAggregateType<T>>

    /**
     * Group by Clients.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {clientsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends clientsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: clientsGroupByArgs['orderBy'] }
        : { orderBy?: clientsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, clientsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the clients model
   */
  readonly fields: clientsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for clients.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__clientsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    activity_log<T extends clients$activity_logArgs<ExtArgs> = {}>(args?: Subset<T, clients$activity_logArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ad_metrics<T extends clients$ad_metricsArgs<ExtArgs> = {}>(args?: Subset<T, clients$ad_metricsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ai_requests<T extends clients$ai_requestsArgs<ExtArgs> = {}>(args?: Subset<T, clients$ai_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    analyses<T extends clients$analysesArgs<ExtArgs> = {}>(args?: Subset<T, clients$analysesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_conversations<T extends clients$chat_conversationsArgs<ExtArgs> = {}>(args?: Subset<T, clients$chat_conversationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_messages<T extends clients$chat_messagesArgs<ExtArgs> = {}>(args?: Subset<T, clients$chat_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends clients$productsArgs<ExtArgs> = {}>(args?: Subset<T, clients$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reports<T extends clients$reportsArgs<ExtArgs> = {}>(args?: Subset<T, clients$reportsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the clients model
   */
  interface clientsFieldRefs {
    readonly id: FieldRef<"clients", 'String'>
    readonly name: FieldRef<"clients", 'String'>
    readonly owner_name: FieldRef<"clients", 'String'>
    readonly shop_url: FieldRef<"clients", 'String'>
    readonly followers: FieldRef<"clients", 'Int'>
    readonly rating: FieldRef<"clients", 'Decimal'>
    readonly registration_date: FieldRef<"clients", 'DateTime'>
    readonly product_count: FieldRef<"clients", 'Int'>
    readonly response_rate: FieldRef<"clients", 'Decimal'>
    readonly created_at: FieldRef<"clients", 'DateTime'>
    readonly updated_at: FieldRef<"clients", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * clients findUnique
   */
  export type clientsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients findUniqueOrThrow
   */
  export type clientsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients findFirst
   */
  export type clientsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clients.
     */
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients findFirstOrThrow
   */
  export type clientsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of clients.
     */
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients findMany
   */
  export type clientsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter, which clients to fetch.
     */
    where?: clientsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of clients to fetch.
     */
    orderBy?: clientsOrderByWithRelationInput | clientsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing clients.
     */
    cursor?: clientsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` clients from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` clients.
     */
    skip?: number
    distinct?: ClientsScalarFieldEnum | ClientsScalarFieldEnum[]
  }

  /**
   * clients create
   */
  export type clientsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The data needed to create a clients.
     */
    data: XOR<clientsCreateInput, clientsUncheckedCreateInput>
  }

  /**
   * clients createMany
   */
  export type clientsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many clients.
     */
    data: clientsCreateManyInput | clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clients createManyAndReturn
   */
  export type clientsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * The data used to create many clients.
     */
    data: clientsCreateManyInput | clientsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * clients update
   */
  export type clientsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The data needed to update a clients.
     */
    data: XOR<clientsUpdateInput, clientsUncheckedUpdateInput>
    /**
     * Choose, which clients to update.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients updateMany
   */
  export type clientsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update clients.
     */
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyInput>
    /**
     * Filter which clients to update
     */
    where?: clientsWhereInput
    /**
     * Limit how many clients to update.
     */
    limit?: number
  }

  /**
   * clients updateManyAndReturn
   */
  export type clientsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * The data used to update clients.
     */
    data: XOR<clientsUpdateManyMutationInput, clientsUncheckedUpdateManyInput>
    /**
     * Filter which clients to update
     */
    where?: clientsWhereInput
    /**
     * Limit how many clients to update.
     */
    limit?: number
  }

  /**
   * clients upsert
   */
  export type clientsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * The filter to search for the clients to update in case it exists.
     */
    where: clientsWhereUniqueInput
    /**
     * In case the clients found by the `where` argument doesn't exist, create a new clients with this data.
     */
    create: XOR<clientsCreateInput, clientsUncheckedCreateInput>
    /**
     * In case the clients was found with the provided `where` argument, update it with this data.
     */
    update: XOR<clientsUpdateInput, clientsUncheckedUpdateInput>
  }

  /**
   * clients delete
   */
  export type clientsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
    /**
     * Filter which clients to delete.
     */
    where: clientsWhereUniqueInput
  }

  /**
   * clients deleteMany
   */
  export type clientsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which clients to delete
     */
    where?: clientsWhereInput
    /**
     * Limit how many clients to delete.
     */
    limit?: number
  }

  /**
   * clients.activity_log
   */
  export type clients$activity_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    where?: activity_logWhereInput
    orderBy?: activity_logOrderByWithRelationInput | activity_logOrderByWithRelationInput[]
    cursor?: activity_logWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Activity_logScalarFieldEnum | Activity_logScalarFieldEnum[]
  }

  /**
   * clients.ad_metrics
   */
  export type clients$ad_metricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    where?: ad_metricsWhereInput
    orderBy?: ad_metricsOrderByWithRelationInput | ad_metricsOrderByWithRelationInput[]
    cursor?: ad_metricsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ad_metricsScalarFieldEnum | Ad_metricsScalarFieldEnum[]
  }

  /**
   * clients.ai_requests
   */
  export type clients$ai_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    where?: ai_requestsWhereInput
    orderBy?: ai_requestsOrderByWithRelationInput | ai_requestsOrderByWithRelationInput[]
    cursor?: ai_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ai_requestsScalarFieldEnum | Ai_requestsScalarFieldEnum[]
  }

  /**
   * clients.analyses
   */
  export type clients$analysesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    where?: analysesWhereInput
    orderBy?: analysesOrderByWithRelationInput | analysesOrderByWithRelationInput[]
    cursor?: analysesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AnalysesScalarFieldEnum | AnalysesScalarFieldEnum[]
  }

  /**
   * clients.chat_conversations
   */
  export type clients$chat_conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    where?: chat_conversationsWhereInput
    orderBy?: chat_conversationsOrderByWithRelationInput | chat_conversationsOrderByWithRelationInput[]
    cursor?: chat_conversationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_conversationsScalarFieldEnum | Chat_conversationsScalarFieldEnum[]
  }

  /**
   * clients.chat_messages
   */
  export type clients$chat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    where?: chat_messagesWhereInput
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    cursor?: chat_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_messagesScalarFieldEnum | Chat_messagesScalarFieldEnum[]
  }

  /**
   * clients.products
   */
  export type clients$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * clients.reports
   */
  export type clients$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    where?: reportsWhereInput
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    cursor?: reportsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * clients without action
   */
  export type clientsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the clients
     */
    select?: clientsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the clients
     */
    omit?: clientsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: clientsInclude<ExtArgs> | null
  }


  /**
   * Model configurations
   */

  export type AggregateConfigurations = {
    _count: ConfigurationsCountAggregateOutputType | null
    _min: ConfigurationsMinAggregateOutputType | null
    _max: ConfigurationsMaxAggregateOutputType | null
  }

  export type ConfigurationsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    key: string | null
    value: string | null
    is_global: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ConfigurationsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    key: string | null
    value: string | null
    is_global: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ConfigurationsCountAggregateOutputType = {
    id: number
    user_id: number
    key: number
    value: number
    is_global: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ConfigurationsMinAggregateInputType = {
    id?: true
    user_id?: true
    key?: true
    value?: true
    is_global?: true
    created_at?: true
    updated_at?: true
  }

  export type ConfigurationsMaxAggregateInputType = {
    id?: true
    user_id?: true
    key?: true
    value?: true
    is_global?: true
    created_at?: true
    updated_at?: true
  }

  export type ConfigurationsCountAggregateInputType = {
    id?: true
    user_id?: true
    key?: true
    value?: true
    is_global?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ConfigurationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configurations to aggregate.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configurations
    **/
    _count?: true | ConfigurationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfigurationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfigurationsMaxAggregateInputType
  }

  export type GetConfigurationsAggregateType<T extends ConfigurationsAggregateArgs> = {
        [P in keyof T & keyof AggregateConfigurations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfigurations[P]>
      : GetScalarType<T[P], AggregateConfigurations[P]>
  }




  export type configurationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configurationsWhereInput
    orderBy?: configurationsOrderByWithAggregationInput | configurationsOrderByWithAggregationInput[]
    by: ConfigurationsScalarFieldEnum[] | ConfigurationsScalarFieldEnum
    having?: configurationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfigurationsCountAggregateInputType | true
    _min?: ConfigurationsMinAggregateInputType
    _max?: ConfigurationsMaxAggregateInputType
  }

  export type ConfigurationsGroupByOutputType = {
    id: string
    user_id: string | null
    key: string
    value: string | null
    is_global: boolean | null
    created_at: Date | null
    updated_at: Date | null
    _count: ConfigurationsCountAggregateOutputType | null
    _min: ConfigurationsMinAggregateOutputType | null
    _max: ConfigurationsMaxAggregateOutputType | null
  }

  type GetConfigurationsGroupByPayload<T extends configurationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfigurationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfigurationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfigurationsGroupByOutputType[P]>
            : GetScalarType<T[P], ConfigurationsGroupByOutputType[P]>
        }
      >
    >


  export type configurationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    key?: boolean
    value?: boolean
    is_global?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | configurations$usersArgs<ExtArgs>
  }, ExtArgs["result"]["configurations"]>

  export type configurationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    key?: boolean
    value?: boolean
    is_global?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | configurations$usersArgs<ExtArgs>
  }, ExtArgs["result"]["configurations"]>

  export type configurationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    key?: boolean
    value?: boolean
    is_global?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | configurations$usersArgs<ExtArgs>
  }, ExtArgs["result"]["configurations"]>

  export type configurationsSelectScalar = {
    id?: boolean
    user_id?: boolean
    key?: boolean
    value?: boolean
    is_global?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type configurationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "key" | "value" | "is_global" | "created_at" | "updated_at", ExtArgs["result"]["configurations"]>
  export type configurationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | configurations$usersArgs<ExtArgs>
  }
  export type configurationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | configurations$usersArgs<ExtArgs>
  }
  export type configurationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | configurations$usersArgs<ExtArgs>
  }

  export type $configurationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configurations"
    objects: {
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      key: string
      value: string | null
      is_global: boolean | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["configurations"]>
    composites: {}
  }

  type configurationsGetPayload<S extends boolean | null | undefined | configurationsDefaultArgs> = $Result.GetResult<Prisma.$configurationsPayload, S>

  type configurationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<configurationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfigurationsCountAggregateInputType | true
    }

  export interface configurationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configurations'], meta: { name: 'configurations' } }
    /**
     * Find zero or one Configurations that matches the filter.
     * @param {configurationsFindUniqueArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends configurationsFindUniqueArgs>(args: SelectSubset<T, configurationsFindUniqueArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Configurations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {configurationsFindUniqueOrThrowArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends configurationsFindUniqueOrThrowArgs>(args: SelectSubset<T, configurationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsFindFirstArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends configurationsFindFirstArgs>(args?: SelectSubset<T, configurationsFindFirstArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configurations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsFindFirstOrThrowArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends configurationsFindFirstOrThrowArgs>(args?: SelectSubset<T, configurationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configurations
     * const configurations = await prisma.configurations.findMany()
     * 
     * // Get first 10 Configurations
     * const configurations = await prisma.configurations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configurationsWithIdOnly = await prisma.configurations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends configurationsFindManyArgs>(args?: SelectSubset<T, configurationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Configurations.
     * @param {configurationsCreateArgs} args - Arguments to create a Configurations.
     * @example
     * // Create one Configurations
     * const Configurations = await prisma.configurations.create({
     *   data: {
     *     // ... data to create a Configurations
     *   }
     * })
     * 
     */
    create<T extends configurationsCreateArgs>(args: SelectSubset<T, configurationsCreateArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Configurations.
     * @param {configurationsCreateManyArgs} args - Arguments to create many Configurations.
     * @example
     * // Create many Configurations
     * const configurations = await prisma.configurations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends configurationsCreateManyArgs>(args?: SelectSubset<T, configurationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configurations and returns the data saved in the database.
     * @param {configurationsCreateManyAndReturnArgs} args - Arguments to create many Configurations.
     * @example
     * // Create many Configurations
     * const configurations = await prisma.configurations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configurations and only return the `id`
     * const configurationsWithIdOnly = await prisma.configurations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends configurationsCreateManyAndReturnArgs>(args?: SelectSubset<T, configurationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Configurations.
     * @param {configurationsDeleteArgs} args - Arguments to delete one Configurations.
     * @example
     * // Delete one Configurations
     * const Configurations = await prisma.configurations.delete({
     *   where: {
     *     // ... filter to delete one Configurations
     *   }
     * })
     * 
     */
    delete<T extends configurationsDeleteArgs>(args: SelectSubset<T, configurationsDeleteArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Configurations.
     * @param {configurationsUpdateArgs} args - Arguments to update one Configurations.
     * @example
     * // Update one Configurations
     * const configurations = await prisma.configurations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends configurationsUpdateArgs>(args: SelectSubset<T, configurationsUpdateArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Configurations.
     * @param {configurationsDeleteManyArgs} args - Arguments to filter Configurations to delete.
     * @example
     * // Delete a few Configurations
     * const { count } = await prisma.configurations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends configurationsDeleteManyArgs>(args?: SelectSubset<T, configurationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configurations
     * const configurations = await prisma.configurations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends configurationsUpdateManyArgs>(args: SelectSubset<T, configurationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configurations and returns the data updated in the database.
     * @param {configurationsUpdateManyAndReturnArgs} args - Arguments to update many Configurations.
     * @example
     * // Update many Configurations
     * const configurations = await prisma.configurations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Configurations and only return the `id`
     * const configurationsWithIdOnly = await prisma.configurations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends configurationsUpdateManyAndReturnArgs>(args: SelectSubset<T, configurationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Configurations.
     * @param {configurationsUpsertArgs} args - Arguments to update or create a Configurations.
     * @example
     * // Update or create a Configurations
     * const configurations = await prisma.configurations.upsert({
     *   create: {
     *     // ... data to create a Configurations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configurations we want to update
     *   }
     * })
     */
    upsert<T extends configurationsUpsertArgs>(args: SelectSubset<T, configurationsUpsertArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsCountArgs} args - Arguments to filter Configurations to count.
     * @example
     * // Count the number of Configurations
     * const count = await prisma.configurations.count({
     *   where: {
     *     // ... the filter for the Configurations we want to count
     *   }
     * })
    **/
    count<T extends configurationsCountArgs>(
      args?: Subset<T, configurationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfigurationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfigurationsAggregateArgs>(args: Subset<T, ConfigurationsAggregateArgs>): Prisma.PrismaPromise<GetConfigurationsAggregateType<T>>

    /**
     * Group by Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configurationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configurationsGroupByArgs['orderBy'] }
        : { orderBy?: configurationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configurationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfigurationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configurations model
   */
  readonly fields: configurationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configurations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configurationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends configurations$usersArgs<ExtArgs> = {}>(args?: Subset<T, configurations$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the configurations model
   */
  interface configurationsFieldRefs {
    readonly id: FieldRef<"configurations", 'String'>
    readonly user_id: FieldRef<"configurations", 'String'>
    readonly key: FieldRef<"configurations", 'String'>
    readonly value: FieldRef<"configurations", 'String'>
    readonly is_global: FieldRef<"configurations", 'Boolean'>
    readonly created_at: FieldRef<"configurations", 'DateTime'>
    readonly updated_at: FieldRef<"configurations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * configurations findUnique
   */
  export type configurationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations findUniqueOrThrow
   */
  export type configurationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations findFirst
   */
  export type configurationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configurations.
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configurations.
     */
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * configurations findFirstOrThrow
   */
  export type configurationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configurations.
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configurations.
     */
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * configurations findMany
   */
  export type configurationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configurations.
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * configurations create
   */
  export type configurationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * The data needed to create a configurations.
     */
    data: XOR<configurationsCreateInput, configurationsUncheckedCreateInput>
  }

  /**
   * configurations createMany
   */
  export type configurationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configurations.
     */
    data: configurationsCreateManyInput | configurationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configurations createManyAndReturn
   */
  export type configurationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * The data used to create many configurations.
     */
    data: configurationsCreateManyInput | configurationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * configurations update
   */
  export type configurationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * The data needed to update a configurations.
     */
    data: XOR<configurationsUpdateInput, configurationsUncheckedUpdateInput>
    /**
     * Choose, which configurations to update.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations updateMany
   */
  export type configurationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configurations.
     */
    data: XOR<configurationsUpdateManyMutationInput, configurationsUncheckedUpdateManyInput>
    /**
     * Filter which configurations to update
     */
    where?: configurationsWhereInput
    /**
     * Limit how many configurations to update.
     */
    limit?: number
  }

  /**
   * configurations updateManyAndReturn
   */
  export type configurationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * The data used to update configurations.
     */
    data: XOR<configurationsUpdateManyMutationInput, configurationsUncheckedUpdateManyInput>
    /**
     * Filter which configurations to update
     */
    where?: configurationsWhereInput
    /**
     * Limit how many configurations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * configurations upsert
   */
  export type configurationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * The filter to search for the configurations to update in case it exists.
     */
    where: configurationsWhereUniqueInput
    /**
     * In case the configurations found by the `where` argument doesn't exist, create a new configurations with this data.
     */
    create: XOR<configurationsCreateInput, configurationsUncheckedCreateInput>
    /**
     * In case the configurations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configurationsUpdateInput, configurationsUncheckedUpdateInput>
  }

  /**
   * configurations delete
   */
  export type configurationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter which configurations to delete.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations deleteMany
   */
  export type configurationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configurations to delete
     */
    where?: configurationsWhereInput
    /**
     * Limit how many configurations to delete.
     */
    limit?: number
  }

  /**
   * configurations.users
   */
  export type configurations$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * configurations without action
   */
  export type configurationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
  }


  /**
   * Model images
   */

  export type AggregateImages = {
    _count: ImagesCountAggregateOutputType | null
    _avg: ImagesAvgAggregateOutputType | null
    _sum: ImagesSumAggregateOutputType | null
    _min: ImagesMinAggregateOutputType | null
    _max: ImagesMaxAggregateOutputType | null
  }

  export type ImagesAvgAggregateOutputType = {
    file_size: number | null
  }

  export type ImagesSumAggregateOutputType = {
    file_size: number | null
  }

  export type ImagesMinAggregateOutputType = {
    id: string | null
    analysis_id: string | null
    report_id: string | null
    url: string | null
    original_filename: string | null
    file_size: number | null
    mime_type: string | null
    created_at: Date | null
  }

  export type ImagesMaxAggregateOutputType = {
    id: string | null
    analysis_id: string | null
    report_id: string | null
    url: string | null
    original_filename: string | null
    file_size: number | null
    mime_type: string | null
    created_at: Date | null
  }

  export type ImagesCountAggregateOutputType = {
    id: number
    analysis_id: number
    report_id: number
    url: number
    original_filename: number
    file_size: number
    mime_type: number
    created_at: number
    _all: number
  }


  export type ImagesAvgAggregateInputType = {
    file_size?: true
  }

  export type ImagesSumAggregateInputType = {
    file_size?: true
  }

  export type ImagesMinAggregateInputType = {
    id?: true
    analysis_id?: true
    report_id?: true
    url?: true
    original_filename?: true
    file_size?: true
    mime_type?: true
    created_at?: true
  }

  export type ImagesMaxAggregateInputType = {
    id?: true
    analysis_id?: true
    report_id?: true
    url?: true
    original_filename?: true
    file_size?: true
    mime_type?: true
    created_at?: true
  }

  export type ImagesCountAggregateInputType = {
    id?: true
    analysis_id?: true
    report_id?: true
    url?: true
    original_filename?: true
    file_size?: true
    mime_type?: true
    created_at?: true
    _all?: true
  }

  export type ImagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which images to aggregate.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned images
    **/
    _count?: true | ImagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ImagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ImagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ImagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ImagesMaxAggregateInputType
  }

  export type GetImagesAggregateType<T extends ImagesAggregateArgs> = {
        [P in keyof T & keyof AggregateImages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImages[P]>
      : GetScalarType<T[P], AggregateImages[P]>
  }




  export type imagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagesWhereInput
    orderBy?: imagesOrderByWithAggregationInput | imagesOrderByWithAggregationInput[]
    by: ImagesScalarFieldEnum[] | ImagesScalarFieldEnum
    having?: imagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ImagesCountAggregateInputType | true
    _avg?: ImagesAvgAggregateInputType
    _sum?: ImagesSumAggregateInputType
    _min?: ImagesMinAggregateInputType
    _max?: ImagesMaxAggregateInputType
  }

  export type ImagesGroupByOutputType = {
    id: string
    analysis_id: string | null
    report_id: string | null
    url: string
    original_filename: string | null
    file_size: number | null
    mime_type: string | null
    created_at: Date | null
    _count: ImagesCountAggregateOutputType | null
    _avg: ImagesAvgAggregateOutputType | null
    _sum: ImagesSumAggregateOutputType | null
    _min: ImagesMinAggregateOutputType | null
    _max: ImagesMaxAggregateOutputType | null
  }

  type GetImagesGroupByPayload<T extends imagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ImagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ImagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ImagesGroupByOutputType[P]>
            : GetScalarType<T[P], ImagesGroupByOutputType[P]>
        }
      >
    >


  export type imagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    analysis_id?: boolean
    report_id?: boolean
    url?: boolean
    original_filename?: boolean
    file_size?: boolean
    mime_type?: boolean
    created_at?: boolean
    analyses?: boolean | images$analysesArgs<ExtArgs>
    reports?: boolean | images$reportsArgs<ExtArgs>
  }, ExtArgs["result"]["images"]>

  export type imagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    analysis_id?: boolean
    report_id?: boolean
    url?: boolean
    original_filename?: boolean
    file_size?: boolean
    mime_type?: boolean
    created_at?: boolean
    analyses?: boolean | images$analysesArgs<ExtArgs>
    reports?: boolean | images$reportsArgs<ExtArgs>
  }, ExtArgs["result"]["images"]>

  export type imagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    analysis_id?: boolean
    report_id?: boolean
    url?: boolean
    original_filename?: boolean
    file_size?: boolean
    mime_type?: boolean
    created_at?: boolean
    analyses?: boolean | images$analysesArgs<ExtArgs>
    reports?: boolean | images$reportsArgs<ExtArgs>
  }, ExtArgs["result"]["images"]>

  export type imagesSelectScalar = {
    id?: boolean
    analysis_id?: boolean
    report_id?: boolean
    url?: boolean
    original_filename?: boolean
    file_size?: boolean
    mime_type?: boolean
    created_at?: boolean
  }

  export type imagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "analysis_id" | "report_id" | "url" | "original_filename" | "file_size" | "mime_type" | "created_at", ExtArgs["result"]["images"]>
  export type imagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | images$analysesArgs<ExtArgs>
    reports?: boolean | images$reportsArgs<ExtArgs>
  }
  export type imagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | images$analysesArgs<ExtArgs>
    reports?: boolean | images$reportsArgs<ExtArgs>
  }
  export type imagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | images$analysesArgs<ExtArgs>
    reports?: boolean | images$reportsArgs<ExtArgs>
  }

  export type $imagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "images"
    objects: {
      analyses: Prisma.$analysesPayload<ExtArgs> | null
      reports: Prisma.$reportsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      analysis_id: string | null
      report_id: string | null
      url: string
      original_filename: string | null
      file_size: number | null
      mime_type: string | null
      created_at: Date | null
    }, ExtArgs["result"]["images"]>
    composites: {}
  }

  type imagesGetPayload<S extends boolean | null | undefined | imagesDefaultArgs> = $Result.GetResult<Prisma.$imagesPayload, S>

  type imagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<imagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ImagesCountAggregateInputType | true
    }

  export interface imagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['images'], meta: { name: 'images' } }
    /**
     * Find zero or one Images that matches the filter.
     * @param {imagesFindUniqueArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends imagesFindUniqueArgs>(args: SelectSubset<T, imagesFindUniqueArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Images that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {imagesFindUniqueOrThrowArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends imagesFindUniqueOrThrowArgs>(args: SelectSubset<T, imagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesFindFirstArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends imagesFindFirstArgs>(args?: SelectSubset<T, imagesFindFirstArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Images that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesFindFirstOrThrowArgs} args - Arguments to find a Images
     * @example
     * // Get one Images
     * const images = await prisma.images.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends imagesFindFirstOrThrowArgs>(args?: SelectSubset<T, imagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Images that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Images
     * const images = await prisma.images.findMany()
     * 
     * // Get first 10 Images
     * const images = await prisma.images.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imagesWithIdOnly = await prisma.images.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends imagesFindManyArgs>(args?: SelectSubset<T, imagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Images.
     * @param {imagesCreateArgs} args - Arguments to create a Images.
     * @example
     * // Create one Images
     * const Images = await prisma.images.create({
     *   data: {
     *     // ... data to create a Images
     *   }
     * })
     * 
     */
    create<T extends imagesCreateArgs>(args: SelectSubset<T, imagesCreateArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Images.
     * @param {imagesCreateManyArgs} args - Arguments to create many Images.
     * @example
     * // Create many Images
     * const images = await prisma.images.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends imagesCreateManyArgs>(args?: SelectSubset<T, imagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Images and returns the data saved in the database.
     * @param {imagesCreateManyAndReturnArgs} args - Arguments to create many Images.
     * @example
     * // Create many Images
     * const images = await prisma.images.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Images and only return the `id`
     * const imagesWithIdOnly = await prisma.images.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends imagesCreateManyAndReturnArgs>(args?: SelectSubset<T, imagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Images.
     * @param {imagesDeleteArgs} args - Arguments to delete one Images.
     * @example
     * // Delete one Images
     * const Images = await prisma.images.delete({
     *   where: {
     *     // ... filter to delete one Images
     *   }
     * })
     * 
     */
    delete<T extends imagesDeleteArgs>(args: SelectSubset<T, imagesDeleteArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Images.
     * @param {imagesUpdateArgs} args - Arguments to update one Images.
     * @example
     * // Update one Images
     * const images = await prisma.images.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends imagesUpdateArgs>(args: SelectSubset<T, imagesUpdateArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Images.
     * @param {imagesDeleteManyArgs} args - Arguments to filter Images to delete.
     * @example
     * // Delete a few Images
     * const { count } = await prisma.images.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends imagesDeleteManyArgs>(args?: SelectSubset<T, imagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Images
     * const images = await prisma.images.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends imagesUpdateManyArgs>(args: SelectSubset<T, imagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Images and returns the data updated in the database.
     * @param {imagesUpdateManyAndReturnArgs} args - Arguments to update many Images.
     * @example
     * // Update many Images
     * const images = await prisma.images.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Images and only return the `id`
     * const imagesWithIdOnly = await prisma.images.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends imagesUpdateManyAndReturnArgs>(args: SelectSubset<T, imagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Images.
     * @param {imagesUpsertArgs} args - Arguments to update or create a Images.
     * @example
     * // Update or create a Images
     * const images = await prisma.images.upsert({
     *   create: {
     *     // ... data to create a Images
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Images we want to update
     *   }
     * })
     */
    upsert<T extends imagesUpsertArgs>(args: SelectSubset<T, imagesUpsertArgs<ExtArgs>>): Prisma__imagesClient<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesCountArgs} args - Arguments to filter Images to count.
     * @example
     * // Count the number of Images
     * const count = await prisma.images.count({
     *   where: {
     *     // ... the filter for the Images we want to count
     *   }
     * })
    **/
    count<T extends imagesCountArgs>(
      args?: Subset<T, imagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ImagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ImagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ImagesAggregateArgs>(args: Subset<T, ImagesAggregateArgs>): Prisma.PrismaPromise<GetImagesAggregateType<T>>

    /**
     * Group by Images.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imagesGroupByArgs['orderBy'] }
        : { orderBy?: imagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the images model
   */
  readonly fields: imagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for images.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    analyses<T extends images$analysesArgs<ExtArgs> = {}>(args?: Subset<T, images$analysesArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    reports<T extends images$reportsArgs<ExtArgs> = {}>(args?: Subset<T, images$reportsArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the images model
   */
  interface imagesFieldRefs {
    readonly id: FieldRef<"images", 'String'>
    readonly analysis_id: FieldRef<"images", 'String'>
    readonly report_id: FieldRef<"images", 'String'>
    readonly url: FieldRef<"images", 'String'>
    readonly original_filename: FieldRef<"images", 'String'>
    readonly file_size: FieldRef<"images", 'Int'>
    readonly mime_type: FieldRef<"images", 'String'>
    readonly created_at: FieldRef<"images", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * images findUnique
   */
  export type imagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where: imagesWhereUniqueInput
  }

  /**
   * images findUniqueOrThrow
   */
  export type imagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where: imagesWhereUniqueInput
  }

  /**
   * images findFirst
   */
  export type imagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for images.
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of images.
     */
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }

  /**
   * images findFirstOrThrow
   */
  export type imagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for images.
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of images.
     */
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }

  /**
   * images findMany
   */
  export type imagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter, which images to fetch.
     */
    where?: imagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of images to fetch.
     */
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing images.
     */
    cursor?: imagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` images from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` images.
     */
    skip?: number
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }

  /**
   * images create
   */
  export type imagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * The data needed to create a images.
     */
    data: XOR<imagesCreateInput, imagesUncheckedCreateInput>
  }

  /**
   * images createMany
   */
  export type imagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many images.
     */
    data: imagesCreateManyInput | imagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * images createManyAndReturn
   */
  export type imagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * The data used to create many images.
     */
    data: imagesCreateManyInput | imagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * images update
   */
  export type imagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * The data needed to update a images.
     */
    data: XOR<imagesUpdateInput, imagesUncheckedUpdateInput>
    /**
     * Choose, which images to update.
     */
    where: imagesWhereUniqueInput
  }

  /**
   * images updateMany
   */
  export type imagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update images.
     */
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyInput>
    /**
     * Filter which images to update
     */
    where?: imagesWhereInput
    /**
     * Limit how many images to update.
     */
    limit?: number
  }

  /**
   * images updateManyAndReturn
   */
  export type imagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * The data used to update images.
     */
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyInput>
    /**
     * Filter which images to update
     */
    where?: imagesWhereInput
    /**
     * Limit how many images to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * images upsert
   */
  export type imagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * The filter to search for the images to update in case it exists.
     */
    where: imagesWhereUniqueInput
    /**
     * In case the images found by the `where` argument doesn't exist, create a new images with this data.
     */
    create: XOR<imagesCreateInput, imagesUncheckedCreateInput>
    /**
     * In case the images was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imagesUpdateInput, imagesUncheckedUpdateInput>
  }

  /**
   * images delete
   */
  export type imagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    /**
     * Filter which images to delete.
     */
    where: imagesWhereUniqueInput
  }

  /**
   * images deleteMany
   */
  export type imagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which images to delete
     */
    where?: imagesWhereInput
    /**
     * Limit how many images to delete.
     */
    limit?: number
  }

  /**
   * images.analyses
   */
  export type images$analysesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    where?: analysesWhereInput
  }

  /**
   * images.reports
   */
  export type images$reportsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    where?: reportsWhereInput
  }

  /**
   * images without action
   */
  export type imagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
  }


  /**
   * Model products
   */

  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    price: Decimal | null
    original_price: Decimal | null
    stock: number | null
    views: number | null
    sales: number | null
    conversion_rate: Decimal | null
  }

  export type ProductsSumAggregateOutputType = {
    price: Decimal | null
    original_price: Decimal | null
    stock: number | null
    views: number | null
    sales: number | null
    conversion_rate: Decimal | null
  }

  export type ProductsMinAggregateOutputType = {
    id: string | null
    client_id: string | null
    product_id: string | null
    name: string | null
    price: Decimal | null
    original_price: Decimal | null
    stock: number | null
    views: number | null
    sales: number | null
    conversion_rate: Decimal | null
    category: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: string | null
    client_id: string | null
    product_id: string | null
    name: string | null
    price: Decimal | null
    original_price: Decimal | null
    stock: number | null
    views: number | null
    sales: number | null
    conversion_rate: Decimal | null
    category: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    client_id: number
    product_id: number
    name: number
    price: number
    original_price: number
    stock: number
    views: number
    sales: number
    conversion_rate: number
    category: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    price?: true
    original_price?: true
    stock?: true
    views?: true
    sales?: true
    conversion_rate?: true
  }

  export type ProductsSumAggregateInputType = {
    price?: true
    original_price?: true
    stock?: true
    views?: true
    sales?: true
    conversion_rate?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    client_id?: true
    product_id?: true
    name?: true
    price?: true
    original_price?: true
    stock?: true
    views?: true
    sales?: true
    conversion_rate?: true
    category?: true
    created_at?: true
    updated_at?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    client_id?: true
    product_id?: true
    name?: true
    price?: true
    original_price?: true
    stock?: true
    views?: true
    sales?: true
    conversion_rate?: true
    category?: true
    created_at?: true
    updated_at?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    client_id?: true
    product_id?: true
    name?: true
    price?: true
    original_price?: true
    stock?: true
    views?: true
    sales?: true
    conversion_rate?: true
    category?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type ProductsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to aggregate.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
    orderBy?: productsOrderByWithAggregationInput | productsOrderByWithAggregationInput[]
    by: ProductsScalarFieldEnum[] | ProductsScalarFieldEnum
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }

  export type ProductsGroupByOutputType = {
    id: string
    client_id: string
    product_id: string | null
    name: string
    price: Decimal | null
    original_price: Decimal | null
    stock: number | null
    views: number | null
    sales: number | null
    conversion_rate: Decimal | null
    category: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    name?: boolean
    price?: boolean
    original_price?: boolean
    stock?: boolean
    views?: boolean
    sales?: boolean
    conversion_rate?: boolean
    category?: boolean
    created_at?: boolean
    updated_at?: boolean
    ad_metrics?: boolean | products$ad_metricsArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    name?: boolean
    price?: boolean
    original_price?: boolean
    stock?: boolean
    views?: boolean
    sales?: boolean
    conversion_rate?: boolean
    category?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    name?: boolean
    price?: boolean
    original_price?: boolean
    stock?: boolean
    views?: boolean
    sales?: boolean
    conversion_rate?: boolean
    category?: boolean
    created_at?: boolean
    updated_at?: boolean
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectScalar = {
    id?: boolean
    client_id?: boolean
    product_id?: boolean
    name?: boolean
    price?: boolean
    original_price?: boolean
    stock?: boolean
    views?: boolean
    sales?: boolean
    conversion_rate?: boolean
    category?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "client_id" | "product_id" | "name" | "price" | "original_price" | "stock" | "views" | "sales" | "conversion_rate" | "category" | "created_at" | "updated_at", ExtArgs["result"]["products"]>
  export type productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ad_metrics?: boolean | products$ad_metricsArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type productsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }
  export type productsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }

  export type $productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "products"
    objects: {
      ad_metrics: Prisma.$ad_metricsPayload<ExtArgs>[]
      clients: Prisma.$clientsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      client_id: string
      product_id: string | null
      name: string
      price: Prisma.Decimal | null
      original_price: Prisma.Decimal | null
      stock: number | null
      views: number | null
      sales: number | null
      conversion_rate: Prisma.Decimal | null
      category: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["products"]>
    composites: {}
  }

  type productsGetPayload<S extends boolean | null | undefined | productsDefaultArgs> = $Result.GetResult<Prisma.$productsPayload, S>

  type productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductsCountAggregateInputType | true
    }

  export interface productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['products'], meta: { name: 'products' } }
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productsFindUniqueArgs>(args: SelectSubset<T, productsFindUniqueArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productsFindUniqueOrThrowArgs>(args: SelectSubset<T, productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productsFindFirstArgs>(args?: SelectSubset<T, productsFindFirstArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productsFindFirstOrThrowArgs>(args?: SelectSubset<T, productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productsFindManyArgs>(args?: SelectSubset<T, productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
     */
    create<T extends productsCreateArgs>(args: SelectSubset<T, productsCreateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {productsCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productsCreateManyArgs>(args?: SelectSubset<T, productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {productsCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productsCreateManyAndReturnArgs>(args?: SelectSubset<T, productsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
     */
    delete<T extends productsDeleteArgs>(args: SelectSubset<T, productsDeleteArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productsUpdateArgs>(args: SelectSubset<T, productsUpdateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productsDeleteManyArgs>(args?: SelectSubset<T, productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productsUpdateManyArgs>(args: SelectSubset<T, productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {productsUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productsUpdateManyAndReturnArgs>(args: SelectSubset<T, productsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
     */
    upsert<T extends productsUpsertArgs>(args: SelectSubset<T, productsUpsertArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): Prisma.PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productsGroupByArgs['orderBy'] }
        : { orderBy?: productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the products model
   */
  readonly fields: productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ad_metrics<T extends products$ad_metricsArgs<ExtArgs> = {}>(args?: Subset<T, products$ad_metricsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ad_metricsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    clients<T extends clientsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clientsDefaultArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the products model
   */
  interface productsFieldRefs {
    readonly id: FieldRef<"products", 'String'>
    readonly client_id: FieldRef<"products", 'String'>
    readonly product_id: FieldRef<"products", 'String'>
    readonly name: FieldRef<"products", 'String'>
    readonly price: FieldRef<"products", 'Decimal'>
    readonly original_price: FieldRef<"products", 'Decimal'>
    readonly stock: FieldRef<"products", 'Int'>
    readonly views: FieldRef<"products", 'Int'>
    readonly sales: FieldRef<"products", 'Int'>
    readonly conversion_rate: FieldRef<"products", 'Decimal'>
    readonly category: FieldRef<"products", 'String'>
    readonly created_at: FieldRef<"products", 'DateTime'>
    readonly updated_at: FieldRef<"products", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * products findUnique
   */
  export type productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findUniqueOrThrow
   */
  export type productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findFirst
   */
  export type productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findFirstOrThrow
   */
  export type productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findMany
   */
  export type productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products create
   */
  export type productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to create a products.
     */
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }

  /**
   * products createMany
   */
  export type productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * products createManyAndReturn
   */
  export type productsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * products update
   */
  export type productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to update a products.
     */
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products updateMany
   */
  export type productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
  }

  /**
   * products updateManyAndReturn
   */
  export type productsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * products upsert
   */
  export type productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The filter to search for the products to update in case it exists.
     */
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     */
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }

  /**
   * products delete
   */
  export type productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter which products to delete.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to delete
     */
    where?: productsWhereInput
    /**
     * Limit how many products to delete.
     */
    limit?: number
  }

  /**
   * products.ad_metrics
   */
  export type products$ad_metricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ad_metrics
     */
    select?: ad_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ad_metrics
     */
    omit?: ad_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ad_metricsInclude<ExtArgs> | null
    where?: ad_metricsWhereInput
    orderBy?: ad_metricsOrderByWithRelationInput | ad_metricsOrderByWithRelationInput[]
    cursor?: ad_metricsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ad_metricsScalarFieldEnum | Ad_metricsScalarFieldEnum[]
  }

  /**
   * products without action
   */
  export type productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
  }


  /**
   * Model report_metrics
   */

  export type AggregateReport_metrics = {
    _count: Report_metricsCountAggregateOutputType | null
    _avg: Report_metricsAvgAggregateOutputType | null
    _sum: Report_metricsSumAggregateOutputType | null
    _min: Report_metricsMinAggregateOutputType | null
    _max: Report_metricsMaxAggregateOutputType | null
  }

  export type Report_metricsAvgAggregateOutputType = {
    change_percentage: Decimal | null
  }

  export type Report_metricsSumAggregateOutputType = {
    change_percentage: Decimal | null
  }

  export type Report_metricsMinAggregateOutputType = {
    id: string | null
    report_id: string | null
    metric_name: string | null
    metric_value: string | null
    previous_value: string | null
    change_percentage: Decimal | null
    created_at: Date | null
  }

  export type Report_metricsMaxAggregateOutputType = {
    id: string | null
    report_id: string | null
    metric_name: string | null
    metric_value: string | null
    previous_value: string | null
    change_percentage: Decimal | null
    created_at: Date | null
  }

  export type Report_metricsCountAggregateOutputType = {
    id: number
    report_id: number
    metric_name: number
    metric_value: number
    previous_value: number
    change_percentage: number
    created_at: number
    _all: number
  }


  export type Report_metricsAvgAggregateInputType = {
    change_percentage?: true
  }

  export type Report_metricsSumAggregateInputType = {
    change_percentage?: true
  }

  export type Report_metricsMinAggregateInputType = {
    id?: true
    report_id?: true
    metric_name?: true
    metric_value?: true
    previous_value?: true
    change_percentage?: true
    created_at?: true
  }

  export type Report_metricsMaxAggregateInputType = {
    id?: true
    report_id?: true
    metric_name?: true
    metric_value?: true
    previous_value?: true
    change_percentage?: true
    created_at?: true
  }

  export type Report_metricsCountAggregateInputType = {
    id?: true
    report_id?: true
    metric_name?: true
    metric_value?: true
    previous_value?: true
    change_percentage?: true
    created_at?: true
    _all?: true
  }

  export type Report_metricsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which report_metrics to aggregate.
     */
    where?: report_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of report_metrics to fetch.
     */
    orderBy?: report_metricsOrderByWithRelationInput | report_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: report_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` report_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` report_metrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned report_metrics
    **/
    _count?: true | Report_metricsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Report_metricsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Report_metricsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Report_metricsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Report_metricsMaxAggregateInputType
  }

  export type GetReport_metricsAggregateType<T extends Report_metricsAggregateArgs> = {
        [P in keyof T & keyof AggregateReport_metrics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReport_metrics[P]>
      : GetScalarType<T[P], AggregateReport_metrics[P]>
  }




  export type report_metricsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: report_metricsWhereInput
    orderBy?: report_metricsOrderByWithAggregationInput | report_metricsOrderByWithAggregationInput[]
    by: Report_metricsScalarFieldEnum[] | Report_metricsScalarFieldEnum
    having?: report_metricsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Report_metricsCountAggregateInputType | true
    _avg?: Report_metricsAvgAggregateInputType
    _sum?: Report_metricsSumAggregateInputType
    _min?: Report_metricsMinAggregateInputType
    _max?: Report_metricsMaxAggregateInputType
  }

  export type Report_metricsGroupByOutputType = {
    id: string
    report_id: string
    metric_name: string
    metric_value: string
    previous_value: string | null
    change_percentage: Decimal | null
    created_at: Date | null
    _count: Report_metricsCountAggregateOutputType | null
    _avg: Report_metricsAvgAggregateOutputType | null
    _sum: Report_metricsSumAggregateOutputType | null
    _min: Report_metricsMinAggregateOutputType | null
    _max: Report_metricsMaxAggregateOutputType | null
  }

  type GetReport_metricsGroupByPayload<T extends report_metricsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Report_metricsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Report_metricsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Report_metricsGroupByOutputType[P]>
            : GetScalarType<T[P], Report_metricsGroupByOutputType[P]>
        }
      >
    >


  export type report_metricsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    metric_name?: boolean
    metric_value?: boolean
    previous_value?: boolean
    change_percentage?: boolean
    created_at?: boolean
    reports?: boolean | reportsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report_metrics"]>

  export type report_metricsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    metric_name?: boolean
    metric_value?: boolean
    previous_value?: boolean
    change_percentage?: boolean
    created_at?: boolean
    reports?: boolean | reportsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report_metrics"]>

  export type report_metricsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    report_id?: boolean
    metric_name?: boolean
    metric_value?: boolean
    previous_value?: boolean
    change_percentage?: boolean
    created_at?: boolean
    reports?: boolean | reportsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["report_metrics"]>

  export type report_metricsSelectScalar = {
    id?: boolean
    report_id?: boolean
    metric_name?: boolean
    metric_value?: boolean
    previous_value?: boolean
    change_percentage?: boolean
    created_at?: boolean
  }

  export type report_metricsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "report_id" | "metric_name" | "metric_value" | "previous_value" | "change_percentage" | "created_at", ExtArgs["result"]["report_metrics"]>
  export type report_metricsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reports?: boolean | reportsDefaultArgs<ExtArgs>
  }
  export type report_metricsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reports?: boolean | reportsDefaultArgs<ExtArgs>
  }
  export type report_metricsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    reports?: boolean | reportsDefaultArgs<ExtArgs>
  }

  export type $report_metricsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "report_metrics"
    objects: {
      reports: Prisma.$reportsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      report_id: string
      metric_name: string
      metric_value: string
      previous_value: string | null
      change_percentage: Prisma.Decimal | null
      created_at: Date | null
    }, ExtArgs["result"]["report_metrics"]>
    composites: {}
  }

  type report_metricsGetPayload<S extends boolean | null | undefined | report_metricsDefaultArgs> = $Result.GetResult<Prisma.$report_metricsPayload, S>

  type report_metricsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<report_metricsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Report_metricsCountAggregateInputType | true
    }

  export interface report_metricsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['report_metrics'], meta: { name: 'report_metrics' } }
    /**
     * Find zero or one Report_metrics that matches the filter.
     * @param {report_metricsFindUniqueArgs} args - Arguments to find a Report_metrics
     * @example
     * // Get one Report_metrics
     * const report_metrics = await prisma.report_metrics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends report_metricsFindUniqueArgs>(args: SelectSubset<T, report_metricsFindUniqueArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Report_metrics that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {report_metricsFindUniqueOrThrowArgs} args - Arguments to find a Report_metrics
     * @example
     * // Get one Report_metrics
     * const report_metrics = await prisma.report_metrics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends report_metricsFindUniqueOrThrowArgs>(args: SelectSubset<T, report_metricsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report_metrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {report_metricsFindFirstArgs} args - Arguments to find a Report_metrics
     * @example
     * // Get one Report_metrics
     * const report_metrics = await prisma.report_metrics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends report_metricsFindFirstArgs>(args?: SelectSubset<T, report_metricsFindFirstArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Report_metrics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {report_metricsFindFirstOrThrowArgs} args - Arguments to find a Report_metrics
     * @example
     * // Get one Report_metrics
     * const report_metrics = await prisma.report_metrics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends report_metricsFindFirstOrThrowArgs>(args?: SelectSubset<T, report_metricsFindFirstOrThrowArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Report_metrics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {report_metricsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Report_metrics
     * const report_metrics = await prisma.report_metrics.findMany()
     * 
     * // Get first 10 Report_metrics
     * const report_metrics = await prisma.report_metrics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const report_metricsWithIdOnly = await prisma.report_metrics.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends report_metricsFindManyArgs>(args?: SelectSubset<T, report_metricsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Report_metrics.
     * @param {report_metricsCreateArgs} args - Arguments to create a Report_metrics.
     * @example
     * // Create one Report_metrics
     * const Report_metrics = await prisma.report_metrics.create({
     *   data: {
     *     // ... data to create a Report_metrics
     *   }
     * })
     * 
     */
    create<T extends report_metricsCreateArgs>(args: SelectSubset<T, report_metricsCreateArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Report_metrics.
     * @param {report_metricsCreateManyArgs} args - Arguments to create many Report_metrics.
     * @example
     * // Create many Report_metrics
     * const report_metrics = await prisma.report_metrics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends report_metricsCreateManyArgs>(args?: SelectSubset<T, report_metricsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Report_metrics and returns the data saved in the database.
     * @param {report_metricsCreateManyAndReturnArgs} args - Arguments to create many Report_metrics.
     * @example
     * // Create many Report_metrics
     * const report_metrics = await prisma.report_metrics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Report_metrics and only return the `id`
     * const report_metricsWithIdOnly = await prisma.report_metrics.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends report_metricsCreateManyAndReturnArgs>(args?: SelectSubset<T, report_metricsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Report_metrics.
     * @param {report_metricsDeleteArgs} args - Arguments to delete one Report_metrics.
     * @example
     * // Delete one Report_metrics
     * const Report_metrics = await prisma.report_metrics.delete({
     *   where: {
     *     // ... filter to delete one Report_metrics
     *   }
     * })
     * 
     */
    delete<T extends report_metricsDeleteArgs>(args: SelectSubset<T, report_metricsDeleteArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Report_metrics.
     * @param {report_metricsUpdateArgs} args - Arguments to update one Report_metrics.
     * @example
     * // Update one Report_metrics
     * const report_metrics = await prisma.report_metrics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends report_metricsUpdateArgs>(args: SelectSubset<T, report_metricsUpdateArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Report_metrics.
     * @param {report_metricsDeleteManyArgs} args - Arguments to filter Report_metrics to delete.
     * @example
     * // Delete a few Report_metrics
     * const { count } = await prisma.report_metrics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends report_metricsDeleteManyArgs>(args?: SelectSubset<T, report_metricsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Report_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {report_metricsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Report_metrics
     * const report_metrics = await prisma.report_metrics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends report_metricsUpdateManyArgs>(args: SelectSubset<T, report_metricsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Report_metrics and returns the data updated in the database.
     * @param {report_metricsUpdateManyAndReturnArgs} args - Arguments to update many Report_metrics.
     * @example
     * // Update many Report_metrics
     * const report_metrics = await prisma.report_metrics.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Report_metrics and only return the `id`
     * const report_metricsWithIdOnly = await prisma.report_metrics.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends report_metricsUpdateManyAndReturnArgs>(args: SelectSubset<T, report_metricsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Report_metrics.
     * @param {report_metricsUpsertArgs} args - Arguments to update or create a Report_metrics.
     * @example
     * // Update or create a Report_metrics
     * const report_metrics = await prisma.report_metrics.upsert({
     *   create: {
     *     // ... data to create a Report_metrics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Report_metrics we want to update
     *   }
     * })
     */
    upsert<T extends report_metricsUpsertArgs>(args: SelectSubset<T, report_metricsUpsertArgs<ExtArgs>>): Prisma__report_metricsClient<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Report_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {report_metricsCountArgs} args - Arguments to filter Report_metrics to count.
     * @example
     * // Count the number of Report_metrics
     * const count = await prisma.report_metrics.count({
     *   where: {
     *     // ... the filter for the Report_metrics we want to count
     *   }
     * })
    **/
    count<T extends report_metricsCountArgs>(
      args?: Subset<T, report_metricsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Report_metricsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Report_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Report_metricsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Report_metricsAggregateArgs>(args: Subset<T, Report_metricsAggregateArgs>): Prisma.PrismaPromise<GetReport_metricsAggregateType<T>>

    /**
     * Group by Report_metrics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {report_metricsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends report_metricsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: report_metricsGroupByArgs['orderBy'] }
        : { orderBy?: report_metricsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, report_metricsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReport_metricsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the report_metrics model
   */
  readonly fields: report_metricsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for report_metrics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__report_metricsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    reports<T extends reportsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, reportsDefaultArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the report_metrics model
   */
  interface report_metricsFieldRefs {
    readonly id: FieldRef<"report_metrics", 'String'>
    readonly report_id: FieldRef<"report_metrics", 'String'>
    readonly metric_name: FieldRef<"report_metrics", 'String'>
    readonly metric_value: FieldRef<"report_metrics", 'String'>
    readonly previous_value: FieldRef<"report_metrics", 'String'>
    readonly change_percentage: FieldRef<"report_metrics", 'Decimal'>
    readonly created_at: FieldRef<"report_metrics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * report_metrics findUnique
   */
  export type report_metricsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * Filter, which report_metrics to fetch.
     */
    where: report_metricsWhereUniqueInput
  }

  /**
   * report_metrics findUniqueOrThrow
   */
  export type report_metricsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * Filter, which report_metrics to fetch.
     */
    where: report_metricsWhereUniqueInput
  }

  /**
   * report_metrics findFirst
   */
  export type report_metricsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * Filter, which report_metrics to fetch.
     */
    where?: report_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of report_metrics to fetch.
     */
    orderBy?: report_metricsOrderByWithRelationInput | report_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for report_metrics.
     */
    cursor?: report_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` report_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` report_metrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of report_metrics.
     */
    distinct?: Report_metricsScalarFieldEnum | Report_metricsScalarFieldEnum[]
  }

  /**
   * report_metrics findFirstOrThrow
   */
  export type report_metricsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * Filter, which report_metrics to fetch.
     */
    where?: report_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of report_metrics to fetch.
     */
    orderBy?: report_metricsOrderByWithRelationInput | report_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for report_metrics.
     */
    cursor?: report_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` report_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` report_metrics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of report_metrics.
     */
    distinct?: Report_metricsScalarFieldEnum | Report_metricsScalarFieldEnum[]
  }

  /**
   * report_metrics findMany
   */
  export type report_metricsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * Filter, which report_metrics to fetch.
     */
    where?: report_metricsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of report_metrics to fetch.
     */
    orderBy?: report_metricsOrderByWithRelationInput | report_metricsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing report_metrics.
     */
    cursor?: report_metricsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` report_metrics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` report_metrics.
     */
    skip?: number
    distinct?: Report_metricsScalarFieldEnum | Report_metricsScalarFieldEnum[]
  }

  /**
   * report_metrics create
   */
  export type report_metricsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * The data needed to create a report_metrics.
     */
    data: XOR<report_metricsCreateInput, report_metricsUncheckedCreateInput>
  }

  /**
   * report_metrics createMany
   */
  export type report_metricsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many report_metrics.
     */
    data: report_metricsCreateManyInput | report_metricsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * report_metrics createManyAndReturn
   */
  export type report_metricsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * The data used to create many report_metrics.
     */
    data: report_metricsCreateManyInput | report_metricsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * report_metrics update
   */
  export type report_metricsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * The data needed to update a report_metrics.
     */
    data: XOR<report_metricsUpdateInput, report_metricsUncheckedUpdateInput>
    /**
     * Choose, which report_metrics to update.
     */
    where: report_metricsWhereUniqueInput
  }

  /**
   * report_metrics updateMany
   */
  export type report_metricsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update report_metrics.
     */
    data: XOR<report_metricsUpdateManyMutationInput, report_metricsUncheckedUpdateManyInput>
    /**
     * Filter which report_metrics to update
     */
    where?: report_metricsWhereInput
    /**
     * Limit how many report_metrics to update.
     */
    limit?: number
  }

  /**
   * report_metrics updateManyAndReturn
   */
  export type report_metricsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * The data used to update report_metrics.
     */
    data: XOR<report_metricsUpdateManyMutationInput, report_metricsUncheckedUpdateManyInput>
    /**
     * Filter which report_metrics to update
     */
    where?: report_metricsWhereInput
    /**
     * Limit how many report_metrics to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * report_metrics upsert
   */
  export type report_metricsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * The filter to search for the report_metrics to update in case it exists.
     */
    where: report_metricsWhereUniqueInput
    /**
     * In case the report_metrics found by the `where` argument doesn't exist, create a new report_metrics with this data.
     */
    create: XOR<report_metricsCreateInput, report_metricsUncheckedCreateInput>
    /**
     * In case the report_metrics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<report_metricsUpdateInput, report_metricsUncheckedUpdateInput>
  }

  /**
   * report_metrics delete
   */
  export type report_metricsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    /**
     * Filter which report_metrics to delete.
     */
    where: report_metricsWhereUniqueInput
  }

  /**
   * report_metrics deleteMany
   */
  export type report_metricsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which report_metrics to delete
     */
    where?: report_metricsWhereInput
    /**
     * Limit how many report_metrics to delete.
     */
    limit?: number
  }

  /**
   * report_metrics without action
   */
  export type report_metricsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
  }


  /**
   * Model reports
   */

  export type AggregateReports = {
    _count: ReportsCountAggregateOutputType | null
    _min: ReportsMinAggregateOutputType | null
    _max: ReportsMaxAggregateOutputType | null
  }

  export type ReportsMinAggregateOutputType = {
    id: string | null
    client_id: string | null
    analysis_id: string | null
    type: string | null
    title: string | null
    url: string | null
    status: string | null
    created_at: Date | null
  }

  export type ReportsMaxAggregateOutputType = {
    id: string | null
    client_id: string | null
    analysis_id: string | null
    type: string | null
    title: string | null
    url: string | null
    status: string | null
    created_at: Date | null
  }

  export type ReportsCountAggregateOutputType = {
    id: number
    client_id: number
    analysis_id: number
    type: number
    title: number
    url: number
    status: number
    created_at: number
    _all: number
  }


  export type ReportsMinAggregateInputType = {
    id?: true
    client_id?: true
    analysis_id?: true
    type?: true
    title?: true
    url?: true
    status?: true
    created_at?: true
  }

  export type ReportsMaxAggregateInputType = {
    id?: true
    client_id?: true
    analysis_id?: true
    type?: true
    title?: true
    url?: true
    status?: true
    created_at?: true
  }

  export type ReportsCountAggregateInputType = {
    id?: true
    client_id?: true
    analysis_id?: true
    type?: true
    title?: true
    url?: true
    status?: true
    created_at?: true
    _all?: true
  }

  export type ReportsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reports to aggregate.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned reports
    **/
    _count?: true | ReportsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReportsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReportsMaxAggregateInputType
  }

  export type GetReportsAggregateType<T extends ReportsAggregateArgs> = {
        [P in keyof T & keyof AggregateReports]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReports[P]>
      : GetScalarType<T[P], AggregateReports[P]>
  }




  export type reportsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: reportsWhereInput
    orderBy?: reportsOrderByWithAggregationInput | reportsOrderByWithAggregationInput[]
    by: ReportsScalarFieldEnum[] | ReportsScalarFieldEnum
    having?: reportsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReportsCountAggregateInputType | true
    _min?: ReportsMinAggregateInputType
    _max?: ReportsMaxAggregateInputType
  }

  export type ReportsGroupByOutputType = {
    id: string
    client_id: string
    analysis_id: string | null
    type: string
    title: string | null
    url: string | null
    status: string | null
    created_at: Date | null
    _count: ReportsCountAggregateOutputType | null
    _min: ReportsMinAggregateOutputType | null
    _max: ReportsMaxAggregateOutputType | null
  }

  type GetReportsGroupByPayload<T extends reportsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReportsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReportsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReportsGroupByOutputType[P]>
            : GetScalarType<T[P], ReportsGroupByOutputType[P]>
        }
      >
    >


  export type reportsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    analysis_id?: boolean
    type?: boolean
    title?: boolean
    url?: boolean
    status?: boolean
    created_at?: boolean
    images?: boolean | reports$imagesArgs<ExtArgs>
    report_metrics?: boolean | reports$report_metricsArgs<ExtArgs>
    analyses?: boolean | reports$analysesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    _count?: boolean | ReportsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reports"]>

  export type reportsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    analysis_id?: boolean
    type?: boolean
    title?: boolean
    url?: boolean
    status?: boolean
    created_at?: boolean
    analyses?: boolean | reports$analysesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reports"]>

  export type reportsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    client_id?: boolean
    analysis_id?: boolean
    type?: boolean
    title?: boolean
    url?: boolean
    status?: boolean
    created_at?: boolean
    analyses?: boolean | reports$analysesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reports"]>

  export type reportsSelectScalar = {
    id?: boolean
    client_id?: boolean
    analysis_id?: boolean
    type?: boolean
    title?: boolean
    url?: boolean
    status?: boolean
    created_at?: boolean
  }

  export type reportsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "client_id" | "analysis_id" | "type" | "title" | "url" | "status" | "created_at", ExtArgs["result"]["reports"]>
  export type reportsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | reports$imagesArgs<ExtArgs>
    report_metrics?: boolean | reports$report_metricsArgs<ExtArgs>
    analyses?: boolean | reports$analysesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
    _count?: boolean | ReportsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type reportsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | reports$analysesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }
  export type reportsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    analyses?: boolean | reports$analysesArgs<ExtArgs>
    clients?: boolean | clientsDefaultArgs<ExtArgs>
  }

  export type $reportsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "reports"
    objects: {
      images: Prisma.$imagesPayload<ExtArgs>[]
      report_metrics: Prisma.$report_metricsPayload<ExtArgs>[]
      analyses: Prisma.$analysesPayload<ExtArgs> | null
      clients: Prisma.$clientsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      client_id: string
      analysis_id: string | null
      type: string
      title: string | null
      url: string | null
      status: string | null
      created_at: Date | null
    }, ExtArgs["result"]["reports"]>
    composites: {}
  }

  type reportsGetPayload<S extends boolean | null | undefined | reportsDefaultArgs> = $Result.GetResult<Prisma.$reportsPayload, S>

  type reportsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<reportsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReportsCountAggregateInputType | true
    }

  export interface reportsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['reports'], meta: { name: 'reports' } }
    /**
     * Find zero or one Reports that matches the filter.
     * @param {reportsFindUniqueArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends reportsFindUniqueArgs>(args: SelectSubset<T, reportsFindUniqueArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reports that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {reportsFindUniqueOrThrowArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends reportsFindUniqueOrThrowArgs>(args: SelectSubset<T, reportsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsFindFirstArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends reportsFindFirstArgs>(args?: SelectSubset<T, reportsFindFirstArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reports that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsFindFirstOrThrowArgs} args - Arguments to find a Reports
     * @example
     * // Get one Reports
     * const reports = await prisma.reports.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends reportsFindFirstOrThrowArgs>(args?: SelectSubset<T, reportsFindFirstOrThrowArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reports that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reports
     * const reports = await prisma.reports.findMany()
     * 
     * // Get first 10 Reports
     * const reports = await prisma.reports.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reportsWithIdOnly = await prisma.reports.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends reportsFindManyArgs>(args?: SelectSubset<T, reportsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reports.
     * @param {reportsCreateArgs} args - Arguments to create a Reports.
     * @example
     * // Create one Reports
     * const Reports = await prisma.reports.create({
     *   data: {
     *     // ... data to create a Reports
     *   }
     * })
     * 
     */
    create<T extends reportsCreateArgs>(args: SelectSubset<T, reportsCreateArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reports.
     * @param {reportsCreateManyArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const reports = await prisma.reports.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends reportsCreateManyArgs>(args?: SelectSubset<T, reportsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reports and returns the data saved in the database.
     * @param {reportsCreateManyAndReturnArgs} args - Arguments to create many Reports.
     * @example
     * // Create many Reports
     * const reports = await prisma.reports.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reports and only return the `id`
     * const reportsWithIdOnly = await prisma.reports.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends reportsCreateManyAndReturnArgs>(args?: SelectSubset<T, reportsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reports.
     * @param {reportsDeleteArgs} args - Arguments to delete one Reports.
     * @example
     * // Delete one Reports
     * const Reports = await prisma.reports.delete({
     *   where: {
     *     // ... filter to delete one Reports
     *   }
     * })
     * 
     */
    delete<T extends reportsDeleteArgs>(args: SelectSubset<T, reportsDeleteArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reports.
     * @param {reportsUpdateArgs} args - Arguments to update one Reports.
     * @example
     * // Update one Reports
     * const reports = await prisma.reports.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends reportsUpdateArgs>(args: SelectSubset<T, reportsUpdateArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reports.
     * @param {reportsDeleteManyArgs} args - Arguments to filter Reports to delete.
     * @example
     * // Delete a few Reports
     * const { count } = await prisma.reports.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends reportsDeleteManyArgs>(args?: SelectSubset<T, reportsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reports
     * const reports = await prisma.reports.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends reportsUpdateManyArgs>(args: SelectSubset<T, reportsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reports and returns the data updated in the database.
     * @param {reportsUpdateManyAndReturnArgs} args - Arguments to update many Reports.
     * @example
     * // Update many Reports
     * const reports = await prisma.reports.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reports and only return the `id`
     * const reportsWithIdOnly = await prisma.reports.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends reportsUpdateManyAndReturnArgs>(args: SelectSubset<T, reportsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reports.
     * @param {reportsUpsertArgs} args - Arguments to update or create a Reports.
     * @example
     * // Update or create a Reports
     * const reports = await prisma.reports.upsert({
     *   create: {
     *     // ... data to create a Reports
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reports we want to update
     *   }
     * })
     */
    upsert<T extends reportsUpsertArgs>(args: SelectSubset<T, reportsUpsertArgs<ExtArgs>>): Prisma__reportsClient<$Result.GetResult<Prisma.$reportsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsCountArgs} args - Arguments to filter Reports to count.
     * @example
     * // Count the number of Reports
     * const count = await prisma.reports.count({
     *   where: {
     *     // ... the filter for the Reports we want to count
     *   }
     * })
    **/
    count<T extends reportsCountArgs>(
      args?: Subset<T, reportsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReportsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReportsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReportsAggregateArgs>(args: Subset<T, ReportsAggregateArgs>): Prisma.PrismaPromise<GetReportsAggregateType<T>>

    /**
     * Group by Reports.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {reportsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends reportsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: reportsGroupByArgs['orderBy'] }
        : { orderBy?: reportsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, reportsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReportsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the reports model
   */
  readonly fields: reportsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for reports.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__reportsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    images<T extends reports$imagesArgs<ExtArgs> = {}>(args?: Subset<T, reports$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    report_metrics<T extends reports$report_metricsArgs<ExtArgs> = {}>(args?: Subset<T, reports$report_metricsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$report_metricsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    analyses<T extends reports$analysesArgs<ExtArgs> = {}>(args?: Subset<T, reports$analysesArgs<ExtArgs>>): Prisma__analysesClient<$Result.GetResult<Prisma.$analysesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    clients<T extends clientsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, clientsDefaultArgs<ExtArgs>>): Prisma__clientsClient<$Result.GetResult<Prisma.$clientsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the reports model
   */
  interface reportsFieldRefs {
    readonly id: FieldRef<"reports", 'String'>
    readonly client_id: FieldRef<"reports", 'String'>
    readonly analysis_id: FieldRef<"reports", 'String'>
    readonly type: FieldRef<"reports", 'String'>
    readonly title: FieldRef<"reports", 'String'>
    readonly url: FieldRef<"reports", 'String'>
    readonly status: FieldRef<"reports", 'String'>
    readonly created_at: FieldRef<"reports", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * reports findUnique
   */
  export type reportsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports findUniqueOrThrow
   */
  export type reportsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports findFirst
   */
  export type reportsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reports.
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reports.
     */
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * reports findFirstOrThrow
   */
  export type reportsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for reports.
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of reports.
     */
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * reports findMany
   */
  export type reportsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter, which reports to fetch.
     */
    where?: reportsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of reports to fetch.
     */
    orderBy?: reportsOrderByWithRelationInput | reportsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing reports.
     */
    cursor?: reportsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` reports from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` reports.
     */
    skip?: number
    distinct?: ReportsScalarFieldEnum | ReportsScalarFieldEnum[]
  }

  /**
   * reports create
   */
  export type reportsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * The data needed to create a reports.
     */
    data: XOR<reportsCreateInput, reportsUncheckedCreateInput>
  }

  /**
   * reports createMany
   */
  export type reportsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many reports.
     */
    data: reportsCreateManyInput | reportsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * reports createManyAndReturn
   */
  export type reportsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * The data used to create many reports.
     */
    data: reportsCreateManyInput | reportsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * reports update
   */
  export type reportsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * The data needed to update a reports.
     */
    data: XOR<reportsUpdateInput, reportsUncheckedUpdateInput>
    /**
     * Choose, which reports to update.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports updateMany
   */
  export type reportsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update reports.
     */
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyInput>
    /**
     * Filter which reports to update
     */
    where?: reportsWhereInput
    /**
     * Limit how many reports to update.
     */
    limit?: number
  }

  /**
   * reports updateManyAndReturn
   */
  export type reportsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * The data used to update reports.
     */
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyInput>
    /**
     * Filter which reports to update
     */
    where?: reportsWhereInput
    /**
     * Limit how many reports to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * reports upsert
   */
  export type reportsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * The filter to search for the reports to update in case it exists.
     */
    where: reportsWhereUniqueInput
    /**
     * In case the reports found by the `where` argument doesn't exist, create a new reports with this data.
     */
    create: XOR<reportsCreateInput, reportsUncheckedCreateInput>
    /**
     * In case the reports was found with the provided `where` argument, update it with this data.
     */
    update: XOR<reportsUpdateInput, reportsUncheckedUpdateInput>
  }

  /**
   * reports delete
   */
  export type reportsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
    /**
     * Filter which reports to delete.
     */
    where: reportsWhereUniqueInput
  }

  /**
   * reports deleteMany
   */
  export type reportsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which reports to delete
     */
    where?: reportsWhereInput
    /**
     * Limit how many reports to delete.
     */
    limit?: number
  }

  /**
   * reports.images
   */
  export type reports$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the images
     */
    select?: imagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the images
     */
    omit?: imagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: imagesInclude<ExtArgs> | null
    where?: imagesWhereInput
    orderBy?: imagesOrderByWithRelationInput | imagesOrderByWithRelationInput[]
    cursor?: imagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ImagesScalarFieldEnum | ImagesScalarFieldEnum[]
  }

  /**
   * reports.report_metrics
   */
  export type reports$report_metricsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the report_metrics
     */
    select?: report_metricsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the report_metrics
     */
    omit?: report_metricsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: report_metricsInclude<ExtArgs> | null
    where?: report_metricsWhereInput
    orderBy?: report_metricsOrderByWithRelationInput | report_metricsOrderByWithRelationInput[]
    cursor?: report_metricsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Report_metricsScalarFieldEnum | Report_metricsScalarFieldEnum[]
  }

  /**
   * reports.analyses
   */
  export type reports$analysesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the analyses
     */
    select?: analysesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the analyses
     */
    omit?: analysesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: analysesInclude<ExtArgs> | null
    where?: analysesWhereInput
  }

  /**
   * reports without action
   */
  export type reportsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the reports
     */
    select?: reportsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the reports
     */
    omit?: reportsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: reportsInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    role: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    role: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    role: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    created_at?: true
    updated_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    role?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    name: string
    email: string
    password: string
    role: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
    activity_log?: boolean | users$activity_logArgs<ExtArgs>
    ai_requests?: boolean | users$ai_requestsArgs<ExtArgs>
    chat_conversations?: boolean | users$chat_conversationsArgs<ExtArgs>
    chat_messages?: boolean | users$chat_messagesArgs<ExtArgs>
    configurations?: boolean | users$configurationsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    role?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "role" | "created_at" | "updated_at", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    activity_log?: boolean | users$activity_logArgs<ExtArgs>
    ai_requests?: boolean | users$ai_requestsArgs<ExtArgs>
    chat_conversations?: boolean | users$chat_conversationsArgs<ExtArgs>
    chat_messages?: boolean | users$chat_messagesArgs<ExtArgs>
    configurations?: boolean | users$configurationsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      activity_log: Prisma.$activity_logPayload<ExtArgs>[]
      ai_requests: Prisma.$ai_requestsPayload<ExtArgs>[]
      chat_conversations: Prisma.$chat_conversationsPayload<ExtArgs>[]
      chat_messages: Prisma.$chat_messagesPayload<ExtArgs>[]
      configurations: Prisma.$configurationsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      password: string
      role: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    activity_log<T extends users$activity_logArgs<ExtArgs> = {}>(args?: Subset<T, users$activity_logArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$activity_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ai_requests<T extends users$ai_requestsArgs<ExtArgs> = {}>(args?: Subset<T, users$ai_requestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ai_requestsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_conversations<T extends users$chat_conversationsArgs<ExtArgs> = {}>(args?: Subset<T, users$chat_conversationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_conversationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_messages<T extends users$chat_messagesArgs<ExtArgs> = {}>(args?: Subset<T, users$chat_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configurations<T extends users$configurationsArgs<ExtArgs> = {}>(args?: Subset<T, users$configurationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly name: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.activity_log
   */
  export type users$activity_logArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the activity_log
     */
    select?: activity_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the activity_log
     */
    omit?: activity_logOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: activity_logInclude<ExtArgs> | null
    where?: activity_logWhereInput
    orderBy?: activity_logOrderByWithRelationInput | activity_logOrderByWithRelationInput[]
    cursor?: activity_logWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Activity_logScalarFieldEnum | Activity_logScalarFieldEnum[]
  }

  /**
   * users.ai_requests
   */
  export type users$ai_requestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ai_requests
     */
    select?: ai_requestsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ai_requests
     */
    omit?: ai_requestsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ai_requestsInclude<ExtArgs> | null
    where?: ai_requestsWhereInput
    orderBy?: ai_requestsOrderByWithRelationInput | ai_requestsOrderByWithRelationInput[]
    cursor?: ai_requestsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Ai_requestsScalarFieldEnum | Ai_requestsScalarFieldEnum[]
  }

  /**
   * users.chat_conversations
   */
  export type users$chat_conversationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_conversations
     */
    select?: chat_conversationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_conversations
     */
    omit?: chat_conversationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_conversationsInclude<ExtArgs> | null
    where?: chat_conversationsWhereInput
    orderBy?: chat_conversationsOrderByWithRelationInput | chat_conversationsOrderByWithRelationInput[]
    cursor?: chat_conversationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_conversationsScalarFieldEnum | Chat_conversationsScalarFieldEnum[]
  }

  /**
   * users.chat_messages
   */
  export type users$chat_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_messages
     */
    select?: chat_messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_messages
     */
    omit?: chat_messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_messagesInclude<ExtArgs> | null
    where?: chat_messagesWhereInput
    orderBy?: chat_messagesOrderByWithRelationInput | chat_messagesOrderByWithRelationInput[]
    cursor?: chat_messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_messagesScalarFieldEnum | Chat_messagesScalarFieldEnum[]
  }

  /**
   * users.configurations
   */
  export type users$configurationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    where?: configurationsWhereInput
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    cursor?: configurationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Activity_logScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    client_id: 'client_id',
    action: 'action',
    entity_type: 'entity_type',
    entity_id: 'entity_id',
    details: 'details',
    created_at: 'created_at'
  };

  export type Activity_logScalarFieldEnum = (typeof Activity_logScalarFieldEnum)[keyof typeof Activity_logScalarFieldEnum]


  export const Ad_metricsScalarFieldEnum: {
    id: 'id',
    client_id: 'client_id',
    product_id: 'product_id',
    ad_type: 'ad_type',
    impressions: 'impressions',
    clicks: 'clicks',
    ctr: 'ctr',
    spend: 'spend',
    conversions: 'conversions',
    roas: 'roas',
    date: 'date',
    created_at: 'created_at'
  };

  export type Ad_metricsScalarFieldEnum = (typeof Ad_metricsScalarFieldEnum)[keyof typeof Ad_metricsScalarFieldEnum]


  export const Ai_requestsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    client_id: 'client_id',
    prompt: 'prompt',
    response: 'response',
    model: 'model',
    tokens_used: 'tokens_used',
    processing_time: 'processing_time',
    created_at: 'created_at'
  };

  export type Ai_requestsScalarFieldEnum = (typeof Ai_requestsScalarFieldEnum)[keyof typeof Ai_requestsScalarFieldEnum]


  export const AnalysesScalarFieldEnum: {
    id: 'id',
    client_id: 'client_id',
    type: 'type',
    title: 'title',
    created_at: 'created_at'
  };

  export type AnalysesScalarFieldEnum = (typeof AnalysesScalarFieldEnum)[keyof typeof AnalysesScalarFieldEnum]


  export const Analysis_resultsScalarFieldEnum: {
    id: 'id',
    analysis_id: 'analysis_id',
    content: 'content',
    source_image_url: 'source_image_url',
    processed_by: 'processed_by',
    created_at: 'created_at'
  };

  export type Analysis_resultsScalarFieldEnum = (typeof Analysis_resultsScalarFieldEnum)[keyof typeof Analysis_resultsScalarFieldEnum]


  export const Chat_conversationsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    client_id: 'client_id',
    title: 'title',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Chat_conversationsScalarFieldEnum = (typeof Chat_conversationsScalarFieldEnum)[keyof typeof Chat_conversationsScalarFieldEnum]


  export const Chat_messagesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    client_id: 'client_id',
    conversation_id: 'conversation_id',
    content: 'content',
    is_ai_response: 'is_ai_response',
    created_at: 'created_at'
  };

  export type Chat_messagesScalarFieldEnum = (typeof Chat_messagesScalarFieldEnum)[keyof typeof Chat_messagesScalarFieldEnum]


  export const ClientsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    owner_name: 'owner_name',
    shop_url: 'shop_url',
    followers: 'followers',
    rating: 'rating',
    registration_date: 'registration_date',
    product_count: 'product_count',
    response_rate: 'response_rate',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ClientsScalarFieldEnum = (typeof ClientsScalarFieldEnum)[keyof typeof ClientsScalarFieldEnum]


  export const ConfigurationsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    key: 'key',
    value: 'value',
    is_global: 'is_global',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ConfigurationsScalarFieldEnum = (typeof ConfigurationsScalarFieldEnum)[keyof typeof ConfigurationsScalarFieldEnum]


  export const ImagesScalarFieldEnum: {
    id: 'id',
    analysis_id: 'analysis_id',
    report_id: 'report_id',
    url: 'url',
    original_filename: 'original_filename',
    file_size: 'file_size',
    mime_type: 'mime_type',
    created_at: 'created_at'
  };

  export type ImagesScalarFieldEnum = (typeof ImagesScalarFieldEnum)[keyof typeof ImagesScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    client_id: 'client_id',
    product_id: 'product_id',
    name: 'name',
    price: 'price',
    original_price: 'original_price',
    stock: 'stock',
    views: 'views',
    sales: 'sales',
    conversion_rate: 'conversion_rate',
    category: 'category',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Report_metricsScalarFieldEnum: {
    id: 'id',
    report_id: 'report_id',
    metric_name: 'metric_name',
    metric_value: 'metric_value',
    previous_value: 'previous_value',
    change_percentage: 'change_percentage',
    created_at: 'created_at'
  };

  export type Report_metricsScalarFieldEnum = (typeof Report_metricsScalarFieldEnum)[keyof typeof Report_metricsScalarFieldEnum]


  export const ReportsScalarFieldEnum: {
    id: 'id',
    client_id: 'client_id',
    analysis_id: 'analysis_id',
    type: 'type',
    title: 'title',
    url: 'url',
    status: 'status',
    created_at: 'created_at'
  };

  export type ReportsScalarFieldEnum = (typeof ReportsScalarFieldEnum)[keyof typeof ReportsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    role: 'role',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    
  /**
   * Deep Input Types
   */


  export type activity_logWhereInput = {
    AND?: activity_logWhereInput | activity_logWhereInput[]
    OR?: activity_logWhereInput[]
    NOT?: activity_logWhereInput | activity_logWhereInput[]
    id?: UuidFilter<"activity_log"> | string
    user_id?: UuidNullableFilter<"activity_log"> | string | null
    client_id?: UuidNullableFilter<"activity_log"> | string | null
    action?: StringFilter<"activity_log"> | string
    entity_type?: StringFilter<"activity_log"> | string
    entity_id?: UuidNullableFilter<"activity_log"> | string | null
    details?: JsonNullableFilter<"activity_log">
    created_at?: DateTimeNullableFilter<"activity_log"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type activity_logOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    action?: SortOrder
    entity_type?: SortOrder
    entity_id?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type activity_logWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: activity_logWhereInput | activity_logWhereInput[]
    OR?: activity_logWhereInput[]
    NOT?: activity_logWhereInput | activity_logWhereInput[]
    user_id?: UuidNullableFilter<"activity_log"> | string | null
    client_id?: UuidNullableFilter<"activity_log"> | string | null
    action?: StringFilter<"activity_log"> | string
    entity_type?: StringFilter<"activity_log"> | string
    entity_id?: UuidNullableFilter<"activity_log"> | string | null
    details?: JsonNullableFilter<"activity_log">
    created_at?: DateTimeNullableFilter<"activity_log"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type activity_logOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    action?: SortOrder
    entity_type?: SortOrder
    entity_id?: SortOrderInput | SortOrder
    details?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: activity_logCountOrderByAggregateInput
    _max?: activity_logMaxOrderByAggregateInput
    _min?: activity_logMinOrderByAggregateInput
  }

  export type activity_logScalarWhereWithAggregatesInput = {
    AND?: activity_logScalarWhereWithAggregatesInput | activity_logScalarWhereWithAggregatesInput[]
    OR?: activity_logScalarWhereWithAggregatesInput[]
    NOT?: activity_logScalarWhereWithAggregatesInput | activity_logScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"activity_log"> | string
    user_id?: UuidNullableWithAggregatesFilter<"activity_log"> | string | null
    client_id?: UuidNullableWithAggregatesFilter<"activity_log"> | string | null
    action?: StringWithAggregatesFilter<"activity_log"> | string
    entity_type?: StringWithAggregatesFilter<"activity_log"> | string
    entity_id?: UuidNullableWithAggregatesFilter<"activity_log"> | string | null
    details?: JsonNullableWithAggregatesFilter<"activity_log">
    created_at?: DateTimeNullableWithAggregatesFilter<"activity_log"> | Date | string | null
  }

  export type ad_metricsWhereInput = {
    AND?: ad_metricsWhereInput | ad_metricsWhereInput[]
    OR?: ad_metricsWhereInput[]
    NOT?: ad_metricsWhereInput | ad_metricsWhereInput[]
    id?: UuidFilter<"ad_metrics"> | string
    client_id?: UuidFilter<"ad_metrics"> | string
    product_id?: UuidNullableFilter<"ad_metrics"> | string | null
    ad_type?: StringFilter<"ad_metrics"> | string
    impressions?: IntNullableFilter<"ad_metrics"> | number | null
    clicks?: IntNullableFilter<"ad_metrics"> | number | null
    ctr?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    spend?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    conversions?: IntNullableFilter<"ad_metrics"> | number | null
    roas?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFilter<"ad_metrics"> | Date | string
    created_at?: DateTimeNullableFilter<"ad_metrics"> | Date | string | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
    products?: XOR<ProductsNullableScalarRelationFilter, productsWhereInput> | null
  }

  export type ad_metricsOrderByWithRelationInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    ad_type?: SortOrder
    impressions?: SortOrderInput | SortOrder
    clicks?: SortOrderInput | SortOrder
    ctr?: SortOrderInput | SortOrder
    spend?: SortOrderInput | SortOrder
    conversions?: SortOrderInput | SortOrder
    roas?: SortOrderInput | SortOrder
    date?: SortOrder
    created_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    products?: productsOrderByWithRelationInput
  }

  export type ad_metricsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ad_metricsWhereInput | ad_metricsWhereInput[]
    OR?: ad_metricsWhereInput[]
    NOT?: ad_metricsWhereInput | ad_metricsWhereInput[]
    client_id?: UuidFilter<"ad_metrics"> | string
    product_id?: UuidNullableFilter<"ad_metrics"> | string | null
    ad_type?: StringFilter<"ad_metrics"> | string
    impressions?: IntNullableFilter<"ad_metrics"> | number | null
    clicks?: IntNullableFilter<"ad_metrics"> | number | null
    ctr?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    spend?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    conversions?: IntNullableFilter<"ad_metrics"> | number | null
    roas?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFilter<"ad_metrics"> | Date | string
    created_at?: DateTimeNullableFilter<"ad_metrics"> | Date | string | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
    products?: XOR<ProductsNullableScalarRelationFilter, productsWhereInput> | null
  }, "id">

  export type ad_metricsOrderByWithAggregationInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    ad_type?: SortOrder
    impressions?: SortOrderInput | SortOrder
    clicks?: SortOrderInput | SortOrder
    ctr?: SortOrderInput | SortOrder
    spend?: SortOrderInput | SortOrder
    conversions?: SortOrderInput | SortOrder
    roas?: SortOrderInput | SortOrder
    date?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: ad_metricsCountOrderByAggregateInput
    _avg?: ad_metricsAvgOrderByAggregateInput
    _max?: ad_metricsMaxOrderByAggregateInput
    _min?: ad_metricsMinOrderByAggregateInput
    _sum?: ad_metricsSumOrderByAggregateInput
  }

  export type ad_metricsScalarWhereWithAggregatesInput = {
    AND?: ad_metricsScalarWhereWithAggregatesInput | ad_metricsScalarWhereWithAggregatesInput[]
    OR?: ad_metricsScalarWhereWithAggregatesInput[]
    NOT?: ad_metricsScalarWhereWithAggregatesInput | ad_metricsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ad_metrics"> | string
    client_id?: UuidWithAggregatesFilter<"ad_metrics"> | string
    product_id?: UuidNullableWithAggregatesFilter<"ad_metrics"> | string | null
    ad_type?: StringWithAggregatesFilter<"ad_metrics"> | string
    impressions?: IntNullableWithAggregatesFilter<"ad_metrics"> | number | null
    clicks?: IntNullableWithAggregatesFilter<"ad_metrics"> | number | null
    ctr?: DecimalNullableWithAggregatesFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    spend?: DecimalNullableWithAggregatesFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    conversions?: IntNullableWithAggregatesFilter<"ad_metrics"> | number | null
    roas?: DecimalNullableWithAggregatesFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeWithAggregatesFilter<"ad_metrics"> | Date | string
    created_at?: DateTimeNullableWithAggregatesFilter<"ad_metrics"> | Date | string | null
  }

  export type ai_requestsWhereInput = {
    AND?: ai_requestsWhereInput | ai_requestsWhereInput[]
    OR?: ai_requestsWhereInput[]
    NOT?: ai_requestsWhereInput | ai_requestsWhereInput[]
    id?: UuidFilter<"ai_requests"> | string
    user_id?: UuidNullableFilter<"ai_requests"> | string | null
    client_id?: UuidNullableFilter<"ai_requests"> | string | null
    prompt?: StringFilter<"ai_requests"> | string
    response?: StringNullableFilter<"ai_requests"> | string | null
    model?: StringNullableFilter<"ai_requests"> | string | null
    tokens_used?: IntNullableFilter<"ai_requests"> | number | null
    processing_time?: IntNullableFilter<"ai_requests"> | number | null
    created_at?: DateTimeNullableFilter<"ai_requests"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type ai_requestsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    prompt?: SortOrder
    response?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    tokens_used?: SortOrderInput | SortOrder
    processing_time?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type ai_requestsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ai_requestsWhereInput | ai_requestsWhereInput[]
    OR?: ai_requestsWhereInput[]
    NOT?: ai_requestsWhereInput | ai_requestsWhereInput[]
    user_id?: UuidNullableFilter<"ai_requests"> | string | null
    client_id?: UuidNullableFilter<"ai_requests"> | string | null
    prompt?: StringFilter<"ai_requests"> | string
    response?: StringNullableFilter<"ai_requests"> | string | null
    model?: StringNullableFilter<"ai_requests"> | string | null
    tokens_used?: IntNullableFilter<"ai_requests"> | number | null
    processing_time?: IntNullableFilter<"ai_requests"> | number | null
    created_at?: DateTimeNullableFilter<"ai_requests"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type ai_requestsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    prompt?: SortOrder
    response?: SortOrderInput | SortOrder
    model?: SortOrderInput | SortOrder
    tokens_used?: SortOrderInput | SortOrder
    processing_time?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: ai_requestsCountOrderByAggregateInput
    _avg?: ai_requestsAvgOrderByAggregateInput
    _max?: ai_requestsMaxOrderByAggregateInput
    _min?: ai_requestsMinOrderByAggregateInput
    _sum?: ai_requestsSumOrderByAggregateInput
  }

  export type ai_requestsScalarWhereWithAggregatesInput = {
    AND?: ai_requestsScalarWhereWithAggregatesInput | ai_requestsScalarWhereWithAggregatesInput[]
    OR?: ai_requestsScalarWhereWithAggregatesInput[]
    NOT?: ai_requestsScalarWhereWithAggregatesInput | ai_requestsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"ai_requests"> | string
    user_id?: UuidNullableWithAggregatesFilter<"ai_requests"> | string | null
    client_id?: UuidNullableWithAggregatesFilter<"ai_requests"> | string | null
    prompt?: StringWithAggregatesFilter<"ai_requests"> | string
    response?: StringNullableWithAggregatesFilter<"ai_requests"> | string | null
    model?: StringNullableWithAggregatesFilter<"ai_requests"> | string | null
    tokens_used?: IntNullableWithAggregatesFilter<"ai_requests"> | number | null
    processing_time?: IntNullableWithAggregatesFilter<"ai_requests"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"ai_requests"> | Date | string | null
  }

  export type analysesWhereInput = {
    AND?: analysesWhereInput | analysesWhereInput[]
    OR?: analysesWhereInput[]
    NOT?: analysesWhereInput | analysesWhereInput[]
    id?: UuidFilter<"analyses"> | string
    client_id?: UuidFilter<"analyses"> | string
    type?: StringFilter<"analyses"> | string
    title?: StringNullableFilter<"analyses"> | string | null
    created_at?: DateTimeNullableFilter<"analyses"> | Date | string | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
    analysis_results?: Analysis_resultsListRelationFilter
    images?: ImagesListRelationFilter
    reports?: ReportsListRelationFilter
  }

  export type analysesOrderByWithRelationInput = {
    id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    title?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    analysis_results?: analysis_resultsOrderByRelationAggregateInput
    images?: imagesOrderByRelationAggregateInput
    reports?: reportsOrderByRelationAggregateInput
  }

  export type analysesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: analysesWhereInput | analysesWhereInput[]
    OR?: analysesWhereInput[]
    NOT?: analysesWhereInput | analysesWhereInput[]
    client_id?: UuidFilter<"analyses"> | string
    type?: StringFilter<"analyses"> | string
    title?: StringNullableFilter<"analyses"> | string | null
    created_at?: DateTimeNullableFilter<"analyses"> | Date | string | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
    analysis_results?: Analysis_resultsListRelationFilter
    images?: ImagesListRelationFilter
    reports?: ReportsListRelationFilter
  }, "id">

  export type analysesOrderByWithAggregationInput = {
    id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    title?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: analysesCountOrderByAggregateInput
    _max?: analysesMaxOrderByAggregateInput
    _min?: analysesMinOrderByAggregateInput
  }

  export type analysesScalarWhereWithAggregatesInput = {
    AND?: analysesScalarWhereWithAggregatesInput | analysesScalarWhereWithAggregatesInput[]
    OR?: analysesScalarWhereWithAggregatesInput[]
    NOT?: analysesScalarWhereWithAggregatesInput | analysesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"analyses"> | string
    client_id?: UuidWithAggregatesFilter<"analyses"> | string
    type?: StringWithAggregatesFilter<"analyses"> | string
    title?: StringNullableWithAggregatesFilter<"analyses"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"analyses"> | Date | string | null
  }

  export type analysis_resultsWhereInput = {
    AND?: analysis_resultsWhereInput | analysis_resultsWhereInput[]
    OR?: analysis_resultsWhereInput[]
    NOT?: analysis_resultsWhereInput | analysis_resultsWhereInput[]
    id?: UuidFilter<"analysis_results"> | string
    analysis_id?: UuidFilter<"analysis_results"> | string
    content?: StringFilter<"analysis_results"> | string
    source_image_url?: StringNullableFilter<"analysis_results"> | string | null
    processed_by?: StringNullableFilter<"analysis_results"> | string | null
    created_at?: DateTimeNullableFilter<"analysis_results"> | Date | string | null
    analyses?: XOR<AnalysesScalarRelationFilter, analysesWhereInput>
  }

  export type analysis_resultsOrderByWithRelationInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    content?: SortOrder
    source_image_url?: SortOrderInput | SortOrder
    processed_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    analyses?: analysesOrderByWithRelationInput
  }

  export type analysis_resultsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: analysis_resultsWhereInput | analysis_resultsWhereInput[]
    OR?: analysis_resultsWhereInput[]
    NOT?: analysis_resultsWhereInput | analysis_resultsWhereInput[]
    analysis_id?: UuidFilter<"analysis_results"> | string
    content?: StringFilter<"analysis_results"> | string
    source_image_url?: StringNullableFilter<"analysis_results"> | string | null
    processed_by?: StringNullableFilter<"analysis_results"> | string | null
    created_at?: DateTimeNullableFilter<"analysis_results"> | Date | string | null
    analyses?: XOR<AnalysesScalarRelationFilter, analysesWhereInput>
  }, "id">

  export type analysis_resultsOrderByWithAggregationInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    content?: SortOrder
    source_image_url?: SortOrderInput | SortOrder
    processed_by?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: analysis_resultsCountOrderByAggregateInput
    _max?: analysis_resultsMaxOrderByAggregateInput
    _min?: analysis_resultsMinOrderByAggregateInput
  }

  export type analysis_resultsScalarWhereWithAggregatesInput = {
    AND?: analysis_resultsScalarWhereWithAggregatesInput | analysis_resultsScalarWhereWithAggregatesInput[]
    OR?: analysis_resultsScalarWhereWithAggregatesInput[]
    NOT?: analysis_resultsScalarWhereWithAggregatesInput | analysis_resultsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"analysis_results"> | string
    analysis_id?: UuidWithAggregatesFilter<"analysis_results"> | string
    content?: StringWithAggregatesFilter<"analysis_results"> | string
    source_image_url?: StringNullableWithAggregatesFilter<"analysis_results"> | string | null
    processed_by?: StringNullableWithAggregatesFilter<"analysis_results"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"analysis_results"> | Date | string | null
  }

  export type chat_conversationsWhereInput = {
    AND?: chat_conversationsWhereInput | chat_conversationsWhereInput[]
    OR?: chat_conversationsWhereInput[]
    NOT?: chat_conversationsWhereInput | chat_conversationsWhereInput[]
    id?: UuidFilter<"chat_conversations"> | string
    user_id?: UuidNullableFilter<"chat_conversations"> | string | null
    client_id?: UuidNullableFilter<"chat_conversations"> | string | null
    title?: StringNullableFilter<"chat_conversations"> | string | null
    created_at?: DateTimeNullableFilter<"chat_conversations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"chat_conversations"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    chat_messages?: Chat_messagesListRelationFilter
  }

  export type chat_conversationsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    chat_messages?: chat_messagesOrderByRelationAggregateInput
  }

  export type chat_conversationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: chat_conversationsWhereInput | chat_conversationsWhereInput[]
    OR?: chat_conversationsWhereInput[]
    NOT?: chat_conversationsWhereInput | chat_conversationsWhereInput[]
    user_id?: UuidNullableFilter<"chat_conversations"> | string | null
    client_id?: UuidNullableFilter<"chat_conversations"> | string | null
    title?: StringNullableFilter<"chat_conversations"> | string | null
    created_at?: DateTimeNullableFilter<"chat_conversations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"chat_conversations"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    chat_messages?: Chat_messagesListRelationFilter
  }, "id">

  export type chat_conversationsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: chat_conversationsCountOrderByAggregateInput
    _max?: chat_conversationsMaxOrderByAggregateInput
    _min?: chat_conversationsMinOrderByAggregateInput
  }

  export type chat_conversationsScalarWhereWithAggregatesInput = {
    AND?: chat_conversationsScalarWhereWithAggregatesInput | chat_conversationsScalarWhereWithAggregatesInput[]
    OR?: chat_conversationsScalarWhereWithAggregatesInput[]
    NOT?: chat_conversationsScalarWhereWithAggregatesInput | chat_conversationsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"chat_conversations"> | string
    user_id?: UuidNullableWithAggregatesFilter<"chat_conversations"> | string | null
    client_id?: UuidNullableWithAggregatesFilter<"chat_conversations"> | string | null
    title?: StringNullableWithAggregatesFilter<"chat_conversations"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"chat_conversations"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"chat_conversations"> | Date | string | null
  }

  export type chat_messagesWhereInput = {
    AND?: chat_messagesWhereInput | chat_messagesWhereInput[]
    OR?: chat_messagesWhereInput[]
    NOT?: chat_messagesWhereInput | chat_messagesWhereInput[]
    id?: UuidFilter<"chat_messages"> | string
    user_id?: UuidNullableFilter<"chat_messages"> | string | null
    client_id?: UuidNullableFilter<"chat_messages"> | string | null
    conversation_id?: UuidNullableFilter<"chat_messages"> | string | null
    content?: StringFilter<"chat_messages"> | string
    is_ai_response?: BoolNullableFilter<"chat_messages"> | boolean | null
    created_at?: DateTimeNullableFilter<"chat_messages"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    chat_conversations?: XOR<Chat_conversationsNullableScalarRelationFilter, chat_conversationsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type chat_messagesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    conversation_id?: SortOrderInput | SortOrder
    content?: SortOrder
    is_ai_response?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    clients?: clientsOrderByWithRelationInput
    chat_conversations?: chat_conversationsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type chat_messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: chat_messagesWhereInput | chat_messagesWhereInput[]
    OR?: chat_messagesWhereInput[]
    NOT?: chat_messagesWhereInput | chat_messagesWhereInput[]
    user_id?: UuidNullableFilter<"chat_messages"> | string | null
    client_id?: UuidNullableFilter<"chat_messages"> | string | null
    conversation_id?: UuidNullableFilter<"chat_messages"> | string | null
    content?: StringFilter<"chat_messages"> | string
    is_ai_response?: BoolNullableFilter<"chat_messages"> | boolean | null
    created_at?: DateTimeNullableFilter<"chat_messages"> | Date | string | null
    clients?: XOR<ClientsNullableScalarRelationFilter, clientsWhereInput> | null
    chat_conversations?: XOR<Chat_conversationsNullableScalarRelationFilter, chat_conversationsWhereInput> | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type chat_messagesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    client_id?: SortOrderInput | SortOrder
    conversation_id?: SortOrderInput | SortOrder
    content?: SortOrder
    is_ai_response?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: chat_messagesCountOrderByAggregateInput
    _max?: chat_messagesMaxOrderByAggregateInput
    _min?: chat_messagesMinOrderByAggregateInput
  }

  export type chat_messagesScalarWhereWithAggregatesInput = {
    AND?: chat_messagesScalarWhereWithAggregatesInput | chat_messagesScalarWhereWithAggregatesInput[]
    OR?: chat_messagesScalarWhereWithAggregatesInput[]
    NOT?: chat_messagesScalarWhereWithAggregatesInput | chat_messagesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"chat_messages"> | string
    user_id?: UuidNullableWithAggregatesFilter<"chat_messages"> | string | null
    client_id?: UuidNullableWithAggregatesFilter<"chat_messages"> | string | null
    conversation_id?: UuidNullableWithAggregatesFilter<"chat_messages"> | string | null
    content?: StringWithAggregatesFilter<"chat_messages"> | string
    is_ai_response?: BoolNullableWithAggregatesFilter<"chat_messages"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"chat_messages"> | Date | string | null
  }

  export type clientsWhereInput = {
    AND?: clientsWhereInput | clientsWhereInput[]
    OR?: clientsWhereInput[]
    NOT?: clientsWhereInput | clientsWhereInput[]
    id?: UuidFilter<"clients"> | string
    name?: StringFilter<"clients"> | string
    owner_name?: StringFilter<"clients"> | string
    shop_url?: StringNullableFilter<"clients"> | string | null
    followers?: IntNullableFilter<"clients"> | number | null
    rating?: DecimalNullableFilter<"clients"> | Decimal | DecimalJsLike | number | string | null
    registration_date?: DateTimeNullableFilter<"clients"> | Date | string | null
    product_count?: IntNullableFilter<"clients"> | number | null
    response_rate?: DecimalNullableFilter<"clients"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    activity_log?: Activity_logListRelationFilter
    ad_metrics?: Ad_metricsListRelationFilter
    ai_requests?: Ai_requestsListRelationFilter
    analyses?: AnalysesListRelationFilter
    chat_conversations?: Chat_conversationsListRelationFilter
    chat_messages?: Chat_messagesListRelationFilter
    products?: ProductsListRelationFilter
    reports?: ReportsListRelationFilter
  }

  export type clientsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    owner_name?: SortOrder
    shop_url?: SortOrderInput | SortOrder
    followers?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    registration_date?: SortOrderInput | SortOrder
    product_count?: SortOrderInput | SortOrder
    response_rate?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    activity_log?: activity_logOrderByRelationAggregateInput
    ad_metrics?: ad_metricsOrderByRelationAggregateInput
    ai_requests?: ai_requestsOrderByRelationAggregateInput
    analyses?: analysesOrderByRelationAggregateInput
    chat_conversations?: chat_conversationsOrderByRelationAggregateInput
    chat_messages?: chat_messagesOrderByRelationAggregateInput
    products?: productsOrderByRelationAggregateInput
    reports?: reportsOrderByRelationAggregateInput
  }

  export type clientsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: clientsWhereInput | clientsWhereInput[]
    OR?: clientsWhereInput[]
    NOT?: clientsWhereInput | clientsWhereInput[]
    name?: StringFilter<"clients"> | string
    owner_name?: StringFilter<"clients"> | string
    shop_url?: StringNullableFilter<"clients"> | string | null
    followers?: IntNullableFilter<"clients"> | number | null
    rating?: DecimalNullableFilter<"clients"> | Decimal | DecimalJsLike | number | string | null
    registration_date?: DateTimeNullableFilter<"clients"> | Date | string | null
    product_count?: IntNullableFilter<"clients"> | number | null
    response_rate?: DecimalNullableFilter<"clients"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"clients"> | Date | string | null
    activity_log?: Activity_logListRelationFilter
    ad_metrics?: Ad_metricsListRelationFilter
    ai_requests?: Ai_requestsListRelationFilter
    analyses?: AnalysesListRelationFilter
    chat_conversations?: Chat_conversationsListRelationFilter
    chat_messages?: Chat_messagesListRelationFilter
    products?: ProductsListRelationFilter
    reports?: ReportsListRelationFilter
  }, "id">

  export type clientsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    owner_name?: SortOrder
    shop_url?: SortOrderInput | SortOrder
    followers?: SortOrderInput | SortOrder
    rating?: SortOrderInput | SortOrder
    registration_date?: SortOrderInput | SortOrder
    product_count?: SortOrderInput | SortOrder
    response_rate?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: clientsCountOrderByAggregateInput
    _avg?: clientsAvgOrderByAggregateInput
    _max?: clientsMaxOrderByAggregateInput
    _min?: clientsMinOrderByAggregateInput
    _sum?: clientsSumOrderByAggregateInput
  }

  export type clientsScalarWhereWithAggregatesInput = {
    AND?: clientsScalarWhereWithAggregatesInput | clientsScalarWhereWithAggregatesInput[]
    OR?: clientsScalarWhereWithAggregatesInput[]
    NOT?: clientsScalarWhereWithAggregatesInput | clientsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"clients"> | string
    name?: StringWithAggregatesFilter<"clients"> | string
    owner_name?: StringWithAggregatesFilter<"clients"> | string
    shop_url?: StringNullableWithAggregatesFilter<"clients"> | string | null
    followers?: IntNullableWithAggregatesFilter<"clients"> | number | null
    rating?: DecimalNullableWithAggregatesFilter<"clients"> | Decimal | DecimalJsLike | number | string | null
    registration_date?: DateTimeNullableWithAggregatesFilter<"clients"> | Date | string | null
    product_count?: IntNullableWithAggregatesFilter<"clients"> | number | null
    response_rate?: DecimalNullableWithAggregatesFilter<"clients"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"clients"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"clients"> | Date | string | null
  }

  export type configurationsWhereInput = {
    AND?: configurationsWhereInput | configurationsWhereInput[]
    OR?: configurationsWhereInput[]
    NOT?: configurationsWhereInput | configurationsWhereInput[]
    id?: UuidFilter<"configurations"> | string
    user_id?: UuidNullableFilter<"configurations"> | string | null
    key?: StringFilter<"configurations"> | string
    value?: StringNullableFilter<"configurations"> | string | null
    is_global?: BoolNullableFilter<"configurations"> | boolean | null
    created_at?: DateTimeNullableFilter<"configurations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"configurations"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type configurationsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    key?: SortOrder
    value?: SortOrderInput | SortOrder
    is_global?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type configurationsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_key?: configurationsUser_idKeyCompoundUniqueInput
    AND?: configurationsWhereInput | configurationsWhereInput[]
    OR?: configurationsWhereInput[]
    NOT?: configurationsWhereInput | configurationsWhereInput[]
    user_id?: UuidNullableFilter<"configurations"> | string | null
    key?: StringFilter<"configurations"> | string
    value?: StringNullableFilter<"configurations"> | string | null
    is_global?: BoolNullableFilter<"configurations"> | boolean | null
    created_at?: DateTimeNullableFilter<"configurations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"configurations"> | Date | string | null
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id" | "user_id_key">

  export type configurationsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    key?: SortOrder
    value?: SortOrderInput | SortOrder
    is_global?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: configurationsCountOrderByAggregateInput
    _max?: configurationsMaxOrderByAggregateInput
    _min?: configurationsMinOrderByAggregateInput
  }

  export type configurationsScalarWhereWithAggregatesInput = {
    AND?: configurationsScalarWhereWithAggregatesInput | configurationsScalarWhereWithAggregatesInput[]
    OR?: configurationsScalarWhereWithAggregatesInput[]
    NOT?: configurationsScalarWhereWithAggregatesInput | configurationsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"configurations"> | string
    user_id?: UuidNullableWithAggregatesFilter<"configurations"> | string | null
    key?: StringWithAggregatesFilter<"configurations"> | string
    value?: StringNullableWithAggregatesFilter<"configurations"> | string | null
    is_global?: BoolNullableWithAggregatesFilter<"configurations"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"configurations"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"configurations"> | Date | string | null
  }

  export type imagesWhereInput = {
    AND?: imagesWhereInput | imagesWhereInput[]
    OR?: imagesWhereInput[]
    NOT?: imagesWhereInput | imagesWhereInput[]
    id?: UuidFilter<"images"> | string
    analysis_id?: UuidNullableFilter<"images"> | string | null
    report_id?: UuidNullableFilter<"images"> | string | null
    url?: StringFilter<"images"> | string
    original_filename?: StringNullableFilter<"images"> | string | null
    file_size?: IntNullableFilter<"images"> | number | null
    mime_type?: StringNullableFilter<"images"> | string | null
    created_at?: DateTimeNullableFilter<"images"> | Date | string | null
    analyses?: XOR<AnalysesNullableScalarRelationFilter, analysesWhereInput> | null
    reports?: XOR<ReportsNullableScalarRelationFilter, reportsWhereInput> | null
  }

  export type imagesOrderByWithRelationInput = {
    id?: SortOrder
    analysis_id?: SortOrderInput | SortOrder
    report_id?: SortOrderInput | SortOrder
    url?: SortOrder
    original_filename?: SortOrderInput | SortOrder
    file_size?: SortOrderInput | SortOrder
    mime_type?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    analyses?: analysesOrderByWithRelationInput
    reports?: reportsOrderByWithRelationInput
  }

  export type imagesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: imagesWhereInput | imagesWhereInput[]
    OR?: imagesWhereInput[]
    NOT?: imagesWhereInput | imagesWhereInput[]
    analysis_id?: UuidNullableFilter<"images"> | string | null
    report_id?: UuidNullableFilter<"images"> | string | null
    url?: StringFilter<"images"> | string
    original_filename?: StringNullableFilter<"images"> | string | null
    file_size?: IntNullableFilter<"images"> | number | null
    mime_type?: StringNullableFilter<"images"> | string | null
    created_at?: DateTimeNullableFilter<"images"> | Date | string | null
    analyses?: XOR<AnalysesNullableScalarRelationFilter, analysesWhereInput> | null
    reports?: XOR<ReportsNullableScalarRelationFilter, reportsWhereInput> | null
  }, "id">

  export type imagesOrderByWithAggregationInput = {
    id?: SortOrder
    analysis_id?: SortOrderInput | SortOrder
    report_id?: SortOrderInput | SortOrder
    url?: SortOrder
    original_filename?: SortOrderInput | SortOrder
    file_size?: SortOrderInput | SortOrder
    mime_type?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: imagesCountOrderByAggregateInput
    _avg?: imagesAvgOrderByAggregateInput
    _max?: imagesMaxOrderByAggregateInput
    _min?: imagesMinOrderByAggregateInput
    _sum?: imagesSumOrderByAggregateInput
  }

  export type imagesScalarWhereWithAggregatesInput = {
    AND?: imagesScalarWhereWithAggregatesInput | imagesScalarWhereWithAggregatesInput[]
    OR?: imagesScalarWhereWithAggregatesInput[]
    NOT?: imagesScalarWhereWithAggregatesInput | imagesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"images"> | string
    analysis_id?: UuidNullableWithAggregatesFilter<"images"> | string | null
    report_id?: UuidNullableWithAggregatesFilter<"images"> | string | null
    url?: StringWithAggregatesFilter<"images"> | string
    original_filename?: StringNullableWithAggregatesFilter<"images"> | string | null
    file_size?: IntNullableWithAggregatesFilter<"images"> | number | null
    mime_type?: StringNullableWithAggregatesFilter<"images"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"images"> | Date | string | null
  }

  export type productsWhereInput = {
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    id?: UuidFilter<"products"> | string
    client_id?: UuidFilter<"products"> | string
    product_id?: StringNullableFilter<"products"> | string | null
    name?: StringFilter<"products"> | string
    price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    original_price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableFilter<"products"> | number | null
    views?: IntNullableFilter<"products"> | number | null
    sales?: IntNullableFilter<"products"> | number | null
    conversion_rate?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableFilter<"products"> | string | null
    created_at?: DateTimeNullableFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"products"> | Date | string | null
    ad_metrics?: Ad_metricsListRelationFilter
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    name?: SortOrder
    price?: SortOrderInput | SortOrder
    original_price?: SortOrderInput | SortOrder
    stock?: SortOrderInput | SortOrder
    views?: SortOrderInput | SortOrder
    sales?: SortOrderInput | SortOrder
    conversion_rate?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    ad_metrics?: ad_metricsOrderByRelationAggregateInput
    clients?: clientsOrderByWithRelationInput
  }

  export type productsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    client_id?: UuidFilter<"products"> | string
    product_id?: StringNullableFilter<"products"> | string | null
    name?: StringFilter<"products"> | string
    price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    original_price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableFilter<"products"> | number | null
    views?: IntNullableFilter<"products"> | number | null
    sales?: IntNullableFilter<"products"> | number | null
    conversion_rate?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableFilter<"products"> | string | null
    created_at?: DateTimeNullableFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"products"> | Date | string | null
    ad_metrics?: Ad_metricsListRelationFilter
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
  }, "id">

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrderInput | SortOrder
    name?: SortOrder
    price?: SortOrderInput | SortOrder
    original_price?: SortOrderInput | SortOrder
    stock?: SortOrderInput | SortOrder
    views?: SortOrderInput | SortOrder
    sales?: SortOrderInput | SortOrder
    conversion_rate?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    OR?: productsScalarWhereWithAggregatesInput[]
    NOT?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"products"> | string
    client_id?: UuidWithAggregatesFilter<"products"> | string
    product_id?: StringNullableWithAggregatesFilter<"products"> | string | null
    name?: StringWithAggregatesFilter<"products"> | string
    price?: DecimalNullableWithAggregatesFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    original_price?: DecimalNullableWithAggregatesFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableWithAggregatesFilter<"products"> | number | null
    views?: IntNullableWithAggregatesFilter<"products"> | number | null
    sales?: IntNullableWithAggregatesFilter<"products"> | number | null
    conversion_rate?: DecimalNullableWithAggregatesFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableWithAggregatesFilter<"products"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"products"> | Date | string | null
  }

  export type report_metricsWhereInput = {
    AND?: report_metricsWhereInput | report_metricsWhereInput[]
    OR?: report_metricsWhereInput[]
    NOT?: report_metricsWhereInput | report_metricsWhereInput[]
    id?: UuidFilter<"report_metrics"> | string
    report_id?: UuidFilter<"report_metrics"> | string
    metric_name?: StringFilter<"report_metrics"> | string
    metric_value?: StringFilter<"report_metrics"> | string
    previous_value?: StringNullableFilter<"report_metrics"> | string | null
    change_percentage?: DecimalNullableFilter<"report_metrics"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"report_metrics"> | Date | string | null
    reports?: XOR<ReportsScalarRelationFilter, reportsWhereInput>
  }

  export type report_metricsOrderByWithRelationInput = {
    id?: SortOrder
    report_id?: SortOrder
    metric_name?: SortOrder
    metric_value?: SortOrder
    previous_value?: SortOrderInput | SortOrder
    change_percentage?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    reports?: reportsOrderByWithRelationInput
  }

  export type report_metricsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: report_metricsWhereInput | report_metricsWhereInput[]
    OR?: report_metricsWhereInput[]
    NOT?: report_metricsWhereInput | report_metricsWhereInput[]
    report_id?: UuidFilter<"report_metrics"> | string
    metric_name?: StringFilter<"report_metrics"> | string
    metric_value?: StringFilter<"report_metrics"> | string
    previous_value?: StringNullableFilter<"report_metrics"> | string | null
    change_percentage?: DecimalNullableFilter<"report_metrics"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"report_metrics"> | Date | string | null
    reports?: XOR<ReportsScalarRelationFilter, reportsWhereInput>
  }, "id">

  export type report_metricsOrderByWithAggregationInput = {
    id?: SortOrder
    report_id?: SortOrder
    metric_name?: SortOrder
    metric_value?: SortOrder
    previous_value?: SortOrderInput | SortOrder
    change_percentage?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: report_metricsCountOrderByAggregateInput
    _avg?: report_metricsAvgOrderByAggregateInput
    _max?: report_metricsMaxOrderByAggregateInput
    _min?: report_metricsMinOrderByAggregateInput
    _sum?: report_metricsSumOrderByAggregateInput
  }

  export type report_metricsScalarWhereWithAggregatesInput = {
    AND?: report_metricsScalarWhereWithAggregatesInput | report_metricsScalarWhereWithAggregatesInput[]
    OR?: report_metricsScalarWhereWithAggregatesInput[]
    NOT?: report_metricsScalarWhereWithAggregatesInput | report_metricsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"report_metrics"> | string
    report_id?: UuidWithAggregatesFilter<"report_metrics"> | string
    metric_name?: StringWithAggregatesFilter<"report_metrics"> | string
    metric_value?: StringWithAggregatesFilter<"report_metrics"> | string
    previous_value?: StringNullableWithAggregatesFilter<"report_metrics"> | string | null
    change_percentage?: DecimalNullableWithAggregatesFilter<"report_metrics"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"report_metrics"> | Date | string | null
  }

  export type reportsWhereInput = {
    AND?: reportsWhereInput | reportsWhereInput[]
    OR?: reportsWhereInput[]
    NOT?: reportsWhereInput | reportsWhereInput[]
    id?: UuidFilter<"reports"> | string
    client_id?: UuidFilter<"reports"> | string
    analysis_id?: UuidNullableFilter<"reports"> | string | null
    type?: StringFilter<"reports"> | string
    title?: StringNullableFilter<"reports"> | string | null
    url?: StringNullableFilter<"reports"> | string | null
    status?: StringNullableFilter<"reports"> | string | null
    created_at?: DateTimeNullableFilter<"reports"> | Date | string | null
    images?: ImagesListRelationFilter
    report_metrics?: Report_metricsListRelationFilter
    analyses?: XOR<AnalysesNullableScalarRelationFilter, analysesWhereInput> | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
  }

  export type reportsOrderByWithRelationInput = {
    id?: SortOrder
    client_id?: SortOrder
    analysis_id?: SortOrderInput | SortOrder
    type?: SortOrder
    title?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    images?: imagesOrderByRelationAggregateInput
    report_metrics?: report_metricsOrderByRelationAggregateInput
    analyses?: analysesOrderByWithRelationInput
    clients?: clientsOrderByWithRelationInput
  }

  export type reportsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: reportsWhereInput | reportsWhereInput[]
    OR?: reportsWhereInput[]
    NOT?: reportsWhereInput | reportsWhereInput[]
    client_id?: UuidFilter<"reports"> | string
    analysis_id?: UuidNullableFilter<"reports"> | string | null
    type?: StringFilter<"reports"> | string
    title?: StringNullableFilter<"reports"> | string | null
    url?: StringNullableFilter<"reports"> | string | null
    status?: StringNullableFilter<"reports"> | string | null
    created_at?: DateTimeNullableFilter<"reports"> | Date | string | null
    images?: ImagesListRelationFilter
    report_metrics?: Report_metricsListRelationFilter
    analyses?: XOR<AnalysesNullableScalarRelationFilter, analysesWhereInput> | null
    clients?: XOR<ClientsScalarRelationFilter, clientsWhereInput>
  }, "id">

  export type reportsOrderByWithAggregationInput = {
    id?: SortOrder
    client_id?: SortOrder
    analysis_id?: SortOrderInput | SortOrder
    type?: SortOrder
    title?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: reportsCountOrderByAggregateInput
    _max?: reportsMaxOrderByAggregateInput
    _min?: reportsMinOrderByAggregateInput
  }

  export type reportsScalarWhereWithAggregatesInput = {
    AND?: reportsScalarWhereWithAggregatesInput | reportsScalarWhereWithAggregatesInput[]
    OR?: reportsScalarWhereWithAggregatesInput[]
    NOT?: reportsScalarWhereWithAggregatesInput | reportsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"reports"> | string
    client_id?: UuidWithAggregatesFilter<"reports"> | string
    analysis_id?: UuidNullableWithAggregatesFilter<"reports"> | string | null
    type?: StringWithAggregatesFilter<"reports"> | string
    title?: StringNullableWithAggregatesFilter<"reports"> | string | null
    url?: StringNullableWithAggregatesFilter<"reports"> | string | null
    status?: StringNullableWithAggregatesFilter<"reports"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"reports"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: UuidFilter<"users"> | string
    name?: StringFilter<"users"> | string
    email?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    role?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    activity_log?: Activity_logListRelationFilter
    ai_requests?: Ai_requestsListRelationFilter
    chat_conversations?: Chat_conversationsListRelationFilter
    chat_messages?: Chat_messagesListRelationFilter
    configurations?: ConfigurationsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    activity_log?: activity_logOrderByRelationAggregateInput
    ai_requests?: ai_requestsOrderByRelationAggregateInput
    chat_conversations?: chat_conversationsOrderByRelationAggregateInput
    chat_messages?: chat_messagesOrderByRelationAggregateInput
    configurations?: configurationsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    name?: StringFilter<"users"> | string
    password?: StringFilter<"users"> | string
    role?: StringNullableFilter<"users"> | string | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    activity_log?: Activity_logListRelationFilter
    ai_requests?: Ai_requestsListRelationFilter
    chat_conversations?: Chat_conversationsListRelationFilter
    chat_messages?: Chat_messagesListRelationFilter
    configurations?: ConfigurationsListRelationFilter
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"users"> | string
    name?: StringWithAggregatesFilter<"users"> | string
    email?: StringWithAggregatesFilter<"users"> | string
    password?: StringWithAggregatesFilter<"users"> | string
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type activity_logCreateInput = {
    id?: string
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutActivity_logInput
    users?: usersCreateNestedOneWithoutActivity_logInput
  }

  export type activity_logUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type activity_logUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutActivity_logNestedInput
    users?: usersUpdateOneWithoutActivity_logNestedInput
  }

  export type activity_logUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type activity_logCreateManyInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type activity_logUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type activity_logUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsCreateInput = {
    id?: string
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutAd_metricsInput
    products?: productsCreateNestedOneWithoutAd_metricsInput
  }

  export type ad_metricsUncheckedCreateInput = {
    id?: string
    client_id: string
    product_id?: string | null
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
  }

  export type ad_metricsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutAd_metricsNestedInput
    products?: productsUpdateOneWithoutAd_metricsNestedInput
  }

  export type ad_metricsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsCreateManyInput = {
    id?: string
    client_id: string
    product_id?: string | null
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
  }

  export type ad_metricsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsCreateInput = {
    id?: string
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutAi_requestsInput
    users?: usersCreateNestedOneWithoutAi_requestsInput
  }

  export type ai_requestsUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
  }

  export type ai_requestsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutAi_requestsNestedInput
    users?: usersUpdateOneWithoutAi_requestsNestedInput
  }

  export type ai_requestsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsCreateManyInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
  }

  export type ai_requestsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysesCreateInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutAnalysesInput
    analysis_results?: analysis_resultsCreateNestedManyWithoutAnalysesInput
    images?: imagesCreateNestedManyWithoutAnalysesInput
    reports?: reportsCreateNestedManyWithoutAnalysesInput
  }

  export type analysesUncheckedCreateInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    analysis_results?: analysis_resultsUncheckedCreateNestedManyWithoutAnalysesInput
    images?: imagesUncheckedCreateNestedManyWithoutAnalysesInput
    reports?: reportsUncheckedCreateNestedManyWithoutAnalysesInput
  }

  export type analysesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutAnalysesNestedInput
    analysis_results?: analysis_resultsUpdateManyWithoutAnalysesNestedInput
    images?: imagesUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analysis_results?: analysis_resultsUncheckedUpdateManyWithoutAnalysesNestedInput
    images?: imagesUncheckedUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesCreateManyInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    created_at?: Date | string | null
  }

  export type analysesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysis_resultsCreateInput = {
    id?: string
    content: string
    source_image_url?: string | null
    processed_by?: string | null
    created_at?: Date | string | null
    analyses: analysesCreateNestedOneWithoutAnalysis_resultsInput
  }

  export type analysis_resultsUncheckedCreateInput = {
    id?: string
    analysis_id: string
    content: string
    source_image_url?: string | null
    processed_by?: string | null
    created_at?: Date | string | null
  }

  export type analysis_resultsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analyses?: analysesUpdateOneRequiredWithoutAnalysis_resultsNestedInput
  }

  export type analysis_resultsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysis_resultsCreateManyInput = {
    id?: string
    analysis_id: string
    content: string
    source_image_url?: string | null
    processed_by?: string | null
    created_at?: Date | string | null
  }

  export type analysis_resultsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysis_resultsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_conversationsCreateInput = {
    id?: string
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutChat_conversationsInput
    users?: usersCreateNestedOneWithoutChat_conversationsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutChat_conversationsInput
  }

  export type chat_conversationsUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutChat_conversationsInput
  }

  export type chat_conversationsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutChat_conversationsNestedInput
    users?: usersUpdateOneWithoutChat_conversationsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsCreateManyInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type chat_conversationsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_conversationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesCreateInput = {
    id?: string
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutChat_messagesInput
    chat_conversations?: chat_conversationsCreateNestedOneWithoutChat_messagesInput
    users?: usersCreateNestedOneWithoutChat_messagesInput
  }

  export type chat_messagesUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    conversation_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type chat_messagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutChat_messagesNestedInput
    chat_conversations?: chat_conversationsUpdateOneWithoutChat_messagesNestedInput
    users?: usersUpdateOneWithoutChat_messagesNestedInput
  }

  export type chat_messagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    conversation_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesCreateManyInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    conversation_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type chat_messagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    conversation_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type clientsCreateInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type clientsCreateManyInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type clientsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type clientsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsCreateInput = {
    id?: string
    key: string
    value?: string | null
    is_global?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users?: usersCreateNestedOneWithoutConfigurationsInput
  }

  export type configurationsUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    key: string
    value?: string | null
    is_global?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type configurationsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutConfigurationsNestedInput
  }

  export type configurationsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsCreateManyInput = {
    id?: string
    user_id?: string | null
    key: string
    value?: string | null
    is_global?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type configurationsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesCreateInput = {
    id?: string
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
    analyses?: analysesCreateNestedOneWithoutImagesInput
    reports?: reportsCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateInput = {
    id?: string
    analysis_id?: string | null
    report_id?: string | null
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
  }

  export type imagesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analyses?: analysesUpdateOneWithoutImagesNestedInput
    reports?: reportsUpdateOneWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    report_id?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesCreateManyInput = {
    id?: string
    analysis_id?: string | null
    report_id?: string | null
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
  }

  export type imagesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    report_id?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsCreateInput = {
    id?: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ad_metrics?: ad_metricsCreateNestedManyWithoutProductsInput
    clients: clientsCreateNestedOneWithoutProductsInput
  }

  export type productsUncheckedCreateInput = {
    id?: string
    client_id: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ad_metrics?: ad_metricsUpdateManyWithoutProductsNestedInput
    clients?: clientsUpdateOneRequiredWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsCreateManyInput = {
    id?: string
    client_id: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type productsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type report_metricsCreateInput = {
    id?: string
    metric_name: string
    metric_value: string
    previous_value?: string | null
    change_percentage?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    reports: reportsCreateNestedOneWithoutReport_metricsInput
  }

  export type report_metricsUncheckedCreateInput = {
    id?: string
    report_id: string
    metric_name: string
    metric_value: string
    previous_value?: string | null
    change_percentage?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
  }

  export type report_metricsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reports?: reportsUpdateOneRequiredWithoutReport_metricsNestedInput
  }

  export type report_metricsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type report_metricsCreateManyInput = {
    id?: string
    report_id: string
    metric_name: string
    metric_value: string
    previous_value?: string | null
    change_percentage?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
  }

  export type report_metricsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type report_metricsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportsCreateInput = {
    id?: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesCreateNestedManyWithoutReportsInput
    report_metrics?: report_metricsCreateNestedManyWithoutReportsInput
    analyses?: analysesCreateNestedOneWithoutReportsInput
    clients: clientsCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateInput = {
    id?: string
    client_id: string
    analysis_id?: string | null
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesUncheckedCreateNestedManyWithoutReportsInput
    report_metrics?: report_metricsUncheckedCreateNestedManyWithoutReportsInput
  }

  export type reportsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUpdateManyWithoutReportsNestedInput
    report_metrics?: report_metricsUpdateManyWithoutReportsNestedInput
    analyses?: analysesUpdateOneWithoutReportsNestedInput
    clients?: clientsUpdateOneRequiredWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUncheckedUpdateManyWithoutReportsNestedInput
    report_metrics?: report_metricsUncheckedUpdateManyWithoutReportsNestedInput
  }

  export type reportsCreateManyInput = {
    id?: string
    client_id: string
    analysis_id?: string | null
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
  }

  export type reportsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type ClientsNullableScalarRelationFilter = {
    is?: clientsWhereInput | null
    isNot?: clientsWhereInput | null
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type activity_logCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    action?: SortOrder
    entity_type?: SortOrder
    entity_id?: SortOrder
    details?: SortOrder
    created_at?: SortOrder
  }

  export type activity_logMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    action?: SortOrder
    entity_type?: SortOrder
    entity_id?: SortOrder
    created_at?: SortOrder
  }

  export type activity_logMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    action?: SortOrder
    entity_type?: SortOrder
    entity_id?: SortOrder
    created_at?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ClientsScalarRelationFilter = {
    is?: clientsWhereInput
    isNot?: clientsWhereInput
  }

  export type ProductsNullableScalarRelationFilter = {
    is?: productsWhereInput | null
    isNot?: productsWhereInput | null
  }

  export type ad_metricsCountOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrder
    ad_type?: SortOrder
    impressions?: SortOrder
    clicks?: SortOrder
    ctr?: SortOrder
    spend?: SortOrder
    conversions?: SortOrder
    roas?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
  }

  export type ad_metricsAvgOrderByAggregateInput = {
    impressions?: SortOrder
    clicks?: SortOrder
    ctr?: SortOrder
    spend?: SortOrder
    conversions?: SortOrder
    roas?: SortOrder
  }

  export type ad_metricsMaxOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrder
    ad_type?: SortOrder
    impressions?: SortOrder
    clicks?: SortOrder
    ctr?: SortOrder
    spend?: SortOrder
    conversions?: SortOrder
    roas?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
  }

  export type ad_metricsMinOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrder
    ad_type?: SortOrder
    impressions?: SortOrder
    clicks?: SortOrder
    ctr?: SortOrder
    spend?: SortOrder
    conversions?: SortOrder
    roas?: SortOrder
    date?: SortOrder
    created_at?: SortOrder
  }

  export type ad_metricsSumOrderByAggregateInput = {
    impressions?: SortOrder
    clicks?: SortOrder
    ctr?: SortOrder
    spend?: SortOrder
    conversions?: SortOrder
    roas?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ai_requestsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    model?: SortOrder
    tokens_used?: SortOrder
    processing_time?: SortOrder
    created_at?: SortOrder
  }

  export type ai_requestsAvgOrderByAggregateInput = {
    tokens_used?: SortOrder
    processing_time?: SortOrder
  }

  export type ai_requestsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    model?: SortOrder
    tokens_used?: SortOrder
    processing_time?: SortOrder
    created_at?: SortOrder
  }

  export type ai_requestsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    prompt?: SortOrder
    response?: SortOrder
    model?: SortOrder
    tokens_used?: SortOrder
    processing_time?: SortOrder
    created_at?: SortOrder
  }

  export type ai_requestsSumOrderByAggregateInput = {
    tokens_used?: SortOrder
    processing_time?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Analysis_resultsListRelationFilter = {
    every?: analysis_resultsWhereInput
    some?: analysis_resultsWhereInput
    none?: analysis_resultsWhereInput
  }

  export type ImagesListRelationFilter = {
    every?: imagesWhereInput
    some?: imagesWhereInput
    none?: imagesWhereInput
  }

  export type ReportsListRelationFilter = {
    every?: reportsWhereInput
    some?: reportsWhereInput
    none?: reportsWhereInput
  }

  export type analysis_resultsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type imagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type analysesCountOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
  }

  export type analysesMaxOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
  }

  export type analysesMinOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
  }

  export type AnalysesScalarRelationFilter = {
    is?: analysesWhereInput
    isNot?: analysesWhereInput
  }

  export type analysis_resultsCountOrderByAggregateInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    content?: SortOrder
    source_image_url?: SortOrder
    processed_by?: SortOrder
    created_at?: SortOrder
  }

  export type analysis_resultsMaxOrderByAggregateInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    content?: SortOrder
    source_image_url?: SortOrder
    processed_by?: SortOrder
    created_at?: SortOrder
  }

  export type analysis_resultsMinOrderByAggregateInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    content?: SortOrder
    source_image_url?: SortOrder
    processed_by?: SortOrder
    created_at?: SortOrder
  }

  export type Chat_messagesListRelationFilter = {
    every?: chat_messagesWhereInput
    some?: chat_messagesWhereInput
    none?: chat_messagesWhereInput
  }

  export type chat_messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chat_conversationsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type chat_conversationsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type chat_conversationsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    title?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type Chat_conversationsNullableScalarRelationFilter = {
    is?: chat_conversationsWhereInput | null
    isNot?: chat_conversationsWhereInput | null
  }

  export type chat_messagesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    conversation_id?: SortOrder
    content?: SortOrder
    is_ai_response?: SortOrder
    created_at?: SortOrder
  }

  export type chat_messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    conversation_id?: SortOrder
    content?: SortOrder
    is_ai_response?: SortOrder
    created_at?: SortOrder
  }

  export type chat_messagesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    client_id?: SortOrder
    conversation_id?: SortOrder
    content?: SortOrder
    is_ai_response?: SortOrder
    created_at?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type Activity_logListRelationFilter = {
    every?: activity_logWhereInput
    some?: activity_logWhereInput
    none?: activity_logWhereInput
  }

  export type Ad_metricsListRelationFilter = {
    every?: ad_metricsWhereInput
    some?: ad_metricsWhereInput
    none?: ad_metricsWhereInput
  }

  export type Ai_requestsListRelationFilter = {
    every?: ai_requestsWhereInput
    some?: ai_requestsWhereInput
    none?: ai_requestsWhereInput
  }

  export type AnalysesListRelationFilter = {
    every?: analysesWhereInput
    some?: analysesWhereInput
    none?: analysesWhereInput
  }

  export type Chat_conversationsListRelationFilter = {
    every?: chat_conversationsWhereInput
    some?: chat_conversationsWhereInput
    none?: chat_conversationsWhereInput
  }

  export type ProductsListRelationFilter = {
    every?: productsWhereInput
    some?: productsWhereInput
    none?: productsWhereInput
  }

  export type activity_logOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ad_metricsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ai_requestsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type analysesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chat_conversationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type clientsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    owner_name?: SortOrder
    shop_url?: SortOrder
    followers?: SortOrder
    rating?: SortOrder
    registration_date?: SortOrder
    product_count?: SortOrder
    response_rate?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsAvgOrderByAggregateInput = {
    followers?: SortOrder
    rating?: SortOrder
    product_count?: SortOrder
    response_rate?: SortOrder
  }

  export type clientsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    owner_name?: SortOrder
    shop_url?: SortOrder
    followers?: SortOrder
    rating?: SortOrder
    registration_date?: SortOrder
    product_count?: SortOrder
    response_rate?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    owner_name?: SortOrder
    shop_url?: SortOrder
    followers?: SortOrder
    rating?: SortOrder
    registration_date?: SortOrder
    product_count?: SortOrder
    response_rate?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsSumOrderByAggregateInput = {
    followers?: SortOrder
    rating?: SortOrder
    product_count?: SortOrder
    response_rate?: SortOrder
  }

  export type configurationsUser_idKeyCompoundUniqueInput = {
    user_id: string
    key: string
  }

  export type configurationsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    is_global?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configurationsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    is_global?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type configurationsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
    is_global?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type AnalysesNullableScalarRelationFilter = {
    is?: analysesWhereInput | null
    isNot?: analysesWhereInput | null
  }

  export type ReportsNullableScalarRelationFilter = {
    is?: reportsWhereInput | null
    isNot?: reportsWhereInput | null
  }

  export type imagesCountOrderByAggregateInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    report_id?: SortOrder
    url?: SortOrder
    original_filename?: SortOrder
    file_size?: SortOrder
    mime_type?: SortOrder
    created_at?: SortOrder
  }

  export type imagesAvgOrderByAggregateInput = {
    file_size?: SortOrder
  }

  export type imagesMaxOrderByAggregateInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    report_id?: SortOrder
    url?: SortOrder
    original_filename?: SortOrder
    file_size?: SortOrder
    mime_type?: SortOrder
    created_at?: SortOrder
  }

  export type imagesMinOrderByAggregateInput = {
    id?: SortOrder
    analysis_id?: SortOrder
    report_id?: SortOrder
    url?: SortOrder
    original_filename?: SortOrder
    file_size?: SortOrder
    mime_type?: SortOrder
    created_at?: SortOrder
  }

  export type imagesSumOrderByAggregateInput = {
    file_size?: SortOrder
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    original_price?: SortOrder
    stock?: SortOrder
    views?: SortOrder
    sales?: SortOrder
    conversion_rate?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    price?: SortOrder
    original_price?: SortOrder
    stock?: SortOrder
    views?: SortOrder
    sales?: SortOrder
    conversion_rate?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    original_price?: SortOrder
    stock?: SortOrder
    views?: SortOrder
    sales?: SortOrder
    conversion_rate?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    product_id?: SortOrder
    name?: SortOrder
    price?: SortOrder
    original_price?: SortOrder
    stock?: SortOrder
    views?: SortOrder
    sales?: SortOrder
    conversion_rate?: SortOrder
    category?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    price?: SortOrder
    original_price?: SortOrder
    stock?: SortOrder
    views?: SortOrder
    sales?: SortOrder
    conversion_rate?: SortOrder
  }

  export type ReportsScalarRelationFilter = {
    is?: reportsWhereInput
    isNot?: reportsWhereInput
  }

  export type report_metricsCountOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    metric_name?: SortOrder
    metric_value?: SortOrder
    previous_value?: SortOrder
    change_percentage?: SortOrder
    created_at?: SortOrder
  }

  export type report_metricsAvgOrderByAggregateInput = {
    change_percentage?: SortOrder
  }

  export type report_metricsMaxOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    metric_name?: SortOrder
    metric_value?: SortOrder
    previous_value?: SortOrder
    change_percentage?: SortOrder
    created_at?: SortOrder
  }

  export type report_metricsMinOrderByAggregateInput = {
    id?: SortOrder
    report_id?: SortOrder
    metric_name?: SortOrder
    metric_value?: SortOrder
    previous_value?: SortOrder
    change_percentage?: SortOrder
    created_at?: SortOrder
  }

  export type report_metricsSumOrderByAggregateInput = {
    change_percentage?: SortOrder
  }

  export type Report_metricsListRelationFilter = {
    every?: report_metricsWhereInput
    some?: report_metricsWhereInput
    none?: report_metricsWhereInput
  }

  export type report_metricsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type reportsCountOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    analysis_id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    url?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type reportsMaxOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    analysis_id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    url?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type reportsMinOrderByAggregateInput = {
    id?: SortOrder
    client_id?: SortOrder
    analysis_id?: SortOrder
    type?: SortOrder
    title?: SortOrder
    url?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type ConfigurationsListRelationFilter = {
    every?: configurationsWhereInput
    some?: configurationsWhereInput
    none?: configurationsWhereInput
  }

  export type configurationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    role?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type clientsCreateNestedOneWithoutActivity_logInput = {
    create?: XOR<clientsCreateWithoutActivity_logInput, clientsUncheckedCreateWithoutActivity_logInput>
    connectOrCreate?: clientsCreateOrConnectWithoutActivity_logInput
    connect?: clientsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutActivity_logInput = {
    create?: XOR<usersCreateWithoutActivity_logInput, usersUncheckedCreateWithoutActivity_logInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_logInput
    connect?: usersWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type clientsUpdateOneWithoutActivity_logNestedInput = {
    create?: XOR<clientsCreateWithoutActivity_logInput, clientsUncheckedCreateWithoutActivity_logInput>
    connectOrCreate?: clientsCreateOrConnectWithoutActivity_logInput
    upsert?: clientsUpsertWithoutActivity_logInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutActivity_logInput, clientsUpdateWithoutActivity_logInput>, clientsUncheckedUpdateWithoutActivity_logInput>
  }

  export type usersUpdateOneWithoutActivity_logNestedInput = {
    create?: XOR<usersCreateWithoutActivity_logInput, usersUncheckedCreateWithoutActivity_logInput>
    connectOrCreate?: usersCreateOrConnectWithoutActivity_logInput
    upsert?: usersUpsertWithoutActivity_logInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutActivity_logInput, usersUpdateWithoutActivity_logInput>, usersUncheckedUpdateWithoutActivity_logInput>
  }

  export type clientsCreateNestedOneWithoutAd_metricsInput = {
    create?: XOR<clientsCreateWithoutAd_metricsInput, clientsUncheckedCreateWithoutAd_metricsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutAd_metricsInput
    connect?: clientsWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutAd_metricsInput = {
    create?: XOR<productsCreateWithoutAd_metricsInput, productsUncheckedCreateWithoutAd_metricsInput>
    connectOrCreate?: productsCreateOrConnectWithoutAd_metricsInput
    connect?: productsWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type clientsUpdateOneRequiredWithoutAd_metricsNestedInput = {
    create?: XOR<clientsCreateWithoutAd_metricsInput, clientsUncheckedCreateWithoutAd_metricsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutAd_metricsInput
    upsert?: clientsUpsertWithoutAd_metricsInput
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutAd_metricsInput, clientsUpdateWithoutAd_metricsInput>, clientsUncheckedUpdateWithoutAd_metricsInput>
  }

  export type productsUpdateOneWithoutAd_metricsNestedInput = {
    create?: XOR<productsCreateWithoutAd_metricsInput, productsUncheckedCreateWithoutAd_metricsInput>
    connectOrCreate?: productsCreateOrConnectWithoutAd_metricsInput
    upsert?: productsUpsertWithoutAd_metricsInput
    disconnect?: productsWhereInput | boolean
    delete?: productsWhereInput | boolean
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutAd_metricsInput, productsUpdateWithoutAd_metricsInput>, productsUncheckedUpdateWithoutAd_metricsInput>
  }

  export type clientsCreateNestedOneWithoutAi_requestsInput = {
    create?: XOR<clientsCreateWithoutAi_requestsInput, clientsUncheckedCreateWithoutAi_requestsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutAi_requestsInput
    connect?: clientsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutAi_requestsInput = {
    create?: XOR<usersCreateWithoutAi_requestsInput, usersUncheckedCreateWithoutAi_requestsInput>
    connectOrCreate?: usersCreateOrConnectWithoutAi_requestsInput
    connect?: usersWhereUniqueInput
  }

  export type clientsUpdateOneWithoutAi_requestsNestedInput = {
    create?: XOR<clientsCreateWithoutAi_requestsInput, clientsUncheckedCreateWithoutAi_requestsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutAi_requestsInput
    upsert?: clientsUpsertWithoutAi_requestsInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutAi_requestsInput, clientsUpdateWithoutAi_requestsInput>, clientsUncheckedUpdateWithoutAi_requestsInput>
  }

  export type usersUpdateOneWithoutAi_requestsNestedInput = {
    create?: XOR<usersCreateWithoutAi_requestsInput, usersUncheckedCreateWithoutAi_requestsInput>
    connectOrCreate?: usersCreateOrConnectWithoutAi_requestsInput
    upsert?: usersUpsertWithoutAi_requestsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutAi_requestsInput, usersUpdateWithoutAi_requestsInput>, usersUncheckedUpdateWithoutAi_requestsInput>
  }

  export type clientsCreateNestedOneWithoutAnalysesInput = {
    create?: XOR<clientsCreateWithoutAnalysesInput, clientsUncheckedCreateWithoutAnalysesInput>
    connectOrCreate?: clientsCreateOrConnectWithoutAnalysesInput
    connect?: clientsWhereUniqueInput
  }

  export type analysis_resultsCreateNestedManyWithoutAnalysesInput = {
    create?: XOR<analysis_resultsCreateWithoutAnalysesInput, analysis_resultsUncheckedCreateWithoutAnalysesInput> | analysis_resultsCreateWithoutAnalysesInput[] | analysis_resultsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: analysis_resultsCreateOrConnectWithoutAnalysesInput | analysis_resultsCreateOrConnectWithoutAnalysesInput[]
    createMany?: analysis_resultsCreateManyAnalysesInputEnvelope
    connect?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
  }

  export type imagesCreateNestedManyWithoutAnalysesInput = {
    create?: XOR<imagesCreateWithoutAnalysesInput, imagesUncheckedCreateWithoutAnalysesInput> | imagesCreateWithoutAnalysesInput[] | imagesUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutAnalysesInput | imagesCreateOrConnectWithoutAnalysesInput[]
    createMany?: imagesCreateManyAnalysesInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type reportsCreateNestedManyWithoutAnalysesInput = {
    create?: XOR<reportsCreateWithoutAnalysesInput, reportsUncheckedCreateWithoutAnalysesInput> | reportsCreateWithoutAnalysesInput[] | reportsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutAnalysesInput | reportsCreateOrConnectWithoutAnalysesInput[]
    createMany?: reportsCreateManyAnalysesInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type analysis_resultsUncheckedCreateNestedManyWithoutAnalysesInput = {
    create?: XOR<analysis_resultsCreateWithoutAnalysesInput, analysis_resultsUncheckedCreateWithoutAnalysesInput> | analysis_resultsCreateWithoutAnalysesInput[] | analysis_resultsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: analysis_resultsCreateOrConnectWithoutAnalysesInput | analysis_resultsCreateOrConnectWithoutAnalysesInput[]
    createMany?: analysis_resultsCreateManyAnalysesInputEnvelope
    connect?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
  }

  export type imagesUncheckedCreateNestedManyWithoutAnalysesInput = {
    create?: XOR<imagesCreateWithoutAnalysesInput, imagesUncheckedCreateWithoutAnalysesInput> | imagesCreateWithoutAnalysesInput[] | imagesUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutAnalysesInput | imagesCreateOrConnectWithoutAnalysesInput[]
    createMany?: imagesCreateManyAnalysesInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type reportsUncheckedCreateNestedManyWithoutAnalysesInput = {
    create?: XOR<reportsCreateWithoutAnalysesInput, reportsUncheckedCreateWithoutAnalysesInput> | reportsCreateWithoutAnalysesInput[] | reportsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutAnalysesInput | reportsCreateOrConnectWithoutAnalysesInput[]
    createMany?: reportsCreateManyAnalysesInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type clientsUpdateOneRequiredWithoutAnalysesNestedInput = {
    create?: XOR<clientsCreateWithoutAnalysesInput, clientsUncheckedCreateWithoutAnalysesInput>
    connectOrCreate?: clientsCreateOrConnectWithoutAnalysesInput
    upsert?: clientsUpsertWithoutAnalysesInput
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutAnalysesInput, clientsUpdateWithoutAnalysesInput>, clientsUncheckedUpdateWithoutAnalysesInput>
  }

  export type analysis_resultsUpdateManyWithoutAnalysesNestedInput = {
    create?: XOR<analysis_resultsCreateWithoutAnalysesInput, analysis_resultsUncheckedCreateWithoutAnalysesInput> | analysis_resultsCreateWithoutAnalysesInput[] | analysis_resultsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: analysis_resultsCreateOrConnectWithoutAnalysesInput | analysis_resultsCreateOrConnectWithoutAnalysesInput[]
    upsert?: analysis_resultsUpsertWithWhereUniqueWithoutAnalysesInput | analysis_resultsUpsertWithWhereUniqueWithoutAnalysesInput[]
    createMany?: analysis_resultsCreateManyAnalysesInputEnvelope
    set?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    disconnect?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    delete?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    connect?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    update?: analysis_resultsUpdateWithWhereUniqueWithoutAnalysesInput | analysis_resultsUpdateWithWhereUniqueWithoutAnalysesInput[]
    updateMany?: analysis_resultsUpdateManyWithWhereWithoutAnalysesInput | analysis_resultsUpdateManyWithWhereWithoutAnalysesInput[]
    deleteMany?: analysis_resultsScalarWhereInput | analysis_resultsScalarWhereInput[]
  }

  export type imagesUpdateManyWithoutAnalysesNestedInput = {
    create?: XOR<imagesCreateWithoutAnalysesInput, imagesUncheckedCreateWithoutAnalysesInput> | imagesCreateWithoutAnalysesInput[] | imagesUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutAnalysesInput | imagesCreateOrConnectWithoutAnalysesInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutAnalysesInput | imagesUpsertWithWhereUniqueWithoutAnalysesInput[]
    createMany?: imagesCreateManyAnalysesInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutAnalysesInput | imagesUpdateWithWhereUniqueWithoutAnalysesInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutAnalysesInput | imagesUpdateManyWithWhereWithoutAnalysesInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type reportsUpdateManyWithoutAnalysesNestedInput = {
    create?: XOR<reportsCreateWithoutAnalysesInput, reportsUncheckedCreateWithoutAnalysesInput> | reportsCreateWithoutAnalysesInput[] | reportsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutAnalysesInput | reportsCreateOrConnectWithoutAnalysesInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutAnalysesInput | reportsUpsertWithWhereUniqueWithoutAnalysesInput[]
    createMany?: reportsCreateManyAnalysesInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutAnalysesInput | reportsUpdateWithWhereUniqueWithoutAnalysesInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutAnalysesInput | reportsUpdateManyWithWhereWithoutAnalysesInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type analysis_resultsUncheckedUpdateManyWithoutAnalysesNestedInput = {
    create?: XOR<analysis_resultsCreateWithoutAnalysesInput, analysis_resultsUncheckedCreateWithoutAnalysesInput> | analysis_resultsCreateWithoutAnalysesInput[] | analysis_resultsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: analysis_resultsCreateOrConnectWithoutAnalysesInput | analysis_resultsCreateOrConnectWithoutAnalysesInput[]
    upsert?: analysis_resultsUpsertWithWhereUniqueWithoutAnalysesInput | analysis_resultsUpsertWithWhereUniqueWithoutAnalysesInput[]
    createMany?: analysis_resultsCreateManyAnalysesInputEnvelope
    set?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    disconnect?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    delete?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    connect?: analysis_resultsWhereUniqueInput | analysis_resultsWhereUniqueInput[]
    update?: analysis_resultsUpdateWithWhereUniqueWithoutAnalysesInput | analysis_resultsUpdateWithWhereUniqueWithoutAnalysesInput[]
    updateMany?: analysis_resultsUpdateManyWithWhereWithoutAnalysesInput | analysis_resultsUpdateManyWithWhereWithoutAnalysesInput[]
    deleteMany?: analysis_resultsScalarWhereInput | analysis_resultsScalarWhereInput[]
  }

  export type imagesUncheckedUpdateManyWithoutAnalysesNestedInput = {
    create?: XOR<imagesCreateWithoutAnalysesInput, imagesUncheckedCreateWithoutAnalysesInput> | imagesCreateWithoutAnalysesInput[] | imagesUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutAnalysesInput | imagesCreateOrConnectWithoutAnalysesInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutAnalysesInput | imagesUpsertWithWhereUniqueWithoutAnalysesInput[]
    createMany?: imagesCreateManyAnalysesInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutAnalysesInput | imagesUpdateWithWhereUniqueWithoutAnalysesInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutAnalysesInput | imagesUpdateManyWithWhereWithoutAnalysesInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type reportsUncheckedUpdateManyWithoutAnalysesNestedInput = {
    create?: XOR<reportsCreateWithoutAnalysesInput, reportsUncheckedCreateWithoutAnalysesInput> | reportsCreateWithoutAnalysesInput[] | reportsUncheckedCreateWithoutAnalysesInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutAnalysesInput | reportsCreateOrConnectWithoutAnalysesInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutAnalysesInput | reportsUpsertWithWhereUniqueWithoutAnalysesInput[]
    createMany?: reportsCreateManyAnalysesInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutAnalysesInput | reportsUpdateWithWhereUniqueWithoutAnalysesInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutAnalysesInput | reportsUpdateManyWithWhereWithoutAnalysesInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type analysesCreateNestedOneWithoutAnalysis_resultsInput = {
    create?: XOR<analysesCreateWithoutAnalysis_resultsInput, analysesUncheckedCreateWithoutAnalysis_resultsInput>
    connectOrCreate?: analysesCreateOrConnectWithoutAnalysis_resultsInput
    connect?: analysesWhereUniqueInput
  }

  export type analysesUpdateOneRequiredWithoutAnalysis_resultsNestedInput = {
    create?: XOR<analysesCreateWithoutAnalysis_resultsInput, analysesUncheckedCreateWithoutAnalysis_resultsInput>
    connectOrCreate?: analysesCreateOrConnectWithoutAnalysis_resultsInput
    upsert?: analysesUpsertWithoutAnalysis_resultsInput
    connect?: analysesWhereUniqueInput
    update?: XOR<XOR<analysesUpdateToOneWithWhereWithoutAnalysis_resultsInput, analysesUpdateWithoutAnalysis_resultsInput>, analysesUncheckedUpdateWithoutAnalysis_resultsInput>
  }

  export type clientsCreateNestedOneWithoutChat_conversationsInput = {
    create?: XOR<clientsCreateWithoutChat_conversationsInput, clientsUncheckedCreateWithoutChat_conversationsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutChat_conversationsInput
    connect?: clientsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutChat_conversationsInput = {
    create?: XOR<usersCreateWithoutChat_conversationsInput, usersUncheckedCreateWithoutChat_conversationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutChat_conversationsInput
    connect?: usersWhereUniqueInput
  }

  export type chat_messagesCreateNestedManyWithoutChat_conversationsInput = {
    create?: XOR<chat_messagesCreateWithoutChat_conversationsInput, chat_messagesUncheckedCreateWithoutChat_conversationsInput> | chat_messagesCreateWithoutChat_conversationsInput[] | chat_messagesUncheckedCreateWithoutChat_conversationsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutChat_conversationsInput | chat_messagesCreateOrConnectWithoutChat_conversationsInput[]
    createMany?: chat_messagesCreateManyChat_conversationsInputEnvelope
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
  }

  export type chat_messagesUncheckedCreateNestedManyWithoutChat_conversationsInput = {
    create?: XOR<chat_messagesCreateWithoutChat_conversationsInput, chat_messagesUncheckedCreateWithoutChat_conversationsInput> | chat_messagesCreateWithoutChat_conversationsInput[] | chat_messagesUncheckedCreateWithoutChat_conversationsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutChat_conversationsInput | chat_messagesCreateOrConnectWithoutChat_conversationsInput[]
    createMany?: chat_messagesCreateManyChat_conversationsInputEnvelope
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
  }

  export type clientsUpdateOneWithoutChat_conversationsNestedInput = {
    create?: XOR<clientsCreateWithoutChat_conversationsInput, clientsUncheckedCreateWithoutChat_conversationsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutChat_conversationsInput
    upsert?: clientsUpsertWithoutChat_conversationsInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutChat_conversationsInput, clientsUpdateWithoutChat_conversationsInput>, clientsUncheckedUpdateWithoutChat_conversationsInput>
  }

  export type usersUpdateOneWithoutChat_conversationsNestedInput = {
    create?: XOR<usersCreateWithoutChat_conversationsInput, usersUncheckedCreateWithoutChat_conversationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutChat_conversationsInput
    upsert?: usersUpsertWithoutChat_conversationsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutChat_conversationsInput, usersUpdateWithoutChat_conversationsInput>, usersUncheckedUpdateWithoutChat_conversationsInput>
  }

  export type chat_messagesUpdateManyWithoutChat_conversationsNestedInput = {
    create?: XOR<chat_messagesCreateWithoutChat_conversationsInput, chat_messagesUncheckedCreateWithoutChat_conversationsInput> | chat_messagesCreateWithoutChat_conversationsInput[] | chat_messagesUncheckedCreateWithoutChat_conversationsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutChat_conversationsInput | chat_messagesCreateOrConnectWithoutChat_conversationsInput[]
    upsert?: chat_messagesUpsertWithWhereUniqueWithoutChat_conversationsInput | chat_messagesUpsertWithWhereUniqueWithoutChat_conversationsInput[]
    createMany?: chat_messagesCreateManyChat_conversationsInputEnvelope
    set?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    disconnect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    delete?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    update?: chat_messagesUpdateWithWhereUniqueWithoutChat_conversationsInput | chat_messagesUpdateWithWhereUniqueWithoutChat_conversationsInput[]
    updateMany?: chat_messagesUpdateManyWithWhereWithoutChat_conversationsInput | chat_messagesUpdateManyWithWhereWithoutChat_conversationsInput[]
    deleteMany?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
  }

  export type chat_messagesUncheckedUpdateManyWithoutChat_conversationsNestedInput = {
    create?: XOR<chat_messagesCreateWithoutChat_conversationsInput, chat_messagesUncheckedCreateWithoutChat_conversationsInput> | chat_messagesCreateWithoutChat_conversationsInput[] | chat_messagesUncheckedCreateWithoutChat_conversationsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutChat_conversationsInput | chat_messagesCreateOrConnectWithoutChat_conversationsInput[]
    upsert?: chat_messagesUpsertWithWhereUniqueWithoutChat_conversationsInput | chat_messagesUpsertWithWhereUniqueWithoutChat_conversationsInput[]
    createMany?: chat_messagesCreateManyChat_conversationsInputEnvelope
    set?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    disconnect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    delete?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    update?: chat_messagesUpdateWithWhereUniqueWithoutChat_conversationsInput | chat_messagesUpdateWithWhereUniqueWithoutChat_conversationsInput[]
    updateMany?: chat_messagesUpdateManyWithWhereWithoutChat_conversationsInput | chat_messagesUpdateManyWithWhereWithoutChat_conversationsInput[]
    deleteMany?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
  }

  export type clientsCreateNestedOneWithoutChat_messagesInput = {
    create?: XOR<clientsCreateWithoutChat_messagesInput, clientsUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: clientsCreateOrConnectWithoutChat_messagesInput
    connect?: clientsWhereUniqueInput
  }

  export type chat_conversationsCreateNestedOneWithoutChat_messagesInput = {
    create?: XOR<chat_conversationsCreateWithoutChat_messagesInput, chat_conversationsUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutChat_messagesInput
    connect?: chat_conversationsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutChat_messagesInput = {
    create?: XOR<usersCreateWithoutChat_messagesInput, usersUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutChat_messagesInput
    connect?: usersWhereUniqueInput
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type clientsUpdateOneWithoutChat_messagesNestedInput = {
    create?: XOR<clientsCreateWithoutChat_messagesInput, clientsUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: clientsCreateOrConnectWithoutChat_messagesInput
    upsert?: clientsUpsertWithoutChat_messagesInput
    disconnect?: clientsWhereInput | boolean
    delete?: clientsWhereInput | boolean
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutChat_messagesInput, clientsUpdateWithoutChat_messagesInput>, clientsUncheckedUpdateWithoutChat_messagesInput>
  }

  export type chat_conversationsUpdateOneWithoutChat_messagesNestedInput = {
    create?: XOR<chat_conversationsCreateWithoutChat_messagesInput, chat_conversationsUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutChat_messagesInput
    upsert?: chat_conversationsUpsertWithoutChat_messagesInput
    disconnect?: chat_conversationsWhereInput | boolean
    delete?: chat_conversationsWhereInput | boolean
    connect?: chat_conversationsWhereUniqueInput
    update?: XOR<XOR<chat_conversationsUpdateToOneWithWhereWithoutChat_messagesInput, chat_conversationsUpdateWithoutChat_messagesInput>, chat_conversationsUncheckedUpdateWithoutChat_messagesInput>
  }

  export type usersUpdateOneWithoutChat_messagesNestedInput = {
    create?: XOR<usersCreateWithoutChat_messagesInput, usersUncheckedCreateWithoutChat_messagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutChat_messagesInput
    upsert?: usersUpsertWithoutChat_messagesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutChat_messagesInput, usersUpdateWithoutChat_messagesInput>, usersUncheckedUpdateWithoutChat_messagesInput>
  }

  export type activity_logCreateNestedManyWithoutClientsInput = {
    create?: XOR<activity_logCreateWithoutClientsInput, activity_logUncheckedCreateWithoutClientsInput> | activity_logCreateWithoutClientsInput[] | activity_logUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutClientsInput | activity_logCreateOrConnectWithoutClientsInput[]
    createMany?: activity_logCreateManyClientsInputEnvelope
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
  }

  export type ad_metricsCreateNestedManyWithoutClientsInput = {
    create?: XOR<ad_metricsCreateWithoutClientsInput, ad_metricsUncheckedCreateWithoutClientsInput> | ad_metricsCreateWithoutClientsInput[] | ad_metricsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutClientsInput | ad_metricsCreateOrConnectWithoutClientsInput[]
    createMany?: ad_metricsCreateManyClientsInputEnvelope
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
  }

  export type ai_requestsCreateNestedManyWithoutClientsInput = {
    create?: XOR<ai_requestsCreateWithoutClientsInput, ai_requestsUncheckedCreateWithoutClientsInput> | ai_requestsCreateWithoutClientsInput[] | ai_requestsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutClientsInput | ai_requestsCreateOrConnectWithoutClientsInput[]
    createMany?: ai_requestsCreateManyClientsInputEnvelope
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
  }

  export type analysesCreateNestedManyWithoutClientsInput = {
    create?: XOR<analysesCreateWithoutClientsInput, analysesUncheckedCreateWithoutClientsInput> | analysesCreateWithoutClientsInput[] | analysesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: analysesCreateOrConnectWithoutClientsInput | analysesCreateOrConnectWithoutClientsInput[]
    createMany?: analysesCreateManyClientsInputEnvelope
    connect?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
  }

  export type chat_conversationsCreateNestedManyWithoutClientsInput = {
    create?: XOR<chat_conversationsCreateWithoutClientsInput, chat_conversationsUncheckedCreateWithoutClientsInput> | chat_conversationsCreateWithoutClientsInput[] | chat_conversationsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutClientsInput | chat_conversationsCreateOrConnectWithoutClientsInput[]
    createMany?: chat_conversationsCreateManyClientsInputEnvelope
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
  }

  export type chat_messagesCreateNestedManyWithoutClientsInput = {
    create?: XOR<chat_messagesCreateWithoutClientsInput, chat_messagesUncheckedCreateWithoutClientsInput> | chat_messagesCreateWithoutClientsInput[] | chat_messagesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutClientsInput | chat_messagesCreateOrConnectWithoutClientsInput[]
    createMany?: chat_messagesCreateManyClientsInputEnvelope
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
  }

  export type productsCreateNestedManyWithoutClientsInput = {
    create?: XOR<productsCreateWithoutClientsInput, productsUncheckedCreateWithoutClientsInput> | productsCreateWithoutClientsInput[] | productsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutClientsInput | productsCreateOrConnectWithoutClientsInput[]
    createMany?: productsCreateManyClientsInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type reportsCreateNestedManyWithoutClientsInput = {
    create?: XOR<reportsCreateWithoutClientsInput, reportsUncheckedCreateWithoutClientsInput> | reportsCreateWithoutClientsInput[] | reportsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutClientsInput | reportsCreateOrConnectWithoutClientsInput[]
    createMany?: reportsCreateManyClientsInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type activity_logUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<activity_logCreateWithoutClientsInput, activity_logUncheckedCreateWithoutClientsInput> | activity_logCreateWithoutClientsInput[] | activity_logUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutClientsInput | activity_logCreateOrConnectWithoutClientsInput[]
    createMany?: activity_logCreateManyClientsInputEnvelope
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
  }

  export type ad_metricsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<ad_metricsCreateWithoutClientsInput, ad_metricsUncheckedCreateWithoutClientsInput> | ad_metricsCreateWithoutClientsInput[] | ad_metricsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutClientsInput | ad_metricsCreateOrConnectWithoutClientsInput[]
    createMany?: ad_metricsCreateManyClientsInputEnvelope
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
  }

  export type ai_requestsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<ai_requestsCreateWithoutClientsInput, ai_requestsUncheckedCreateWithoutClientsInput> | ai_requestsCreateWithoutClientsInput[] | ai_requestsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutClientsInput | ai_requestsCreateOrConnectWithoutClientsInput[]
    createMany?: ai_requestsCreateManyClientsInputEnvelope
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
  }

  export type analysesUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<analysesCreateWithoutClientsInput, analysesUncheckedCreateWithoutClientsInput> | analysesCreateWithoutClientsInput[] | analysesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: analysesCreateOrConnectWithoutClientsInput | analysesCreateOrConnectWithoutClientsInput[]
    createMany?: analysesCreateManyClientsInputEnvelope
    connect?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
  }

  export type chat_conversationsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<chat_conversationsCreateWithoutClientsInput, chat_conversationsUncheckedCreateWithoutClientsInput> | chat_conversationsCreateWithoutClientsInput[] | chat_conversationsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutClientsInput | chat_conversationsCreateOrConnectWithoutClientsInput[]
    createMany?: chat_conversationsCreateManyClientsInputEnvelope
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
  }

  export type chat_messagesUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<chat_messagesCreateWithoutClientsInput, chat_messagesUncheckedCreateWithoutClientsInput> | chat_messagesCreateWithoutClientsInput[] | chat_messagesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutClientsInput | chat_messagesCreateOrConnectWithoutClientsInput[]
    createMany?: chat_messagesCreateManyClientsInputEnvelope
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<productsCreateWithoutClientsInput, productsUncheckedCreateWithoutClientsInput> | productsCreateWithoutClientsInput[] | productsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutClientsInput | productsCreateOrConnectWithoutClientsInput[]
    createMany?: productsCreateManyClientsInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type reportsUncheckedCreateNestedManyWithoutClientsInput = {
    create?: XOR<reportsCreateWithoutClientsInput, reportsUncheckedCreateWithoutClientsInput> | reportsCreateWithoutClientsInput[] | reportsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutClientsInput | reportsCreateOrConnectWithoutClientsInput[]
    createMany?: reportsCreateManyClientsInputEnvelope
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
  }

  export type activity_logUpdateManyWithoutClientsNestedInput = {
    create?: XOR<activity_logCreateWithoutClientsInput, activity_logUncheckedCreateWithoutClientsInput> | activity_logCreateWithoutClientsInput[] | activity_logUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutClientsInput | activity_logCreateOrConnectWithoutClientsInput[]
    upsert?: activity_logUpsertWithWhereUniqueWithoutClientsInput | activity_logUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: activity_logCreateManyClientsInputEnvelope
    set?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    disconnect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    delete?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    update?: activity_logUpdateWithWhereUniqueWithoutClientsInput | activity_logUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: activity_logUpdateManyWithWhereWithoutClientsInput | activity_logUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: activity_logScalarWhereInput | activity_logScalarWhereInput[]
  }

  export type ad_metricsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<ad_metricsCreateWithoutClientsInput, ad_metricsUncheckedCreateWithoutClientsInput> | ad_metricsCreateWithoutClientsInput[] | ad_metricsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutClientsInput | ad_metricsCreateOrConnectWithoutClientsInput[]
    upsert?: ad_metricsUpsertWithWhereUniqueWithoutClientsInput | ad_metricsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: ad_metricsCreateManyClientsInputEnvelope
    set?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    disconnect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    delete?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    update?: ad_metricsUpdateWithWhereUniqueWithoutClientsInput | ad_metricsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: ad_metricsUpdateManyWithWhereWithoutClientsInput | ad_metricsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: ad_metricsScalarWhereInput | ad_metricsScalarWhereInput[]
  }

  export type ai_requestsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<ai_requestsCreateWithoutClientsInput, ai_requestsUncheckedCreateWithoutClientsInput> | ai_requestsCreateWithoutClientsInput[] | ai_requestsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutClientsInput | ai_requestsCreateOrConnectWithoutClientsInput[]
    upsert?: ai_requestsUpsertWithWhereUniqueWithoutClientsInput | ai_requestsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: ai_requestsCreateManyClientsInputEnvelope
    set?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    disconnect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    delete?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    update?: ai_requestsUpdateWithWhereUniqueWithoutClientsInput | ai_requestsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: ai_requestsUpdateManyWithWhereWithoutClientsInput | ai_requestsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: ai_requestsScalarWhereInput | ai_requestsScalarWhereInput[]
  }

  export type analysesUpdateManyWithoutClientsNestedInput = {
    create?: XOR<analysesCreateWithoutClientsInput, analysesUncheckedCreateWithoutClientsInput> | analysesCreateWithoutClientsInput[] | analysesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: analysesCreateOrConnectWithoutClientsInput | analysesCreateOrConnectWithoutClientsInput[]
    upsert?: analysesUpsertWithWhereUniqueWithoutClientsInput | analysesUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: analysesCreateManyClientsInputEnvelope
    set?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    disconnect?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    delete?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    connect?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    update?: analysesUpdateWithWhereUniqueWithoutClientsInput | analysesUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: analysesUpdateManyWithWhereWithoutClientsInput | analysesUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: analysesScalarWhereInput | analysesScalarWhereInput[]
  }

  export type chat_conversationsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<chat_conversationsCreateWithoutClientsInput, chat_conversationsUncheckedCreateWithoutClientsInput> | chat_conversationsCreateWithoutClientsInput[] | chat_conversationsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutClientsInput | chat_conversationsCreateOrConnectWithoutClientsInput[]
    upsert?: chat_conversationsUpsertWithWhereUniqueWithoutClientsInput | chat_conversationsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: chat_conversationsCreateManyClientsInputEnvelope
    set?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    disconnect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    delete?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    update?: chat_conversationsUpdateWithWhereUniqueWithoutClientsInput | chat_conversationsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: chat_conversationsUpdateManyWithWhereWithoutClientsInput | chat_conversationsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: chat_conversationsScalarWhereInput | chat_conversationsScalarWhereInput[]
  }

  export type chat_messagesUpdateManyWithoutClientsNestedInput = {
    create?: XOR<chat_messagesCreateWithoutClientsInput, chat_messagesUncheckedCreateWithoutClientsInput> | chat_messagesCreateWithoutClientsInput[] | chat_messagesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutClientsInput | chat_messagesCreateOrConnectWithoutClientsInput[]
    upsert?: chat_messagesUpsertWithWhereUniqueWithoutClientsInput | chat_messagesUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: chat_messagesCreateManyClientsInputEnvelope
    set?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    disconnect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    delete?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    update?: chat_messagesUpdateWithWhereUniqueWithoutClientsInput | chat_messagesUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: chat_messagesUpdateManyWithWhereWithoutClientsInput | chat_messagesUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
  }

  export type productsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<productsCreateWithoutClientsInput, productsUncheckedCreateWithoutClientsInput> | productsCreateWithoutClientsInput[] | productsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutClientsInput | productsCreateOrConnectWithoutClientsInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutClientsInput | productsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: productsCreateManyClientsInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutClientsInput | productsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: productsUpdateManyWithWhereWithoutClientsInput | productsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type reportsUpdateManyWithoutClientsNestedInput = {
    create?: XOR<reportsCreateWithoutClientsInput, reportsUncheckedCreateWithoutClientsInput> | reportsCreateWithoutClientsInput[] | reportsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutClientsInput | reportsCreateOrConnectWithoutClientsInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutClientsInput | reportsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: reportsCreateManyClientsInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutClientsInput | reportsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutClientsInput | reportsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type activity_logUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<activity_logCreateWithoutClientsInput, activity_logUncheckedCreateWithoutClientsInput> | activity_logCreateWithoutClientsInput[] | activity_logUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutClientsInput | activity_logCreateOrConnectWithoutClientsInput[]
    upsert?: activity_logUpsertWithWhereUniqueWithoutClientsInput | activity_logUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: activity_logCreateManyClientsInputEnvelope
    set?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    disconnect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    delete?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    update?: activity_logUpdateWithWhereUniqueWithoutClientsInput | activity_logUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: activity_logUpdateManyWithWhereWithoutClientsInput | activity_logUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: activity_logScalarWhereInput | activity_logScalarWhereInput[]
  }

  export type ad_metricsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<ad_metricsCreateWithoutClientsInput, ad_metricsUncheckedCreateWithoutClientsInput> | ad_metricsCreateWithoutClientsInput[] | ad_metricsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutClientsInput | ad_metricsCreateOrConnectWithoutClientsInput[]
    upsert?: ad_metricsUpsertWithWhereUniqueWithoutClientsInput | ad_metricsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: ad_metricsCreateManyClientsInputEnvelope
    set?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    disconnect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    delete?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    update?: ad_metricsUpdateWithWhereUniqueWithoutClientsInput | ad_metricsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: ad_metricsUpdateManyWithWhereWithoutClientsInput | ad_metricsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: ad_metricsScalarWhereInput | ad_metricsScalarWhereInput[]
  }

  export type ai_requestsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<ai_requestsCreateWithoutClientsInput, ai_requestsUncheckedCreateWithoutClientsInput> | ai_requestsCreateWithoutClientsInput[] | ai_requestsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutClientsInput | ai_requestsCreateOrConnectWithoutClientsInput[]
    upsert?: ai_requestsUpsertWithWhereUniqueWithoutClientsInput | ai_requestsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: ai_requestsCreateManyClientsInputEnvelope
    set?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    disconnect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    delete?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    update?: ai_requestsUpdateWithWhereUniqueWithoutClientsInput | ai_requestsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: ai_requestsUpdateManyWithWhereWithoutClientsInput | ai_requestsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: ai_requestsScalarWhereInput | ai_requestsScalarWhereInput[]
  }

  export type analysesUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<analysesCreateWithoutClientsInput, analysesUncheckedCreateWithoutClientsInput> | analysesCreateWithoutClientsInput[] | analysesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: analysesCreateOrConnectWithoutClientsInput | analysesCreateOrConnectWithoutClientsInput[]
    upsert?: analysesUpsertWithWhereUniqueWithoutClientsInput | analysesUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: analysesCreateManyClientsInputEnvelope
    set?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    disconnect?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    delete?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    connect?: analysesWhereUniqueInput | analysesWhereUniqueInput[]
    update?: analysesUpdateWithWhereUniqueWithoutClientsInput | analysesUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: analysesUpdateManyWithWhereWithoutClientsInput | analysesUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: analysesScalarWhereInput | analysesScalarWhereInput[]
  }

  export type chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<chat_conversationsCreateWithoutClientsInput, chat_conversationsUncheckedCreateWithoutClientsInput> | chat_conversationsCreateWithoutClientsInput[] | chat_conversationsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutClientsInput | chat_conversationsCreateOrConnectWithoutClientsInput[]
    upsert?: chat_conversationsUpsertWithWhereUniqueWithoutClientsInput | chat_conversationsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: chat_conversationsCreateManyClientsInputEnvelope
    set?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    disconnect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    delete?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    update?: chat_conversationsUpdateWithWhereUniqueWithoutClientsInput | chat_conversationsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: chat_conversationsUpdateManyWithWhereWithoutClientsInput | chat_conversationsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: chat_conversationsScalarWhereInput | chat_conversationsScalarWhereInput[]
  }

  export type chat_messagesUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<chat_messagesCreateWithoutClientsInput, chat_messagesUncheckedCreateWithoutClientsInput> | chat_messagesCreateWithoutClientsInput[] | chat_messagesUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutClientsInput | chat_messagesCreateOrConnectWithoutClientsInput[]
    upsert?: chat_messagesUpsertWithWhereUniqueWithoutClientsInput | chat_messagesUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: chat_messagesCreateManyClientsInputEnvelope
    set?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    disconnect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    delete?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    update?: chat_messagesUpdateWithWhereUniqueWithoutClientsInput | chat_messagesUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: chat_messagesUpdateManyWithWhereWithoutClientsInput | chat_messagesUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
  }

  export type productsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<productsCreateWithoutClientsInput, productsUncheckedCreateWithoutClientsInput> | productsCreateWithoutClientsInput[] | productsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: productsCreateOrConnectWithoutClientsInput | productsCreateOrConnectWithoutClientsInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutClientsInput | productsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: productsCreateManyClientsInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutClientsInput | productsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: productsUpdateManyWithWhereWithoutClientsInput | productsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type reportsUncheckedUpdateManyWithoutClientsNestedInput = {
    create?: XOR<reportsCreateWithoutClientsInput, reportsUncheckedCreateWithoutClientsInput> | reportsCreateWithoutClientsInput[] | reportsUncheckedCreateWithoutClientsInput[]
    connectOrCreate?: reportsCreateOrConnectWithoutClientsInput | reportsCreateOrConnectWithoutClientsInput[]
    upsert?: reportsUpsertWithWhereUniqueWithoutClientsInput | reportsUpsertWithWhereUniqueWithoutClientsInput[]
    createMany?: reportsCreateManyClientsInputEnvelope
    set?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    disconnect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    delete?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    connect?: reportsWhereUniqueInput | reportsWhereUniqueInput[]
    update?: reportsUpdateWithWhereUniqueWithoutClientsInput | reportsUpdateWithWhereUniqueWithoutClientsInput[]
    updateMany?: reportsUpdateManyWithWhereWithoutClientsInput | reportsUpdateManyWithWhereWithoutClientsInput[]
    deleteMany?: reportsScalarWhereInput | reportsScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutConfigurationsInput = {
    create?: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutConfigurationsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneWithoutConfigurationsNestedInput = {
    create?: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutConfigurationsInput
    upsert?: usersUpsertWithoutConfigurationsInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutConfigurationsInput, usersUpdateWithoutConfigurationsInput>, usersUncheckedUpdateWithoutConfigurationsInput>
  }

  export type analysesCreateNestedOneWithoutImagesInput = {
    create?: XOR<analysesCreateWithoutImagesInput, analysesUncheckedCreateWithoutImagesInput>
    connectOrCreate?: analysesCreateOrConnectWithoutImagesInput
    connect?: analysesWhereUniqueInput
  }

  export type reportsCreateNestedOneWithoutImagesInput = {
    create?: XOR<reportsCreateWithoutImagesInput, reportsUncheckedCreateWithoutImagesInput>
    connectOrCreate?: reportsCreateOrConnectWithoutImagesInput
    connect?: reportsWhereUniqueInput
  }

  export type analysesUpdateOneWithoutImagesNestedInput = {
    create?: XOR<analysesCreateWithoutImagesInput, analysesUncheckedCreateWithoutImagesInput>
    connectOrCreate?: analysesCreateOrConnectWithoutImagesInput
    upsert?: analysesUpsertWithoutImagesInput
    disconnect?: analysesWhereInput | boolean
    delete?: analysesWhereInput | boolean
    connect?: analysesWhereUniqueInput
    update?: XOR<XOR<analysesUpdateToOneWithWhereWithoutImagesInput, analysesUpdateWithoutImagesInput>, analysesUncheckedUpdateWithoutImagesInput>
  }

  export type reportsUpdateOneWithoutImagesNestedInput = {
    create?: XOR<reportsCreateWithoutImagesInput, reportsUncheckedCreateWithoutImagesInput>
    connectOrCreate?: reportsCreateOrConnectWithoutImagesInput
    upsert?: reportsUpsertWithoutImagesInput
    disconnect?: reportsWhereInput | boolean
    delete?: reportsWhereInput | boolean
    connect?: reportsWhereUniqueInput
    update?: XOR<XOR<reportsUpdateToOneWithWhereWithoutImagesInput, reportsUpdateWithoutImagesInput>, reportsUncheckedUpdateWithoutImagesInput>
  }

  export type ad_metricsCreateNestedManyWithoutProductsInput = {
    create?: XOR<ad_metricsCreateWithoutProductsInput, ad_metricsUncheckedCreateWithoutProductsInput> | ad_metricsCreateWithoutProductsInput[] | ad_metricsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutProductsInput | ad_metricsCreateOrConnectWithoutProductsInput[]
    createMany?: ad_metricsCreateManyProductsInputEnvelope
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
  }

  export type clientsCreateNestedOneWithoutProductsInput = {
    create?: XOR<clientsCreateWithoutProductsInput, clientsUncheckedCreateWithoutProductsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutProductsInput
    connect?: clientsWhereUniqueInput
  }

  export type ad_metricsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<ad_metricsCreateWithoutProductsInput, ad_metricsUncheckedCreateWithoutProductsInput> | ad_metricsCreateWithoutProductsInput[] | ad_metricsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutProductsInput | ad_metricsCreateOrConnectWithoutProductsInput[]
    createMany?: ad_metricsCreateManyProductsInputEnvelope
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
  }

  export type ad_metricsUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ad_metricsCreateWithoutProductsInput, ad_metricsUncheckedCreateWithoutProductsInput> | ad_metricsCreateWithoutProductsInput[] | ad_metricsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutProductsInput | ad_metricsCreateOrConnectWithoutProductsInput[]
    upsert?: ad_metricsUpsertWithWhereUniqueWithoutProductsInput | ad_metricsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: ad_metricsCreateManyProductsInputEnvelope
    set?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    disconnect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    delete?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    update?: ad_metricsUpdateWithWhereUniqueWithoutProductsInput | ad_metricsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ad_metricsUpdateManyWithWhereWithoutProductsInput | ad_metricsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ad_metricsScalarWhereInput | ad_metricsScalarWhereInput[]
  }

  export type clientsUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<clientsCreateWithoutProductsInput, clientsUncheckedCreateWithoutProductsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutProductsInput
    upsert?: clientsUpsertWithoutProductsInput
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutProductsInput, clientsUpdateWithoutProductsInput>, clientsUncheckedUpdateWithoutProductsInput>
  }

  export type ad_metricsUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ad_metricsCreateWithoutProductsInput, ad_metricsUncheckedCreateWithoutProductsInput> | ad_metricsCreateWithoutProductsInput[] | ad_metricsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ad_metricsCreateOrConnectWithoutProductsInput | ad_metricsCreateOrConnectWithoutProductsInput[]
    upsert?: ad_metricsUpsertWithWhereUniqueWithoutProductsInput | ad_metricsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: ad_metricsCreateManyProductsInputEnvelope
    set?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    disconnect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    delete?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    connect?: ad_metricsWhereUniqueInput | ad_metricsWhereUniqueInput[]
    update?: ad_metricsUpdateWithWhereUniqueWithoutProductsInput | ad_metricsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ad_metricsUpdateManyWithWhereWithoutProductsInput | ad_metricsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ad_metricsScalarWhereInput | ad_metricsScalarWhereInput[]
  }

  export type reportsCreateNestedOneWithoutReport_metricsInput = {
    create?: XOR<reportsCreateWithoutReport_metricsInput, reportsUncheckedCreateWithoutReport_metricsInput>
    connectOrCreate?: reportsCreateOrConnectWithoutReport_metricsInput
    connect?: reportsWhereUniqueInput
  }

  export type reportsUpdateOneRequiredWithoutReport_metricsNestedInput = {
    create?: XOR<reportsCreateWithoutReport_metricsInput, reportsUncheckedCreateWithoutReport_metricsInput>
    connectOrCreate?: reportsCreateOrConnectWithoutReport_metricsInput
    upsert?: reportsUpsertWithoutReport_metricsInput
    connect?: reportsWhereUniqueInput
    update?: XOR<XOR<reportsUpdateToOneWithWhereWithoutReport_metricsInput, reportsUpdateWithoutReport_metricsInput>, reportsUncheckedUpdateWithoutReport_metricsInput>
  }

  export type imagesCreateNestedManyWithoutReportsInput = {
    create?: XOR<imagesCreateWithoutReportsInput, imagesUncheckedCreateWithoutReportsInput> | imagesCreateWithoutReportsInput[] | imagesUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutReportsInput | imagesCreateOrConnectWithoutReportsInput[]
    createMany?: imagesCreateManyReportsInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type report_metricsCreateNestedManyWithoutReportsInput = {
    create?: XOR<report_metricsCreateWithoutReportsInput, report_metricsUncheckedCreateWithoutReportsInput> | report_metricsCreateWithoutReportsInput[] | report_metricsUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: report_metricsCreateOrConnectWithoutReportsInput | report_metricsCreateOrConnectWithoutReportsInput[]
    createMany?: report_metricsCreateManyReportsInputEnvelope
    connect?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
  }

  export type analysesCreateNestedOneWithoutReportsInput = {
    create?: XOR<analysesCreateWithoutReportsInput, analysesUncheckedCreateWithoutReportsInput>
    connectOrCreate?: analysesCreateOrConnectWithoutReportsInput
    connect?: analysesWhereUniqueInput
  }

  export type clientsCreateNestedOneWithoutReportsInput = {
    create?: XOR<clientsCreateWithoutReportsInput, clientsUncheckedCreateWithoutReportsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutReportsInput
    connect?: clientsWhereUniqueInput
  }

  export type imagesUncheckedCreateNestedManyWithoutReportsInput = {
    create?: XOR<imagesCreateWithoutReportsInput, imagesUncheckedCreateWithoutReportsInput> | imagesCreateWithoutReportsInput[] | imagesUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutReportsInput | imagesCreateOrConnectWithoutReportsInput[]
    createMany?: imagesCreateManyReportsInputEnvelope
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
  }

  export type report_metricsUncheckedCreateNestedManyWithoutReportsInput = {
    create?: XOR<report_metricsCreateWithoutReportsInput, report_metricsUncheckedCreateWithoutReportsInput> | report_metricsCreateWithoutReportsInput[] | report_metricsUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: report_metricsCreateOrConnectWithoutReportsInput | report_metricsCreateOrConnectWithoutReportsInput[]
    createMany?: report_metricsCreateManyReportsInputEnvelope
    connect?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
  }

  export type imagesUpdateManyWithoutReportsNestedInput = {
    create?: XOR<imagesCreateWithoutReportsInput, imagesUncheckedCreateWithoutReportsInput> | imagesCreateWithoutReportsInput[] | imagesUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutReportsInput | imagesCreateOrConnectWithoutReportsInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutReportsInput | imagesUpsertWithWhereUniqueWithoutReportsInput[]
    createMany?: imagesCreateManyReportsInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutReportsInput | imagesUpdateWithWhereUniqueWithoutReportsInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutReportsInput | imagesUpdateManyWithWhereWithoutReportsInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type report_metricsUpdateManyWithoutReportsNestedInput = {
    create?: XOR<report_metricsCreateWithoutReportsInput, report_metricsUncheckedCreateWithoutReportsInput> | report_metricsCreateWithoutReportsInput[] | report_metricsUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: report_metricsCreateOrConnectWithoutReportsInput | report_metricsCreateOrConnectWithoutReportsInput[]
    upsert?: report_metricsUpsertWithWhereUniqueWithoutReportsInput | report_metricsUpsertWithWhereUniqueWithoutReportsInput[]
    createMany?: report_metricsCreateManyReportsInputEnvelope
    set?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    disconnect?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    delete?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    connect?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    update?: report_metricsUpdateWithWhereUniqueWithoutReportsInput | report_metricsUpdateWithWhereUniqueWithoutReportsInput[]
    updateMany?: report_metricsUpdateManyWithWhereWithoutReportsInput | report_metricsUpdateManyWithWhereWithoutReportsInput[]
    deleteMany?: report_metricsScalarWhereInput | report_metricsScalarWhereInput[]
  }

  export type analysesUpdateOneWithoutReportsNestedInput = {
    create?: XOR<analysesCreateWithoutReportsInput, analysesUncheckedCreateWithoutReportsInput>
    connectOrCreate?: analysesCreateOrConnectWithoutReportsInput
    upsert?: analysesUpsertWithoutReportsInput
    disconnect?: analysesWhereInput | boolean
    delete?: analysesWhereInput | boolean
    connect?: analysesWhereUniqueInput
    update?: XOR<XOR<analysesUpdateToOneWithWhereWithoutReportsInput, analysesUpdateWithoutReportsInput>, analysesUncheckedUpdateWithoutReportsInput>
  }

  export type clientsUpdateOneRequiredWithoutReportsNestedInput = {
    create?: XOR<clientsCreateWithoutReportsInput, clientsUncheckedCreateWithoutReportsInput>
    connectOrCreate?: clientsCreateOrConnectWithoutReportsInput
    upsert?: clientsUpsertWithoutReportsInput
    connect?: clientsWhereUniqueInput
    update?: XOR<XOR<clientsUpdateToOneWithWhereWithoutReportsInput, clientsUpdateWithoutReportsInput>, clientsUncheckedUpdateWithoutReportsInput>
  }

  export type imagesUncheckedUpdateManyWithoutReportsNestedInput = {
    create?: XOR<imagesCreateWithoutReportsInput, imagesUncheckedCreateWithoutReportsInput> | imagesCreateWithoutReportsInput[] | imagesUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: imagesCreateOrConnectWithoutReportsInput | imagesCreateOrConnectWithoutReportsInput[]
    upsert?: imagesUpsertWithWhereUniqueWithoutReportsInput | imagesUpsertWithWhereUniqueWithoutReportsInput[]
    createMany?: imagesCreateManyReportsInputEnvelope
    set?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    disconnect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    delete?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    connect?: imagesWhereUniqueInput | imagesWhereUniqueInput[]
    update?: imagesUpdateWithWhereUniqueWithoutReportsInput | imagesUpdateWithWhereUniqueWithoutReportsInput[]
    updateMany?: imagesUpdateManyWithWhereWithoutReportsInput | imagesUpdateManyWithWhereWithoutReportsInput[]
    deleteMany?: imagesScalarWhereInput | imagesScalarWhereInput[]
  }

  export type report_metricsUncheckedUpdateManyWithoutReportsNestedInput = {
    create?: XOR<report_metricsCreateWithoutReportsInput, report_metricsUncheckedCreateWithoutReportsInput> | report_metricsCreateWithoutReportsInput[] | report_metricsUncheckedCreateWithoutReportsInput[]
    connectOrCreate?: report_metricsCreateOrConnectWithoutReportsInput | report_metricsCreateOrConnectWithoutReportsInput[]
    upsert?: report_metricsUpsertWithWhereUniqueWithoutReportsInput | report_metricsUpsertWithWhereUniqueWithoutReportsInput[]
    createMany?: report_metricsCreateManyReportsInputEnvelope
    set?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    disconnect?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    delete?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    connect?: report_metricsWhereUniqueInput | report_metricsWhereUniqueInput[]
    update?: report_metricsUpdateWithWhereUniqueWithoutReportsInput | report_metricsUpdateWithWhereUniqueWithoutReportsInput[]
    updateMany?: report_metricsUpdateManyWithWhereWithoutReportsInput | report_metricsUpdateManyWithWhereWithoutReportsInput[]
    deleteMany?: report_metricsScalarWhereInput | report_metricsScalarWhereInput[]
  }

  export type activity_logCreateNestedManyWithoutUsersInput = {
    create?: XOR<activity_logCreateWithoutUsersInput, activity_logUncheckedCreateWithoutUsersInput> | activity_logCreateWithoutUsersInput[] | activity_logUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutUsersInput | activity_logCreateOrConnectWithoutUsersInput[]
    createMany?: activity_logCreateManyUsersInputEnvelope
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
  }

  export type ai_requestsCreateNestedManyWithoutUsersInput = {
    create?: XOR<ai_requestsCreateWithoutUsersInput, ai_requestsUncheckedCreateWithoutUsersInput> | ai_requestsCreateWithoutUsersInput[] | ai_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutUsersInput | ai_requestsCreateOrConnectWithoutUsersInput[]
    createMany?: ai_requestsCreateManyUsersInputEnvelope
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
  }

  export type chat_conversationsCreateNestedManyWithoutUsersInput = {
    create?: XOR<chat_conversationsCreateWithoutUsersInput, chat_conversationsUncheckedCreateWithoutUsersInput> | chat_conversationsCreateWithoutUsersInput[] | chat_conversationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutUsersInput | chat_conversationsCreateOrConnectWithoutUsersInput[]
    createMany?: chat_conversationsCreateManyUsersInputEnvelope
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
  }

  export type chat_messagesCreateNestedManyWithoutUsersInput = {
    create?: XOR<chat_messagesCreateWithoutUsersInput, chat_messagesUncheckedCreateWithoutUsersInput> | chat_messagesCreateWithoutUsersInput[] | chat_messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutUsersInput | chat_messagesCreateOrConnectWithoutUsersInput[]
    createMany?: chat_messagesCreateManyUsersInputEnvelope
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
  }

  export type configurationsCreateNestedManyWithoutUsersInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
  }

  export type activity_logUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<activity_logCreateWithoutUsersInput, activity_logUncheckedCreateWithoutUsersInput> | activity_logCreateWithoutUsersInput[] | activity_logUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutUsersInput | activity_logCreateOrConnectWithoutUsersInput[]
    createMany?: activity_logCreateManyUsersInputEnvelope
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
  }

  export type ai_requestsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<ai_requestsCreateWithoutUsersInput, ai_requestsUncheckedCreateWithoutUsersInput> | ai_requestsCreateWithoutUsersInput[] | ai_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutUsersInput | ai_requestsCreateOrConnectWithoutUsersInput[]
    createMany?: ai_requestsCreateManyUsersInputEnvelope
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
  }

  export type chat_conversationsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<chat_conversationsCreateWithoutUsersInput, chat_conversationsUncheckedCreateWithoutUsersInput> | chat_conversationsCreateWithoutUsersInput[] | chat_conversationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutUsersInput | chat_conversationsCreateOrConnectWithoutUsersInput[]
    createMany?: chat_conversationsCreateManyUsersInputEnvelope
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
  }

  export type chat_messagesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<chat_messagesCreateWithoutUsersInput, chat_messagesUncheckedCreateWithoutUsersInput> | chat_messagesCreateWithoutUsersInput[] | chat_messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutUsersInput | chat_messagesCreateOrConnectWithoutUsersInput[]
    createMany?: chat_messagesCreateManyUsersInputEnvelope
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
  }

  export type configurationsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
  }

  export type activity_logUpdateManyWithoutUsersNestedInput = {
    create?: XOR<activity_logCreateWithoutUsersInput, activity_logUncheckedCreateWithoutUsersInput> | activity_logCreateWithoutUsersInput[] | activity_logUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutUsersInput | activity_logCreateOrConnectWithoutUsersInput[]
    upsert?: activity_logUpsertWithWhereUniqueWithoutUsersInput | activity_logUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: activity_logCreateManyUsersInputEnvelope
    set?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    disconnect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    delete?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    update?: activity_logUpdateWithWhereUniqueWithoutUsersInput | activity_logUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: activity_logUpdateManyWithWhereWithoutUsersInput | activity_logUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: activity_logScalarWhereInput | activity_logScalarWhereInput[]
  }

  export type ai_requestsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<ai_requestsCreateWithoutUsersInput, ai_requestsUncheckedCreateWithoutUsersInput> | ai_requestsCreateWithoutUsersInput[] | ai_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutUsersInput | ai_requestsCreateOrConnectWithoutUsersInput[]
    upsert?: ai_requestsUpsertWithWhereUniqueWithoutUsersInput | ai_requestsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: ai_requestsCreateManyUsersInputEnvelope
    set?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    disconnect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    delete?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    update?: ai_requestsUpdateWithWhereUniqueWithoutUsersInput | ai_requestsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: ai_requestsUpdateManyWithWhereWithoutUsersInput | ai_requestsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: ai_requestsScalarWhereInput | ai_requestsScalarWhereInput[]
  }

  export type chat_conversationsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<chat_conversationsCreateWithoutUsersInput, chat_conversationsUncheckedCreateWithoutUsersInput> | chat_conversationsCreateWithoutUsersInput[] | chat_conversationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutUsersInput | chat_conversationsCreateOrConnectWithoutUsersInput[]
    upsert?: chat_conversationsUpsertWithWhereUniqueWithoutUsersInput | chat_conversationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: chat_conversationsCreateManyUsersInputEnvelope
    set?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    disconnect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    delete?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    update?: chat_conversationsUpdateWithWhereUniqueWithoutUsersInput | chat_conversationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: chat_conversationsUpdateManyWithWhereWithoutUsersInput | chat_conversationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: chat_conversationsScalarWhereInput | chat_conversationsScalarWhereInput[]
  }

  export type chat_messagesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<chat_messagesCreateWithoutUsersInput, chat_messagesUncheckedCreateWithoutUsersInput> | chat_messagesCreateWithoutUsersInput[] | chat_messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutUsersInput | chat_messagesCreateOrConnectWithoutUsersInput[]
    upsert?: chat_messagesUpsertWithWhereUniqueWithoutUsersInput | chat_messagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: chat_messagesCreateManyUsersInputEnvelope
    set?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    disconnect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    delete?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    update?: chat_messagesUpdateWithWhereUniqueWithoutUsersInput | chat_messagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: chat_messagesUpdateManyWithWhereWithoutUsersInput | chat_messagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
  }

  export type configurationsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    upsert?: configurationsUpsertWithWhereUniqueWithoutUsersInput | configurationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    set?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    disconnect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    delete?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    update?: configurationsUpdateWithWhereUniqueWithoutUsersInput | configurationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: configurationsUpdateManyWithWhereWithoutUsersInput | configurationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
  }

  export type activity_logUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<activity_logCreateWithoutUsersInput, activity_logUncheckedCreateWithoutUsersInput> | activity_logCreateWithoutUsersInput[] | activity_logUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: activity_logCreateOrConnectWithoutUsersInput | activity_logCreateOrConnectWithoutUsersInput[]
    upsert?: activity_logUpsertWithWhereUniqueWithoutUsersInput | activity_logUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: activity_logCreateManyUsersInputEnvelope
    set?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    disconnect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    delete?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    connect?: activity_logWhereUniqueInput | activity_logWhereUniqueInput[]
    update?: activity_logUpdateWithWhereUniqueWithoutUsersInput | activity_logUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: activity_logUpdateManyWithWhereWithoutUsersInput | activity_logUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: activity_logScalarWhereInput | activity_logScalarWhereInput[]
  }

  export type ai_requestsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<ai_requestsCreateWithoutUsersInput, ai_requestsUncheckedCreateWithoutUsersInput> | ai_requestsCreateWithoutUsersInput[] | ai_requestsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: ai_requestsCreateOrConnectWithoutUsersInput | ai_requestsCreateOrConnectWithoutUsersInput[]
    upsert?: ai_requestsUpsertWithWhereUniqueWithoutUsersInput | ai_requestsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: ai_requestsCreateManyUsersInputEnvelope
    set?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    disconnect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    delete?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    connect?: ai_requestsWhereUniqueInput | ai_requestsWhereUniqueInput[]
    update?: ai_requestsUpdateWithWhereUniqueWithoutUsersInput | ai_requestsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: ai_requestsUpdateManyWithWhereWithoutUsersInput | ai_requestsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: ai_requestsScalarWhereInput | ai_requestsScalarWhereInput[]
  }

  export type chat_conversationsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<chat_conversationsCreateWithoutUsersInput, chat_conversationsUncheckedCreateWithoutUsersInput> | chat_conversationsCreateWithoutUsersInput[] | chat_conversationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_conversationsCreateOrConnectWithoutUsersInput | chat_conversationsCreateOrConnectWithoutUsersInput[]
    upsert?: chat_conversationsUpsertWithWhereUniqueWithoutUsersInput | chat_conversationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: chat_conversationsCreateManyUsersInputEnvelope
    set?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    disconnect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    delete?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    connect?: chat_conversationsWhereUniqueInput | chat_conversationsWhereUniqueInput[]
    update?: chat_conversationsUpdateWithWhereUniqueWithoutUsersInput | chat_conversationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: chat_conversationsUpdateManyWithWhereWithoutUsersInput | chat_conversationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: chat_conversationsScalarWhereInput | chat_conversationsScalarWhereInput[]
  }

  export type chat_messagesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<chat_messagesCreateWithoutUsersInput, chat_messagesUncheckedCreateWithoutUsersInput> | chat_messagesCreateWithoutUsersInput[] | chat_messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_messagesCreateOrConnectWithoutUsersInput | chat_messagesCreateOrConnectWithoutUsersInput[]
    upsert?: chat_messagesUpsertWithWhereUniqueWithoutUsersInput | chat_messagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: chat_messagesCreateManyUsersInputEnvelope
    set?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    disconnect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    delete?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    connect?: chat_messagesWhereUniqueInput | chat_messagesWhereUniqueInput[]
    update?: chat_messagesUpdateWithWhereUniqueWithoutUsersInput | chat_messagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: chat_messagesUpdateManyWithWhereWithoutUsersInput | chat_messagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
  }

  export type configurationsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    upsert?: configurationsUpsertWithWhereUniqueWithoutUsersInput | configurationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    set?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    disconnect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    delete?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    update?: configurationsUpdateWithWhereUniqueWithoutUsersInput | configurationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: configurationsUpdateManyWithWhereWithoutUsersInput | configurationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type clientsCreateWithoutActivity_logInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutActivity_logInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutActivity_logInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutActivity_logInput, clientsUncheckedCreateWithoutActivity_logInput>
  }

  export type usersCreateWithoutActivity_logInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ai_requests?: ai_requestsCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutActivity_logInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutActivity_logInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutActivity_logInput, usersUncheckedCreateWithoutActivity_logInput>
  }

  export type clientsUpsertWithoutActivity_logInput = {
    update: XOR<clientsUpdateWithoutActivity_logInput, clientsUncheckedUpdateWithoutActivity_logInput>
    create: XOR<clientsCreateWithoutActivity_logInput, clientsUncheckedCreateWithoutActivity_logInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutActivity_logInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutActivity_logInput, clientsUncheckedUpdateWithoutActivity_logInput>
  }

  export type clientsUpdateWithoutActivity_logInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutActivity_logInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type usersUpsertWithoutActivity_logInput = {
    update: XOR<usersUpdateWithoutActivity_logInput, usersUncheckedUpdateWithoutActivity_logInput>
    create: XOR<usersCreateWithoutActivity_logInput, usersUncheckedCreateWithoutActivity_logInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutActivity_logInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutActivity_logInput, usersUncheckedUpdateWithoutActivity_logInput>
  }

  export type usersUpdateWithoutActivity_logInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ai_requests?: ai_requestsUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutActivity_logInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type clientsCreateWithoutAd_metricsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutAd_metricsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutAd_metricsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutAd_metricsInput, clientsUncheckedCreateWithoutAd_metricsInput>
  }

  export type productsCreateWithoutAd_metricsInput = {
    id?: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutAd_metricsInput = {
    id?: string
    client_id: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type productsCreateOrConnectWithoutAd_metricsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutAd_metricsInput, productsUncheckedCreateWithoutAd_metricsInput>
  }

  export type clientsUpsertWithoutAd_metricsInput = {
    update: XOR<clientsUpdateWithoutAd_metricsInput, clientsUncheckedUpdateWithoutAd_metricsInput>
    create: XOR<clientsCreateWithoutAd_metricsInput, clientsUncheckedCreateWithoutAd_metricsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutAd_metricsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutAd_metricsInput, clientsUncheckedUpdateWithoutAd_metricsInput>
  }

  export type clientsUpdateWithoutAd_metricsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutAd_metricsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type productsUpsertWithoutAd_metricsInput = {
    update: XOR<productsUpdateWithoutAd_metricsInput, productsUncheckedUpdateWithoutAd_metricsInput>
    create: XOR<productsCreateWithoutAd_metricsInput, productsUncheckedCreateWithoutAd_metricsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutAd_metricsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutAd_metricsInput, productsUncheckedUpdateWithoutAd_metricsInput>
  }

  export type productsUpdateWithoutAd_metricsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutAd_metricsInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type clientsCreateWithoutAi_requestsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutAi_requestsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutAi_requestsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutAi_requestsInput, clientsUncheckedCreateWithoutAi_requestsInput>
  }

  export type usersCreateWithoutAi_requestsInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutAi_requestsInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutAi_requestsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutAi_requestsInput, usersUncheckedCreateWithoutAi_requestsInput>
  }

  export type clientsUpsertWithoutAi_requestsInput = {
    update: XOR<clientsUpdateWithoutAi_requestsInput, clientsUncheckedUpdateWithoutAi_requestsInput>
    create: XOR<clientsCreateWithoutAi_requestsInput, clientsUncheckedCreateWithoutAi_requestsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutAi_requestsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutAi_requestsInput, clientsUncheckedUpdateWithoutAi_requestsInput>
  }

  export type clientsUpdateWithoutAi_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutAi_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type usersUpsertWithoutAi_requestsInput = {
    update: XOR<usersUpdateWithoutAi_requestsInput, usersUncheckedUpdateWithoutAi_requestsInput>
    create: XOR<usersCreateWithoutAi_requestsInput, usersUncheckedCreateWithoutAi_requestsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutAi_requestsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutAi_requestsInput, usersUncheckedUpdateWithoutAi_requestsInput>
  }

  export type usersUpdateWithoutAi_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutAi_requestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type clientsCreateWithoutAnalysesInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutAnalysesInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutAnalysesInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutAnalysesInput, clientsUncheckedCreateWithoutAnalysesInput>
  }

  export type analysis_resultsCreateWithoutAnalysesInput = {
    id?: string
    content: string
    source_image_url?: string | null
    processed_by?: string | null
    created_at?: Date | string | null
  }

  export type analysis_resultsUncheckedCreateWithoutAnalysesInput = {
    id?: string
    content: string
    source_image_url?: string | null
    processed_by?: string | null
    created_at?: Date | string | null
  }

  export type analysis_resultsCreateOrConnectWithoutAnalysesInput = {
    where: analysis_resultsWhereUniqueInput
    create: XOR<analysis_resultsCreateWithoutAnalysesInput, analysis_resultsUncheckedCreateWithoutAnalysesInput>
  }

  export type analysis_resultsCreateManyAnalysesInputEnvelope = {
    data: analysis_resultsCreateManyAnalysesInput | analysis_resultsCreateManyAnalysesInput[]
    skipDuplicates?: boolean
  }

  export type imagesCreateWithoutAnalysesInput = {
    id?: string
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
    reports?: reportsCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateWithoutAnalysesInput = {
    id?: string
    report_id?: string | null
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
  }

  export type imagesCreateOrConnectWithoutAnalysesInput = {
    where: imagesWhereUniqueInput
    create: XOR<imagesCreateWithoutAnalysesInput, imagesUncheckedCreateWithoutAnalysesInput>
  }

  export type imagesCreateManyAnalysesInputEnvelope = {
    data: imagesCreateManyAnalysesInput | imagesCreateManyAnalysesInput[]
    skipDuplicates?: boolean
  }

  export type reportsCreateWithoutAnalysesInput = {
    id?: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesCreateNestedManyWithoutReportsInput
    report_metrics?: report_metricsCreateNestedManyWithoutReportsInput
    clients: clientsCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateWithoutAnalysesInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesUncheckedCreateNestedManyWithoutReportsInput
    report_metrics?: report_metricsUncheckedCreateNestedManyWithoutReportsInput
  }

  export type reportsCreateOrConnectWithoutAnalysesInput = {
    where: reportsWhereUniqueInput
    create: XOR<reportsCreateWithoutAnalysesInput, reportsUncheckedCreateWithoutAnalysesInput>
  }

  export type reportsCreateManyAnalysesInputEnvelope = {
    data: reportsCreateManyAnalysesInput | reportsCreateManyAnalysesInput[]
    skipDuplicates?: boolean
  }

  export type clientsUpsertWithoutAnalysesInput = {
    update: XOR<clientsUpdateWithoutAnalysesInput, clientsUncheckedUpdateWithoutAnalysesInput>
    create: XOR<clientsCreateWithoutAnalysesInput, clientsUncheckedCreateWithoutAnalysesInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutAnalysesInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutAnalysesInput, clientsUncheckedUpdateWithoutAnalysesInput>
  }

  export type clientsUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type analysis_resultsUpsertWithWhereUniqueWithoutAnalysesInput = {
    where: analysis_resultsWhereUniqueInput
    update: XOR<analysis_resultsUpdateWithoutAnalysesInput, analysis_resultsUncheckedUpdateWithoutAnalysesInput>
    create: XOR<analysis_resultsCreateWithoutAnalysesInput, analysis_resultsUncheckedCreateWithoutAnalysesInput>
  }

  export type analysis_resultsUpdateWithWhereUniqueWithoutAnalysesInput = {
    where: analysis_resultsWhereUniqueInput
    data: XOR<analysis_resultsUpdateWithoutAnalysesInput, analysis_resultsUncheckedUpdateWithoutAnalysesInput>
  }

  export type analysis_resultsUpdateManyWithWhereWithoutAnalysesInput = {
    where: analysis_resultsScalarWhereInput
    data: XOR<analysis_resultsUpdateManyMutationInput, analysis_resultsUncheckedUpdateManyWithoutAnalysesInput>
  }

  export type analysis_resultsScalarWhereInput = {
    AND?: analysis_resultsScalarWhereInput | analysis_resultsScalarWhereInput[]
    OR?: analysis_resultsScalarWhereInput[]
    NOT?: analysis_resultsScalarWhereInput | analysis_resultsScalarWhereInput[]
    id?: UuidFilter<"analysis_results"> | string
    analysis_id?: UuidFilter<"analysis_results"> | string
    content?: StringFilter<"analysis_results"> | string
    source_image_url?: StringNullableFilter<"analysis_results"> | string | null
    processed_by?: StringNullableFilter<"analysis_results"> | string | null
    created_at?: DateTimeNullableFilter<"analysis_results"> | Date | string | null
  }

  export type imagesUpsertWithWhereUniqueWithoutAnalysesInput = {
    where: imagesWhereUniqueInput
    update: XOR<imagesUpdateWithoutAnalysesInput, imagesUncheckedUpdateWithoutAnalysesInput>
    create: XOR<imagesCreateWithoutAnalysesInput, imagesUncheckedCreateWithoutAnalysesInput>
  }

  export type imagesUpdateWithWhereUniqueWithoutAnalysesInput = {
    where: imagesWhereUniqueInput
    data: XOR<imagesUpdateWithoutAnalysesInput, imagesUncheckedUpdateWithoutAnalysesInput>
  }

  export type imagesUpdateManyWithWhereWithoutAnalysesInput = {
    where: imagesScalarWhereInput
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyWithoutAnalysesInput>
  }

  export type imagesScalarWhereInput = {
    AND?: imagesScalarWhereInput | imagesScalarWhereInput[]
    OR?: imagesScalarWhereInput[]
    NOT?: imagesScalarWhereInput | imagesScalarWhereInput[]
    id?: UuidFilter<"images"> | string
    analysis_id?: UuidNullableFilter<"images"> | string | null
    report_id?: UuidNullableFilter<"images"> | string | null
    url?: StringFilter<"images"> | string
    original_filename?: StringNullableFilter<"images"> | string | null
    file_size?: IntNullableFilter<"images"> | number | null
    mime_type?: StringNullableFilter<"images"> | string | null
    created_at?: DateTimeNullableFilter<"images"> | Date | string | null
  }

  export type reportsUpsertWithWhereUniqueWithoutAnalysesInput = {
    where: reportsWhereUniqueInput
    update: XOR<reportsUpdateWithoutAnalysesInput, reportsUncheckedUpdateWithoutAnalysesInput>
    create: XOR<reportsCreateWithoutAnalysesInput, reportsUncheckedCreateWithoutAnalysesInput>
  }

  export type reportsUpdateWithWhereUniqueWithoutAnalysesInput = {
    where: reportsWhereUniqueInput
    data: XOR<reportsUpdateWithoutAnalysesInput, reportsUncheckedUpdateWithoutAnalysesInput>
  }

  export type reportsUpdateManyWithWhereWithoutAnalysesInput = {
    where: reportsScalarWhereInput
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyWithoutAnalysesInput>
  }

  export type reportsScalarWhereInput = {
    AND?: reportsScalarWhereInput | reportsScalarWhereInput[]
    OR?: reportsScalarWhereInput[]
    NOT?: reportsScalarWhereInput | reportsScalarWhereInput[]
    id?: UuidFilter<"reports"> | string
    client_id?: UuidFilter<"reports"> | string
    analysis_id?: UuidNullableFilter<"reports"> | string | null
    type?: StringFilter<"reports"> | string
    title?: StringNullableFilter<"reports"> | string | null
    url?: StringNullableFilter<"reports"> | string | null
    status?: StringNullableFilter<"reports"> | string | null
    created_at?: DateTimeNullableFilter<"reports"> | Date | string | null
  }

  export type analysesCreateWithoutAnalysis_resultsInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutAnalysesInput
    images?: imagesCreateNestedManyWithoutAnalysesInput
    reports?: reportsCreateNestedManyWithoutAnalysesInput
  }

  export type analysesUncheckedCreateWithoutAnalysis_resultsInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    images?: imagesUncheckedCreateNestedManyWithoutAnalysesInput
    reports?: reportsUncheckedCreateNestedManyWithoutAnalysesInput
  }

  export type analysesCreateOrConnectWithoutAnalysis_resultsInput = {
    where: analysesWhereUniqueInput
    create: XOR<analysesCreateWithoutAnalysis_resultsInput, analysesUncheckedCreateWithoutAnalysis_resultsInput>
  }

  export type analysesUpsertWithoutAnalysis_resultsInput = {
    update: XOR<analysesUpdateWithoutAnalysis_resultsInput, analysesUncheckedUpdateWithoutAnalysis_resultsInput>
    create: XOR<analysesCreateWithoutAnalysis_resultsInput, analysesUncheckedCreateWithoutAnalysis_resultsInput>
    where?: analysesWhereInput
  }

  export type analysesUpdateToOneWithWhereWithoutAnalysis_resultsInput = {
    where?: analysesWhereInput
    data: XOR<analysesUpdateWithoutAnalysis_resultsInput, analysesUncheckedUpdateWithoutAnalysis_resultsInput>
  }

  export type analysesUpdateWithoutAnalysis_resultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutAnalysesNestedInput
    images?: imagesUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesUncheckedUpdateWithoutAnalysis_resultsInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUncheckedUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutAnalysesNestedInput
  }

  export type clientsCreateWithoutChat_conversationsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutChat_conversationsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutChat_conversationsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutChat_conversationsInput, clientsUncheckedCreateWithoutChat_conversationsInput>
  }

  export type usersCreateWithoutChat_conversationsInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutChat_conversationsInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutChat_conversationsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutChat_conversationsInput, usersUncheckedCreateWithoutChat_conversationsInput>
  }

  export type chat_messagesCreateWithoutChat_conversationsInput = {
    id?: string
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutChat_messagesInput
    users?: usersCreateNestedOneWithoutChat_messagesInput
  }

  export type chat_messagesUncheckedCreateWithoutChat_conversationsInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type chat_messagesCreateOrConnectWithoutChat_conversationsInput = {
    where: chat_messagesWhereUniqueInput
    create: XOR<chat_messagesCreateWithoutChat_conversationsInput, chat_messagesUncheckedCreateWithoutChat_conversationsInput>
  }

  export type chat_messagesCreateManyChat_conversationsInputEnvelope = {
    data: chat_messagesCreateManyChat_conversationsInput | chat_messagesCreateManyChat_conversationsInput[]
    skipDuplicates?: boolean
  }

  export type clientsUpsertWithoutChat_conversationsInput = {
    update: XOR<clientsUpdateWithoutChat_conversationsInput, clientsUncheckedUpdateWithoutChat_conversationsInput>
    create: XOR<clientsCreateWithoutChat_conversationsInput, clientsUncheckedCreateWithoutChat_conversationsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutChat_conversationsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutChat_conversationsInput, clientsUncheckedUpdateWithoutChat_conversationsInput>
  }

  export type clientsUpdateWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type usersUpsertWithoutChat_conversationsInput = {
    update: XOR<usersUpdateWithoutChat_conversationsInput, usersUncheckedUpdateWithoutChat_conversationsInput>
    create: XOR<usersCreateWithoutChat_conversationsInput, usersUncheckedCreateWithoutChat_conversationsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutChat_conversationsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutChat_conversationsInput, usersUncheckedUpdateWithoutChat_conversationsInput>
  }

  export type usersUpdateWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type chat_messagesUpsertWithWhereUniqueWithoutChat_conversationsInput = {
    where: chat_messagesWhereUniqueInput
    update: XOR<chat_messagesUpdateWithoutChat_conversationsInput, chat_messagesUncheckedUpdateWithoutChat_conversationsInput>
    create: XOR<chat_messagesCreateWithoutChat_conversationsInput, chat_messagesUncheckedCreateWithoutChat_conversationsInput>
  }

  export type chat_messagesUpdateWithWhereUniqueWithoutChat_conversationsInput = {
    where: chat_messagesWhereUniqueInput
    data: XOR<chat_messagesUpdateWithoutChat_conversationsInput, chat_messagesUncheckedUpdateWithoutChat_conversationsInput>
  }

  export type chat_messagesUpdateManyWithWhereWithoutChat_conversationsInput = {
    where: chat_messagesScalarWhereInput
    data: XOR<chat_messagesUpdateManyMutationInput, chat_messagesUncheckedUpdateManyWithoutChat_conversationsInput>
  }

  export type chat_messagesScalarWhereInput = {
    AND?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
    OR?: chat_messagesScalarWhereInput[]
    NOT?: chat_messagesScalarWhereInput | chat_messagesScalarWhereInput[]
    id?: UuidFilter<"chat_messages"> | string
    user_id?: UuidNullableFilter<"chat_messages"> | string | null
    client_id?: UuidNullableFilter<"chat_messages"> | string | null
    conversation_id?: UuidNullableFilter<"chat_messages"> | string | null
    content?: StringFilter<"chat_messages"> | string
    is_ai_response?: BoolNullableFilter<"chat_messages"> | boolean | null
    created_at?: DateTimeNullableFilter<"chat_messages"> | Date | string | null
  }

  export type clientsCreateWithoutChat_messagesInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutChat_messagesInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutChat_messagesInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutChat_messagesInput, clientsUncheckedCreateWithoutChat_messagesInput>
  }

  export type chat_conversationsCreateWithoutChat_messagesInput = {
    id?: string
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutChat_conversationsInput
    users?: usersCreateNestedOneWithoutChat_conversationsInput
  }

  export type chat_conversationsUncheckedCreateWithoutChat_messagesInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type chat_conversationsCreateOrConnectWithoutChat_messagesInput = {
    where: chat_conversationsWhereUniqueInput
    create: XOR<chat_conversationsCreateWithoutChat_messagesInput, chat_conversationsUncheckedCreateWithoutChat_messagesInput>
  }

  export type usersCreateWithoutChat_messagesInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutChat_messagesInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutChat_messagesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutChat_messagesInput, usersUncheckedCreateWithoutChat_messagesInput>
  }

  export type clientsUpsertWithoutChat_messagesInput = {
    update: XOR<clientsUpdateWithoutChat_messagesInput, clientsUncheckedUpdateWithoutChat_messagesInput>
    create: XOR<clientsCreateWithoutChat_messagesInput, clientsUncheckedCreateWithoutChat_messagesInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutChat_messagesInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutChat_messagesInput, clientsUncheckedUpdateWithoutChat_messagesInput>
  }

  export type clientsUpdateWithoutChat_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutChat_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type chat_conversationsUpsertWithoutChat_messagesInput = {
    update: XOR<chat_conversationsUpdateWithoutChat_messagesInput, chat_conversationsUncheckedUpdateWithoutChat_messagesInput>
    create: XOR<chat_conversationsCreateWithoutChat_messagesInput, chat_conversationsUncheckedCreateWithoutChat_messagesInput>
    where?: chat_conversationsWhereInput
  }

  export type chat_conversationsUpdateToOneWithWhereWithoutChat_messagesInput = {
    where?: chat_conversationsWhereInput
    data: XOR<chat_conversationsUpdateWithoutChat_messagesInput, chat_conversationsUncheckedUpdateWithoutChat_messagesInput>
  }

  export type chat_conversationsUpdateWithoutChat_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutChat_conversationsNestedInput
    users?: usersUpdateOneWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsUncheckedUpdateWithoutChat_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutChat_messagesInput = {
    update: XOR<usersUpdateWithoutChat_messagesInput, usersUncheckedUpdateWithoutChat_messagesInput>
    create: XOR<usersCreateWithoutChat_messagesInput, usersUncheckedCreateWithoutChat_messagesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutChat_messagesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutChat_messagesInput, usersUncheckedUpdateWithoutChat_messagesInput>
  }

  export type usersUpdateWithoutChat_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutChat_messagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type activity_logCreateWithoutClientsInput = {
    id?: string
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    users?: usersCreateNestedOneWithoutActivity_logInput
  }

  export type activity_logUncheckedCreateWithoutClientsInput = {
    id?: string
    user_id?: string | null
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type activity_logCreateOrConnectWithoutClientsInput = {
    where: activity_logWhereUniqueInput
    create: XOR<activity_logCreateWithoutClientsInput, activity_logUncheckedCreateWithoutClientsInput>
  }

  export type activity_logCreateManyClientsInputEnvelope = {
    data: activity_logCreateManyClientsInput | activity_logCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type ad_metricsCreateWithoutClientsInput = {
    id?: string
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
    products?: productsCreateNestedOneWithoutAd_metricsInput
  }

  export type ad_metricsUncheckedCreateWithoutClientsInput = {
    id?: string
    product_id?: string | null
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
  }

  export type ad_metricsCreateOrConnectWithoutClientsInput = {
    where: ad_metricsWhereUniqueInput
    create: XOR<ad_metricsCreateWithoutClientsInput, ad_metricsUncheckedCreateWithoutClientsInput>
  }

  export type ad_metricsCreateManyClientsInputEnvelope = {
    data: ad_metricsCreateManyClientsInput | ad_metricsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type ai_requestsCreateWithoutClientsInput = {
    id?: string
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
    users?: usersCreateNestedOneWithoutAi_requestsInput
  }

  export type ai_requestsUncheckedCreateWithoutClientsInput = {
    id?: string
    user_id?: string | null
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
  }

  export type ai_requestsCreateOrConnectWithoutClientsInput = {
    where: ai_requestsWhereUniqueInput
    create: XOR<ai_requestsCreateWithoutClientsInput, ai_requestsUncheckedCreateWithoutClientsInput>
  }

  export type ai_requestsCreateManyClientsInputEnvelope = {
    data: ai_requestsCreateManyClientsInput | ai_requestsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type analysesCreateWithoutClientsInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    analysis_results?: analysis_resultsCreateNestedManyWithoutAnalysesInput
    images?: imagesCreateNestedManyWithoutAnalysesInput
    reports?: reportsCreateNestedManyWithoutAnalysesInput
  }

  export type analysesUncheckedCreateWithoutClientsInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    analysis_results?: analysis_resultsUncheckedCreateNestedManyWithoutAnalysesInput
    images?: imagesUncheckedCreateNestedManyWithoutAnalysesInput
    reports?: reportsUncheckedCreateNestedManyWithoutAnalysesInput
  }

  export type analysesCreateOrConnectWithoutClientsInput = {
    where: analysesWhereUniqueInput
    create: XOR<analysesCreateWithoutClientsInput, analysesUncheckedCreateWithoutClientsInput>
  }

  export type analysesCreateManyClientsInputEnvelope = {
    data: analysesCreateManyClientsInput | analysesCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type chat_conversationsCreateWithoutClientsInput = {
    id?: string
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    users?: usersCreateNestedOneWithoutChat_conversationsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutChat_conversationsInput
  }

  export type chat_conversationsUncheckedCreateWithoutClientsInput = {
    id?: string
    user_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutChat_conversationsInput
  }

  export type chat_conversationsCreateOrConnectWithoutClientsInput = {
    where: chat_conversationsWhereUniqueInput
    create: XOR<chat_conversationsCreateWithoutClientsInput, chat_conversationsUncheckedCreateWithoutClientsInput>
  }

  export type chat_conversationsCreateManyClientsInputEnvelope = {
    data: chat_conversationsCreateManyClientsInput | chat_conversationsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type chat_messagesCreateWithoutClientsInput = {
    id?: string
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
    chat_conversations?: chat_conversationsCreateNestedOneWithoutChat_messagesInput
    users?: usersCreateNestedOneWithoutChat_messagesInput
  }

  export type chat_messagesUncheckedCreateWithoutClientsInput = {
    id?: string
    user_id?: string | null
    conversation_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type chat_messagesCreateOrConnectWithoutClientsInput = {
    where: chat_messagesWhereUniqueInput
    create: XOR<chat_messagesCreateWithoutClientsInput, chat_messagesUncheckedCreateWithoutClientsInput>
  }

  export type chat_messagesCreateManyClientsInputEnvelope = {
    data: chat_messagesCreateManyClientsInput | chat_messagesCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type productsCreateWithoutClientsInput = {
    id?: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ad_metrics?: ad_metricsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutClientsInput = {
    id?: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutClientsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutClientsInput, productsUncheckedCreateWithoutClientsInput>
  }

  export type productsCreateManyClientsInputEnvelope = {
    data: productsCreateManyClientsInput | productsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type reportsCreateWithoutClientsInput = {
    id?: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesCreateNestedManyWithoutReportsInput
    report_metrics?: report_metricsCreateNestedManyWithoutReportsInput
    analyses?: analysesCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateWithoutClientsInput = {
    id?: string
    analysis_id?: string | null
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesUncheckedCreateNestedManyWithoutReportsInput
    report_metrics?: report_metricsUncheckedCreateNestedManyWithoutReportsInput
  }

  export type reportsCreateOrConnectWithoutClientsInput = {
    where: reportsWhereUniqueInput
    create: XOR<reportsCreateWithoutClientsInput, reportsUncheckedCreateWithoutClientsInput>
  }

  export type reportsCreateManyClientsInputEnvelope = {
    data: reportsCreateManyClientsInput | reportsCreateManyClientsInput[]
    skipDuplicates?: boolean
  }

  export type activity_logUpsertWithWhereUniqueWithoutClientsInput = {
    where: activity_logWhereUniqueInput
    update: XOR<activity_logUpdateWithoutClientsInput, activity_logUncheckedUpdateWithoutClientsInput>
    create: XOR<activity_logCreateWithoutClientsInput, activity_logUncheckedCreateWithoutClientsInput>
  }

  export type activity_logUpdateWithWhereUniqueWithoutClientsInput = {
    where: activity_logWhereUniqueInput
    data: XOR<activity_logUpdateWithoutClientsInput, activity_logUncheckedUpdateWithoutClientsInput>
  }

  export type activity_logUpdateManyWithWhereWithoutClientsInput = {
    where: activity_logScalarWhereInput
    data: XOR<activity_logUpdateManyMutationInput, activity_logUncheckedUpdateManyWithoutClientsInput>
  }

  export type activity_logScalarWhereInput = {
    AND?: activity_logScalarWhereInput | activity_logScalarWhereInput[]
    OR?: activity_logScalarWhereInput[]
    NOT?: activity_logScalarWhereInput | activity_logScalarWhereInput[]
    id?: UuidFilter<"activity_log"> | string
    user_id?: UuidNullableFilter<"activity_log"> | string | null
    client_id?: UuidNullableFilter<"activity_log"> | string | null
    action?: StringFilter<"activity_log"> | string
    entity_type?: StringFilter<"activity_log"> | string
    entity_id?: UuidNullableFilter<"activity_log"> | string | null
    details?: JsonNullableFilter<"activity_log">
    created_at?: DateTimeNullableFilter<"activity_log"> | Date | string | null
  }

  export type ad_metricsUpsertWithWhereUniqueWithoutClientsInput = {
    where: ad_metricsWhereUniqueInput
    update: XOR<ad_metricsUpdateWithoutClientsInput, ad_metricsUncheckedUpdateWithoutClientsInput>
    create: XOR<ad_metricsCreateWithoutClientsInput, ad_metricsUncheckedCreateWithoutClientsInput>
  }

  export type ad_metricsUpdateWithWhereUniqueWithoutClientsInput = {
    where: ad_metricsWhereUniqueInput
    data: XOR<ad_metricsUpdateWithoutClientsInput, ad_metricsUncheckedUpdateWithoutClientsInput>
  }

  export type ad_metricsUpdateManyWithWhereWithoutClientsInput = {
    where: ad_metricsScalarWhereInput
    data: XOR<ad_metricsUpdateManyMutationInput, ad_metricsUncheckedUpdateManyWithoutClientsInput>
  }

  export type ad_metricsScalarWhereInput = {
    AND?: ad_metricsScalarWhereInput | ad_metricsScalarWhereInput[]
    OR?: ad_metricsScalarWhereInput[]
    NOT?: ad_metricsScalarWhereInput | ad_metricsScalarWhereInput[]
    id?: UuidFilter<"ad_metrics"> | string
    client_id?: UuidFilter<"ad_metrics"> | string
    product_id?: UuidNullableFilter<"ad_metrics"> | string | null
    ad_type?: StringFilter<"ad_metrics"> | string
    impressions?: IntNullableFilter<"ad_metrics"> | number | null
    clicks?: IntNullableFilter<"ad_metrics"> | number | null
    ctr?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    spend?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    conversions?: IntNullableFilter<"ad_metrics"> | number | null
    roas?: DecimalNullableFilter<"ad_metrics"> | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFilter<"ad_metrics"> | Date | string
    created_at?: DateTimeNullableFilter<"ad_metrics"> | Date | string | null
  }

  export type ai_requestsUpsertWithWhereUniqueWithoutClientsInput = {
    where: ai_requestsWhereUniqueInput
    update: XOR<ai_requestsUpdateWithoutClientsInput, ai_requestsUncheckedUpdateWithoutClientsInput>
    create: XOR<ai_requestsCreateWithoutClientsInput, ai_requestsUncheckedCreateWithoutClientsInput>
  }

  export type ai_requestsUpdateWithWhereUniqueWithoutClientsInput = {
    where: ai_requestsWhereUniqueInput
    data: XOR<ai_requestsUpdateWithoutClientsInput, ai_requestsUncheckedUpdateWithoutClientsInput>
  }

  export type ai_requestsUpdateManyWithWhereWithoutClientsInput = {
    where: ai_requestsScalarWhereInput
    data: XOR<ai_requestsUpdateManyMutationInput, ai_requestsUncheckedUpdateManyWithoutClientsInput>
  }

  export type ai_requestsScalarWhereInput = {
    AND?: ai_requestsScalarWhereInput | ai_requestsScalarWhereInput[]
    OR?: ai_requestsScalarWhereInput[]
    NOT?: ai_requestsScalarWhereInput | ai_requestsScalarWhereInput[]
    id?: UuidFilter<"ai_requests"> | string
    user_id?: UuidNullableFilter<"ai_requests"> | string | null
    client_id?: UuidNullableFilter<"ai_requests"> | string | null
    prompt?: StringFilter<"ai_requests"> | string
    response?: StringNullableFilter<"ai_requests"> | string | null
    model?: StringNullableFilter<"ai_requests"> | string | null
    tokens_used?: IntNullableFilter<"ai_requests"> | number | null
    processing_time?: IntNullableFilter<"ai_requests"> | number | null
    created_at?: DateTimeNullableFilter<"ai_requests"> | Date | string | null
  }

  export type analysesUpsertWithWhereUniqueWithoutClientsInput = {
    where: analysesWhereUniqueInput
    update: XOR<analysesUpdateWithoutClientsInput, analysesUncheckedUpdateWithoutClientsInput>
    create: XOR<analysesCreateWithoutClientsInput, analysesUncheckedCreateWithoutClientsInput>
  }

  export type analysesUpdateWithWhereUniqueWithoutClientsInput = {
    where: analysesWhereUniqueInput
    data: XOR<analysesUpdateWithoutClientsInput, analysesUncheckedUpdateWithoutClientsInput>
  }

  export type analysesUpdateManyWithWhereWithoutClientsInput = {
    where: analysesScalarWhereInput
    data: XOR<analysesUpdateManyMutationInput, analysesUncheckedUpdateManyWithoutClientsInput>
  }

  export type analysesScalarWhereInput = {
    AND?: analysesScalarWhereInput | analysesScalarWhereInput[]
    OR?: analysesScalarWhereInput[]
    NOT?: analysesScalarWhereInput | analysesScalarWhereInput[]
    id?: UuidFilter<"analyses"> | string
    client_id?: UuidFilter<"analyses"> | string
    type?: StringFilter<"analyses"> | string
    title?: StringNullableFilter<"analyses"> | string | null
    created_at?: DateTimeNullableFilter<"analyses"> | Date | string | null
  }

  export type chat_conversationsUpsertWithWhereUniqueWithoutClientsInput = {
    where: chat_conversationsWhereUniqueInput
    update: XOR<chat_conversationsUpdateWithoutClientsInput, chat_conversationsUncheckedUpdateWithoutClientsInput>
    create: XOR<chat_conversationsCreateWithoutClientsInput, chat_conversationsUncheckedCreateWithoutClientsInput>
  }

  export type chat_conversationsUpdateWithWhereUniqueWithoutClientsInput = {
    where: chat_conversationsWhereUniqueInput
    data: XOR<chat_conversationsUpdateWithoutClientsInput, chat_conversationsUncheckedUpdateWithoutClientsInput>
  }

  export type chat_conversationsUpdateManyWithWhereWithoutClientsInput = {
    where: chat_conversationsScalarWhereInput
    data: XOR<chat_conversationsUpdateManyMutationInput, chat_conversationsUncheckedUpdateManyWithoutClientsInput>
  }

  export type chat_conversationsScalarWhereInput = {
    AND?: chat_conversationsScalarWhereInput | chat_conversationsScalarWhereInput[]
    OR?: chat_conversationsScalarWhereInput[]
    NOT?: chat_conversationsScalarWhereInput | chat_conversationsScalarWhereInput[]
    id?: UuidFilter<"chat_conversations"> | string
    user_id?: UuidNullableFilter<"chat_conversations"> | string | null
    client_id?: UuidNullableFilter<"chat_conversations"> | string | null
    title?: StringNullableFilter<"chat_conversations"> | string | null
    created_at?: DateTimeNullableFilter<"chat_conversations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"chat_conversations"> | Date | string | null
  }

  export type chat_messagesUpsertWithWhereUniqueWithoutClientsInput = {
    where: chat_messagesWhereUniqueInput
    update: XOR<chat_messagesUpdateWithoutClientsInput, chat_messagesUncheckedUpdateWithoutClientsInput>
    create: XOR<chat_messagesCreateWithoutClientsInput, chat_messagesUncheckedCreateWithoutClientsInput>
  }

  export type chat_messagesUpdateWithWhereUniqueWithoutClientsInput = {
    where: chat_messagesWhereUniqueInput
    data: XOR<chat_messagesUpdateWithoutClientsInput, chat_messagesUncheckedUpdateWithoutClientsInput>
  }

  export type chat_messagesUpdateManyWithWhereWithoutClientsInput = {
    where: chat_messagesScalarWhereInput
    data: XOR<chat_messagesUpdateManyMutationInput, chat_messagesUncheckedUpdateManyWithoutClientsInput>
  }

  export type productsUpsertWithWhereUniqueWithoutClientsInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutClientsInput, productsUncheckedUpdateWithoutClientsInput>
    create: XOR<productsCreateWithoutClientsInput, productsUncheckedCreateWithoutClientsInput>
  }

  export type productsUpdateWithWhereUniqueWithoutClientsInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutClientsInput, productsUncheckedUpdateWithoutClientsInput>
  }

  export type productsUpdateManyWithWhereWithoutClientsInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutClientsInput>
  }

  export type productsScalarWhereInput = {
    AND?: productsScalarWhereInput | productsScalarWhereInput[]
    OR?: productsScalarWhereInput[]
    NOT?: productsScalarWhereInput | productsScalarWhereInput[]
    id?: UuidFilter<"products"> | string
    client_id?: UuidFilter<"products"> | string
    product_id?: StringNullableFilter<"products"> | string | null
    name?: StringFilter<"products"> | string
    price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    original_price?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    stock?: IntNullableFilter<"products"> | number | null
    views?: IntNullableFilter<"products"> | number | null
    sales?: IntNullableFilter<"products"> | number | null
    conversion_rate?: DecimalNullableFilter<"products"> | Decimal | DecimalJsLike | number | string | null
    category?: StringNullableFilter<"products"> | string | null
    created_at?: DateTimeNullableFilter<"products"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"products"> | Date | string | null
  }

  export type reportsUpsertWithWhereUniqueWithoutClientsInput = {
    where: reportsWhereUniqueInput
    update: XOR<reportsUpdateWithoutClientsInput, reportsUncheckedUpdateWithoutClientsInput>
    create: XOR<reportsCreateWithoutClientsInput, reportsUncheckedCreateWithoutClientsInput>
  }

  export type reportsUpdateWithWhereUniqueWithoutClientsInput = {
    where: reportsWhereUniqueInput
    data: XOR<reportsUpdateWithoutClientsInput, reportsUncheckedUpdateWithoutClientsInput>
  }

  export type reportsUpdateManyWithWhereWithoutClientsInput = {
    where: reportsScalarWhereInput
    data: XOR<reportsUpdateManyMutationInput, reportsUncheckedUpdateManyWithoutClientsInput>
  }

  export type usersCreateWithoutConfigurationsInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutConfigurationsInput = {
    id?: string
    name: string
    email: string
    password: string
    role?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutUsersInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutUsersInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutUsersInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutConfigurationsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
  }

  export type usersUpsertWithoutConfigurationsInput = {
    update: XOR<usersUpdateWithoutConfigurationsInput, usersUncheckedUpdateWithoutConfigurationsInput>
    create: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutConfigurationsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutConfigurationsInput, usersUncheckedUpdateWithoutConfigurationsInput>
  }

  export type usersUpdateWithoutConfigurationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutConfigurationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutUsersNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutUsersNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutUsersNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type analysesCreateWithoutImagesInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutAnalysesInput
    analysis_results?: analysis_resultsCreateNestedManyWithoutAnalysesInput
    reports?: reportsCreateNestedManyWithoutAnalysesInput
  }

  export type analysesUncheckedCreateWithoutImagesInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    analysis_results?: analysis_resultsUncheckedCreateNestedManyWithoutAnalysesInput
    reports?: reportsUncheckedCreateNestedManyWithoutAnalysesInput
  }

  export type analysesCreateOrConnectWithoutImagesInput = {
    where: analysesWhereUniqueInput
    create: XOR<analysesCreateWithoutImagesInput, analysesUncheckedCreateWithoutImagesInput>
  }

  export type reportsCreateWithoutImagesInput = {
    id?: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    report_metrics?: report_metricsCreateNestedManyWithoutReportsInput
    analyses?: analysesCreateNestedOneWithoutReportsInput
    clients: clientsCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateWithoutImagesInput = {
    id?: string
    client_id: string
    analysis_id?: string | null
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    report_metrics?: report_metricsUncheckedCreateNestedManyWithoutReportsInput
  }

  export type reportsCreateOrConnectWithoutImagesInput = {
    where: reportsWhereUniqueInput
    create: XOR<reportsCreateWithoutImagesInput, reportsUncheckedCreateWithoutImagesInput>
  }

  export type analysesUpsertWithoutImagesInput = {
    update: XOR<analysesUpdateWithoutImagesInput, analysesUncheckedUpdateWithoutImagesInput>
    create: XOR<analysesCreateWithoutImagesInput, analysesUncheckedCreateWithoutImagesInput>
    where?: analysesWhereInput
  }

  export type analysesUpdateToOneWithWhereWithoutImagesInput = {
    where?: analysesWhereInput
    data: XOR<analysesUpdateWithoutImagesInput, analysesUncheckedUpdateWithoutImagesInput>
  }

  export type analysesUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutAnalysesNestedInput
    analysis_results?: analysis_resultsUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesUncheckedUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analysis_results?: analysis_resultsUncheckedUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutAnalysesNestedInput
  }

  export type reportsUpsertWithoutImagesInput = {
    update: XOR<reportsUpdateWithoutImagesInput, reportsUncheckedUpdateWithoutImagesInput>
    create: XOR<reportsCreateWithoutImagesInput, reportsUncheckedCreateWithoutImagesInput>
    where?: reportsWhereInput
  }

  export type reportsUpdateToOneWithWhereWithoutImagesInput = {
    where?: reportsWhereInput
    data: XOR<reportsUpdateWithoutImagesInput, reportsUncheckedUpdateWithoutImagesInput>
  }

  export type reportsUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    report_metrics?: report_metricsUpdateManyWithoutReportsNestedInput
    analyses?: analysesUpdateOneWithoutReportsNestedInput
    clients?: clientsUpdateOneRequiredWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    report_metrics?: report_metricsUncheckedUpdateManyWithoutReportsNestedInput
  }

  export type ad_metricsCreateWithoutProductsInput = {
    id?: string
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutAd_metricsInput
  }

  export type ad_metricsUncheckedCreateWithoutProductsInput = {
    id?: string
    client_id: string
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
  }

  export type ad_metricsCreateOrConnectWithoutProductsInput = {
    where: ad_metricsWhereUniqueInput
    create: XOR<ad_metricsCreateWithoutProductsInput, ad_metricsUncheckedCreateWithoutProductsInput>
  }

  export type ad_metricsCreateManyProductsInputEnvelope = {
    data: ad_metricsCreateManyProductsInput | ad_metricsCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type clientsCreateWithoutProductsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    reports?: reportsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    reports?: reportsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutProductsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutProductsInput, clientsUncheckedCreateWithoutProductsInput>
  }

  export type ad_metricsUpsertWithWhereUniqueWithoutProductsInput = {
    where: ad_metricsWhereUniqueInput
    update: XOR<ad_metricsUpdateWithoutProductsInput, ad_metricsUncheckedUpdateWithoutProductsInput>
    create: XOR<ad_metricsCreateWithoutProductsInput, ad_metricsUncheckedCreateWithoutProductsInput>
  }

  export type ad_metricsUpdateWithWhereUniqueWithoutProductsInput = {
    where: ad_metricsWhereUniqueInput
    data: XOR<ad_metricsUpdateWithoutProductsInput, ad_metricsUncheckedUpdateWithoutProductsInput>
  }

  export type ad_metricsUpdateManyWithWhereWithoutProductsInput = {
    where: ad_metricsScalarWhereInput
    data: XOR<ad_metricsUpdateManyMutationInput, ad_metricsUncheckedUpdateManyWithoutProductsInput>
  }

  export type clientsUpsertWithoutProductsInput = {
    update: XOR<clientsUpdateWithoutProductsInput, clientsUncheckedUpdateWithoutProductsInput>
    create: XOR<clientsCreateWithoutProductsInput, clientsUncheckedCreateWithoutProductsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutProductsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutProductsInput, clientsUncheckedUpdateWithoutProductsInput>
  }

  export type clientsUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    reports?: reportsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    reports?: reportsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type reportsCreateWithoutReport_metricsInput = {
    id?: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesCreateNestedManyWithoutReportsInput
    analyses?: analysesCreateNestedOneWithoutReportsInput
    clients: clientsCreateNestedOneWithoutReportsInput
  }

  export type reportsUncheckedCreateWithoutReport_metricsInput = {
    id?: string
    client_id: string
    analysis_id?: string | null
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
    images?: imagesUncheckedCreateNestedManyWithoutReportsInput
  }

  export type reportsCreateOrConnectWithoutReport_metricsInput = {
    where: reportsWhereUniqueInput
    create: XOR<reportsCreateWithoutReport_metricsInput, reportsUncheckedCreateWithoutReport_metricsInput>
  }

  export type reportsUpsertWithoutReport_metricsInput = {
    update: XOR<reportsUpdateWithoutReport_metricsInput, reportsUncheckedUpdateWithoutReport_metricsInput>
    create: XOR<reportsCreateWithoutReport_metricsInput, reportsUncheckedCreateWithoutReport_metricsInput>
    where?: reportsWhereInput
  }

  export type reportsUpdateToOneWithWhereWithoutReport_metricsInput = {
    where?: reportsWhereInput
    data: XOR<reportsUpdateWithoutReport_metricsInput, reportsUncheckedUpdateWithoutReport_metricsInput>
  }

  export type reportsUpdateWithoutReport_metricsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUpdateManyWithoutReportsNestedInput
    analyses?: analysesUpdateOneWithoutReportsNestedInput
    clients?: clientsUpdateOneRequiredWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateWithoutReport_metricsInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUncheckedUpdateManyWithoutReportsNestedInput
  }

  export type imagesCreateWithoutReportsInput = {
    id?: string
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
    analyses?: analysesCreateNestedOneWithoutImagesInput
  }

  export type imagesUncheckedCreateWithoutReportsInput = {
    id?: string
    analysis_id?: string | null
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
  }

  export type imagesCreateOrConnectWithoutReportsInput = {
    where: imagesWhereUniqueInput
    create: XOR<imagesCreateWithoutReportsInput, imagesUncheckedCreateWithoutReportsInput>
  }

  export type imagesCreateManyReportsInputEnvelope = {
    data: imagesCreateManyReportsInput | imagesCreateManyReportsInput[]
    skipDuplicates?: boolean
  }

  export type report_metricsCreateWithoutReportsInput = {
    id?: string
    metric_name: string
    metric_value: string
    previous_value?: string | null
    change_percentage?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
  }

  export type report_metricsUncheckedCreateWithoutReportsInput = {
    id?: string
    metric_name: string
    metric_value: string
    previous_value?: string | null
    change_percentage?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
  }

  export type report_metricsCreateOrConnectWithoutReportsInput = {
    where: report_metricsWhereUniqueInput
    create: XOR<report_metricsCreateWithoutReportsInput, report_metricsUncheckedCreateWithoutReportsInput>
  }

  export type report_metricsCreateManyReportsInputEnvelope = {
    data: report_metricsCreateManyReportsInput | report_metricsCreateManyReportsInput[]
    skipDuplicates?: boolean
  }

  export type analysesCreateWithoutReportsInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    clients: clientsCreateNestedOneWithoutAnalysesInput
    analysis_results?: analysis_resultsCreateNestedManyWithoutAnalysesInput
    images?: imagesCreateNestedManyWithoutAnalysesInput
  }

  export type analysesUncheckedCreateWithoutReportsInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    created_at?: Date | string | null
    analysis_results?: analysis_resultsUncheckedCreateNestedManyWithoutAnalysesInput
    images?: imagesUncheckedCreateNestedManyWithoutAnalysesInput
  }

  export type analysesCreateOrConnectWithoutReportsInput = {
    where: analysesWhereUniqueInput
    create: XOR<analysesCreateWithoutReportsInput, analysesUncheckedCreateWithoutReportsInput>
  }

  export type clientsCreateWithoutReportsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsCreateNestedManyWithoutClientsInput
    analyses?: analysesCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutClientsInput
    products?: productsCreateNestedManyWithoutClientsInput
  }

  export type clientsUncheckedCreateWithoutReportsInput = {
    id?: string
    name: string
    owner_name: string
    shop_url?: string | null
    followers?: number | null
    rating?: Decimal | DecimalJsLike | number | string | null
    registration_date?: Date | string | null
    product_count?: number | null
    response_rate?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    activity_log?: activity_logUncheckedCreateNestedManyWithoutClientsInput
    ad_metrics?: ad_metricsUncheckedCreateNestedManyWithoutClientsInput
    ai_requests?: ai_requestsUncheckedCreateNestedManyWithoutClientsInput
    analyses?: analysesUncheckedCreateNestedManyWithoutClientsInput
    chat_conversations?: chat_conversationsUncheckedCreateNestedManyWithoutClientsInput
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutClientsInput
    products?: productsUncheckedCreateNestedManyWithoutClientsInput
  }

  export type clientsCreateOrConnectWithoutReportsInput = {
    where: clientsWhereUniqueInput
    create: XOR<clientsCreateWithoutReportsInput, clientsUncheckedCreateWithoutReportsInput>
  }

  export type imagesUpsertWithWhereUniqueWithoutReportsInput = {
    where: imagesWhereUniqueInput
    update: XOR<imagesUpdateWithoutReportsInput, imagesUncheckedUpdateWithoutReportsInput>
    create: XOR<imagesCreateWithoutReportsInput, imagesUncheckedCreateWithoutReportsInput>
  }

  export type imagesUpdateWithWhereUniqueWithoutReportsInput = {
    where: imagesWhereUniqueInput
    data: XOR<imagesUpdateWithoutReportsInput, imagesUncheckedUpdateWithoutReportsInput>
  }

  export type imagesUpdateManyWithWhereWithoutReportsInput = {
    where: imagesScalarWhereInput
    data: XOR<imagesUpdateManyMutationInput, imagesUncheckedUpdateManyWithoutReportsInput>
  }

  export type report_metricsUpsertWithWhereUniqueWithoutReportsInput = {
    where: report_metricsWhereUniqueInput
    update: XOR<report_metricsUpdateWithoutReportsInput, report_metricsUncheckedUpdateWithoutReportsInput>
    create: XOR<report_metricsCreateWithoutReportsInput, report_metricsUncheckedCreateWithoutReportsInput>
  }

  export type report_metricsUpdateWithWhereUniqueWithoutReportsInput = {
    where: report_metricsWhereUniqueInput
    data: XOR<report_metricsUpdateWithoutReportsInput, report_metricsUncheckedUpdateWithoutReportsInput>
  }

  export type report_metricsUpdateManyWithWhereWithoutReportsInput = {
    where: report_metricsScalarWhereInput
    data: XOR<report_metricsUpdateManyMutationInput, report_metricsUncheckedUpdateManyWithoutReportsInput>
  }

  export type report_metricsScalarWhereInput = {
    AND?: report_metricsScalarWhereInput | report_metricsScalarWhereInput[]
    OR?: report_metricsScalarWhereInput[]
    NOT?: report_metricsScalarWhereInput | report_metricsScalarWhereInput[]
    id?: UuidFilter<"report_metrics"> | string
    report_id?: UuidFilter<"report_metrics"> | string
    metric_name?: StringFilter<"report_metrics"> | string
    metric_value?: StringFilter<"report_metrics"> | string
    previous_value?: StringNullableFilter<"report_metrics"> | string | null
    change_percentage?: DecimalNullableFilter<"report_metrics"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeNullableFilter<"report_metrics"> | Date | string | null
  }

  export type analysesUpsertWithoutReportsInput = {
    update: XOR<analysesUpdateWithoutReportsInput, analysesUncheckedUpdateWithoutReportsInput>
    create: XOR<analysesCreateWithoutReportsInput, analysesUncheckedCreateWithoutReportsInput>
    where?: analysesWhereInput
  }

  export type analysesUpdateToOneWithWhereWithoutReportsInput = {
    where?: analysesWhereInput
    data: XOR<analysesUpdateWithoutReportsInput, analysesUncheckedUpdateWithoutReportsInput>
  }

  export type analysesUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutAnalysesNestedInput
    analysis_results?: analysis_resultsUpdateManyWithoutAnalysesNestedInput
    images?: imagesUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analysis_results?: analysis_resultsUncheckedUpdateManyWithoutAnalysesNestedInput
    images?: imagesUncheckedUpdateManyWithoutAnalysesNestedInput
  }

  export type clientsUpsertWithoutReportsInput = {
    update: XOR<clientsUpdateWithoutReportsInput, clientsUncheckedUpdateWithoutReportsInput>
    create: XOR<clientsCreateWithoutReportsInput, clientsUncheckedCreateWithoutReportsInput>
    where?: clientsWhereInput
  }

  export type clientsUpdateToOneWithWhereWithoutReportsInput = {
    where?: clientsWhereInput
    data: XOR<clientsUpdateWithoutReportsInput, clientsUncheckedUpdateWithoutReportsInput>
  }

  export type clientsUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUpdateManyWithoutClientsNestedInput
    analyses?: analysesUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutClientsNestedInput
    products?: productsUpdateManyWithoutClientsNestedInput
  }

  export type clientsUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    owner_name?: StringFieldUpdateOperationsInput | string
    shop_url?: NullableStringFieldUpdateOperationsInput | string | null
    followers?: NullableIntFieldUpdateOperationsInput | number | null
    rating?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    registration_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    product_count?: NullableIntFieldUpdateOperationsInput | number | null
    response_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    activity_log?: activity_logUncheckedUpdateManyWithoutClientsNestedInput
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutClientsNestedInput
    ai_requests?: ai_requestsUncheckedUpdateManyWithoutClientsNestedInput
    analyses?: analysesUncheckedUpdateManyWithoutClientsNestedInput
    chat_conversations?: chat_conversationsUncheckedUpdateManyWithoutClientsNestedInput
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutClientsNestedInput
    products?: productsUncheckedUpdateManyWithoutClientsNestedInput
  }

  export type activity_logCreateWithoutUsersInput = {
    id?: string
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutActivity_logInput
  }

  export type activity_logUncheckedCreateWithoutUsersInput = {
    id?: string
    client_id?: string | null
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type activity_logCreateOrConnectWithoutUsersInput = {
    where: activity_logWhereUniqueInput
    create: XOR<activity_logCreateWithoutUsersInput, activity_logUncheckedCreateWithoutUsersInput>
  }

  export type activity_logCreateManyUsersInputEnvelope = {
    data: activity_logCreateManyUsersInput | activity_logCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type ai_requestsCreateWithoutUsersInput = {
    id?: string
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutAi_requestsInput
  }

  export type ai_requestsUncheckedCreateWithoutUsersInput = {
    id?: string
    client_id?: string | null
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
  }

  export type ai_requestsCreateOrConnectWithoutUsersInput = {
    where: ai_requestsWhereUniqueInput
    create: XOR<ai_requestsCreateWithoutUsersInput, ai_requestsUncheckedCreateWithoutUsersInput>
  }

  export type ai_requestsCreateManyUsersInputEnvelope = {
    data: ai_requestsCreateManyUsersInput | ai_requestsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type chat_conversationsCreateWithoutUsersInput = {
    id?: string
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutChat_conversationsInput
    chat_messages?: chat_messagesCreateNestedManyWithoutChat_conversationsInput
  }

  export type chat_conversationsUncheckedCreateWithoutUsersInput = {
    id?: string
    client_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    chat_messages?: chat_messagesUncheckedCreateNestedManyWithoutChat_conversationsInput
  }

  export type chat_conversationsCreateOrConnectWithoutUsersInput = {
    where: chat_conversationsWhereUniqueInput
    create: XOR<chat_conversationsCreateWithoutUsersInput, chat_conversationsUncheckedCreateWithoutUsersInput>
  }

  export type chat_conversationsCreateManyUsersInputEnvelope = {
    data: chat_conversationsCreateManyUsersInput | chat_conversationsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type chat_messagesCreateWithoutUsersInput = {
    id?: string
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
    clients?: clientsCreateNestedOneWithoutChat_messagesInput
    chat_conversations?: chat_conversationsCreateNestedOneWithoutChat_messagesInput
  }

  export type chat_messagesUncheckedCreateWithoutUsersInput = {
    id?: string
    client_id?: string | null
    conversation_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type chat_messagesCreateOrConnectWithoutUsersInput = {
    where: chat_messagesWhereUniqueInput
    create: XOR<chat_messagesCreateWithoutUsersInput, chat_messagesUncheckedCreateWithoutUsersInput>
  }

  export type chat_messagesCreateManyUsersInputEnvelope = {
    data: chat_messagesCreateManyUsersInput | chat_messagesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type configurationsCreateWithoutUsersInput = {
    id?: string
    key: string
    value?: string | null
    is_global?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type configurationsUncheckedCreateWithoutUsersInput = {
    id?: string
    key: string
    value?: string | null
    is_global?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type configurationsCreateOrConnectWithoutUsersInput = {
    where: configurationsWhereUniqueInput
    create: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput>
  }

  export type configurationsCreateManyUsersInputEnvelope = {
    data: configurationsCreateManyUsersInput | configurationsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type activity_logUpsertWithWhereUniqueWithoutUsersInput = {
    where: activity_logWhereUniqueInput
    update: XOR<activity_logUpdateWithoutUsersInput, activity_logUncheckedUpdateWithoutUsersInput>
    create: XOR<activity_logCreateWithoutUsersInput, activity_logUncheckedCreateWithoutUsersInput>
  }

  export type activity_logUpdateWithWhereUniqueWithoutUsersInput = {
    where: activity_logWhereUniqueInput
    data: XOR<activity_logUpdateWithoutUsersInput, activity_logUncheckedUpdateWithoutUsersInput>
  }

  export type activity_logUpdateManyWithWhereWithoutUsersInput = {
    where: activity_logScalarWhereInput
    data: XOR<activity_logUpdateManyMutationInput, activity_logUncheckedUpdateManyWithoutUsersInput>
  }

  export type ai_requestsUpsertWithWhereUniqueWithoutUsersInput = {
    where: ai_requestsWhereUniqueInput
    update: XOR<ai_requestsUpdateWithoutUsersInput, ai_requestsUncheckedUpdateWithoutUsersInput>
    create: XOR<ai_requestsCreateWithoutUsersInput, ai_requestsUncheckedCreateWithoutUsersInput>
  }

  export type ai_requestsUpdateWithWhereUniqueWithoutUsersInput = {
    where: ai_requestsWhereUniqueInput
    data: XOR<ai_requestsUpdateWithoutUsersInput, ai_requestsUncheckedUpdateWithoutUsersInput>
  }

  export type ai_requestsUpdateManyWithWhereWithoutUsersInput = {
    where: ai_requestsScalarWhereInput
    data: XOR<ai_requestsUpdateManyMutationInput, ai_requestsUncheckedUpdateManyWithoutUsersInput>
  }

  export type chat_conversationsUpsertWithWhereUniqueWithoutUsersInput = {
    where: chat_conversationsWhereUniqueInput
    update: XOR<chat_conversationsUpdateWithoutUsersInput, chat_conversationsUncheckedUpdateWithoutUsersInput>
    create: XOR<chat_conversationsCreateWithoutUsersInput, chat_conversationsUncheckedCreateWithoutUsersInput>
  }

  export type chat_conversationsUpdateWithWhereUniqueWithoutUsersInput = {
    where: chat_conversationsWhereUniqueInput
    data: XOR<chat_conversationsUpdateWithoutUsersInput, chat_conversationsUncheckedUpdateWithoutUsersInput>
  }

  export type chat_conversationsUpdateManyWithWhereWithoutUsersInput = {
    where: chat_conversationsScalarWhereInput
    data: XOR<chat_conversationsUpdateManyMutationInput, chat_conversationsUncheckedUpdateManyWithoutUsersInput>
  }

  export type chat_messagesUpsertWithWhereUniqueWithoutUsersInput = {
    where: chat_messagesWhereUniqueInput
    update: XOR<chat_messagesUpdateWithoutUsersInput, chat_messagesUncheckedUpdateWithoutUsersInput>
    create: XOR<chat_messagesCreateWithoutUsersInput, chat_messagesUncheckedCreateWithoutUsersInput>
  }

  export type chat_messagesUpdateWithWhereUniqueWithoutUsersInput = {
    where: chat_messagesWhereUniqueInput
    data: XOR<chat_messagesUpdateWithoutUsersInput, chat_messagesUncheckedUpdateWithoutUsersInput>
  }

  export type chat_messagesUpdateManyWithWhereWithoutUsersInput = {
    where: chat_messagesScalarWhereInput
    data: XOR<chat_messagesUpdateManyMutationInput, chat_messagesUncheckedUpdateManyWithoutUsersInput>
  }

  export type configurationsUpsertWithWhereUniqueWithoutUsersInput = {
    where: configurationsWhereUniqueInput
    update: XOR<configurationsUpdateWithoutUsersInput, configurationsUncheckedUpdateWithoutUsersInput>
    create: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput>
  }

  export type configurationsUpdateWithWhereUniqueWithoutUsersInput = {
    where: configurationsWhereUniqueInput
    data: XOR<configurationsUpdateWithoutUsersInput, configurationsUncheckedUpdateWithoutUsersInput>
  }

  export type configurationsUpdateManyWithWhereWithoutUsersInput = {
    where: configurationsScalarWhereInput
    data: XOR<configurationsUpdateManyMutationInput, configurationsUncheckedUpdateManyWithoutUsersInput>
  }

  export type configurationsScalarWhereInput = {
    AND?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
    OR?: configurationsScalarWhereInput[]
    NOT?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
    id?: UuidFilter<"configurations"> | string
    user_id?: UuidNullableFilter<"configurations"> | string | null
    key?: StringFilter<"configurations"> | string
    value?: StringNullableFilter<"configurations"> | string | null
    is_global?: BoolNullableFilter<"configurations"> | boolean | null
    created_at?: DateTimeNullableFilter<"configurations"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"configurations"> | Date | string | null
  }

  export type analysis_resultsCreateManyAnalysesInput = {
    id?: string
    content: string
    source_image_url?: string | null
    processed_by?: string | null
    created_at?: Date | string | null
  }

  export type imagesCreateManyAnalysesInput = {
    id?: string
    report_id?: string | null
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
  }

  export type reportsCreateManyAnalysesInput = {
    id?: string
    client_id: string
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
  }

  export type analysis_resultsUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysis_resultsUncheckedUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysis_resultsUncheckedUpdateManyWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    source_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    processed_by?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reports?: reportsUpdateOneWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesUncheckedUpdateManyWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    report_id?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportsUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUpdateManyWithoutReportsNestedInput
    report_metrics?: report_metricsUpdateManyWithoutReportsNestedInput
    clients?: clientsUpdateOneRequiredWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUncheckedUpdateManyWithoutReportsNestedInput
    report_metrics?: report_metricsUncheckedUpdateManyWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateManyWithoutAnalysesInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesCreateManyChat_conversationsInput = {
    id?: string
    user_id?: string | null
    client_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type chat_messagesUpdateWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutChat_messagesNestedInput
    users?: usersUpdateOneWithoutChat_messagesNestedInput
  }

  export type chat_messagesUncheckedUpdateWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesUncheckedUpdateManyWithoutChat_conversationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type activity_logCreateManyClientsInput = {
    id?: string
    user_id?: string | null
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type ad_metricsCreateManyClientsInput = {
    id?: string
    product_id?: string | null
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
  }

  export type ai_requestsCreateManyClientsInput = {
    id?: string
    user_id?: string | null
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
  }

  export type analysesCreateManyClientsInput = {
    id?: string
    type: string
    title?: string | null
    created_at?: Date | string | null
  }

  export type chat_conversationsCreateManyClientsInput = {
    id?: string
    user_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type chat_messagesCreateManyClientsInput = {
    id?: string
    user_id?: string | null
    conversation_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type productsCreateManyClientsInput = {
    id?: string
    product_id?: string | null
    name: string
    price?: Decimal | DecimalJsLike | number | string | null
    original_price?: Decimal | DecimalJsLike | number | string | null
    stock?: number | null
    views?: number | null
    sales?: number | null
    conversion_rate?: Decimal | DecimalJsLike | number | string | null
    category?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type reportsCreateManyClientsInput = {
    id?: string
    analysis_id?: string | null
    type: string
    title?: string | null
    url?: string | null
    status?: string | null
    created_at?: Date | string | null
  }

  export type activity_logUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutActivity_logNestedInput
  }

  export type activity_logUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type activity_logUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    products?: productsUpdateOneWithoutAd_metricsNestedInput
  }

  export type ad_metricsUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutAi_requestsNestedInput
  }

  export type ai_requestsUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type analysesUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analysis_results?: analysis_resultsUpdateManyWithoutAnalysesNestedInput
    images?: imagesUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analysis_results?: analysis_resultsUncheckedUpdateManyWithoutAnalysesNestedInput
    images?: imagesUncheckedUpdateManyWithoutAnalysesNestedInput
    reports?: reportsUncheckedUpdateManyWithoutAnalysesNestedInput
  }

  export type analysesUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_conversationsUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneWithoutChat_conversationsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_conversations?: chat_conversationsUpdateOneWithoutChat_messagesNestedInput
    users?: usersUpdateOneWithoutChat_messagesNestedInput
  }

  export type chat_messagesUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    conversation_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    conversation_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ad_metrics?: ad_metricsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ad_metrics?: ad_metricsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    product_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    original_price?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    stock?: NullableIntFieldUpdateOperationsInput | number | null
    views?: NullableIntFieldUpdateOperationsInput | number | null
    sales?: NullableIntFieldUpdateOperationsInput | number | null
    conversion_rate?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type reportsUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUpdateManyWithoutReportsNestedInput
    report_metrics?: report_metricsUpdateManyWithoutReportsNestedInput
    analyses?: analysesUpdateOneWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    images?: imagesUncheckedUpdateManyWithoutReportsNestedInput
    report_metrics?: report_metricsUncheckedUpdateManyWithoutReportsNestedInput
  }

  export type reportsUncheckedUpdateManyWithoutClientsInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsCreateManyProductsInput = {
    id?: string
    client_id: string
    ad_type: string
    impressions?: number | null
    clicks?: number | null
    ctr?: Decimal | DecimalJsLike | number | string | null
    spend?: Decimal | DecimalJsLike | number | string | null
    conversions?: number | null
    roas?: Decimal | DecimalJsLike | number | string | null
    date: Date | string
    created_at?: Date | string | null
  }

  export type ad_metricsUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneRequiredWithoutAd_metricsNestedInput
  }

  export type ad_metricsUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ad_metricsUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: StringFieldUpdateOperationsInput | string
    ad_type?: StringFieldUpdateOperationsInput | string
    impressions?: NullableIntFieldUpdateOperationsInput | number | null
    clicks?: NullableIntFieldUpdateOperationsInput | number | null
    ctr?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    spend?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conversions?: NullableIntFieldUpdateOperationsInput | number | null
    roas?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesCreateManyReportsInput = {
    id?: string
    analysis_id?: string | null
    url: string
    original_filename?: string | null
    file_size?: number | null
    mime_type?: string | null
    created_at?: Date | string | null
  }

  export type report_metricsCreateManyReportsInput = {
    id?: string
    metric_name: string
    metric_value: string
    previous_value?: string | null
    change_percentage?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string | null
  }

  export type imagesUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    analyses?: analysesUpdateOneWithoutImagesNestedInput
  }

  export type imagesUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagesUncheckedUpdateManyWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    analysis_id?: NullableStringFieldUpdateOperationsInput | string | null
    url?: StringFieldUpdateOperationsInput | string
    original_filename?: NullableStringFieldUpdateOperationsInput | string | null
    file_size?: NullableIntFieldUpdateOperationsInput | number | null
    mime_type?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type report_metricsUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type report_metricsUncheckedUpdateWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type report_metricsUncheckedUpdateManyWithoutReportsInput = {
    id?: StringFieldUpdateOperationsInput | string
    metric_name?: StringFieldUpdateOperationsInput | string
    metric_value?: StringFieldUpdateOperationsInput | string
    previous_value?: NullableStringFieldUpdateOperationsInput | string | null
    change_percentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type activity_logCreateManyUsersInput = {
    id?: string
    client_id?: string | null
    action: string
    entity_type: string
    entity_id?: string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
  }

  export type ai_requestsCreateManyUsersInput = {
    id?: string
    client_id?: string | null
    prompt: string
    response?: string | null
    model?: string | null
    tokens_used?: number | null
    processing_time?: number | null
    created_at?: Date | string | null
  }

  export type chat_conversationsCreateManyUsersInput = {
    id?: string
    client_id?: string | null
    title?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type chat_messagesCreateManyUsersInput = {
    id?: string
    client_id?: string | null
    conversation_id?: string | null
    content: string
    is_ai_response?: boolean | null
    created_at?: Date | string | null
  }

  export type configurationsCreateManyUsersInput = {
    id?: string
    key: string
    value?: string | null
    is_global?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type activity_logUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutActivity_logNestedInput
  }

  export type activity_logUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type activity_logUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    entity_type?: StringFieldUpdateOperationsInput | string
    entity_id?: NullableStringFieldUpdateOperationsInput | string | null
    details?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutAi_requestsNestedInput
  }

  export type ai_requestsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ai_requestsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    prompt?: StringFieldUpdateOperationsInput | string
    response?: NullableStringFieldUpdateOperationsInput | string | null
    model?: NullableStringFieldUpdateOperationsInput | string | null
    tokens_used?: NullableIntFieldUpdateOperationsInput | number | null
    processing_time?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_conversationsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutChat_conversationsNestedInput
    chat_messages?: chat_messagesUpdateManyWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_messages?: chat_messagesUncheckedUpdateManyWithoutChat_conversationsNestedInput
  }

  export type chat_conversationsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    clients?: clientsUpdateOneWithoutChat_messagesNestedInput
    chat_conversations?: chat_conversationsUpdateOneWithoutChat_messagesNestedInput
  }

  export type chat_messagesUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    conversation_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_messagesUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    client_id?: NullableStringFieldUpdateOperationsInput | string | null
    conversation_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: StringFieldUpdateOperationsInput | string
    is_ai_response?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    key?: StringFieldUpdateOperationsInput | string
    value?: NullableStringFieldUpdateOperationsInput | string | null
    is_global?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}